{
    "format_version": "1.2",
    "terraform_version": "1.8.5",
    "variables": {
        "domain_name": {
            "value": "flipeon.com"
        },
        "environment": {
            "value": "dev"
        },
        "project_group": {
            "value": "grp-flipeon-dev"
        },
        "project_name": {
            "value": "flipeon"
        },
        "region": {
            "value": "us-east-1"
        },
        "use_eks": {
            "value": false
        }
    },
    "planned_values": {
        "root_module": {
            "resources": [
                {
                    "address": "aws_route53_zone.primary",
                    "mode": "managed",
                    "type": "aws_route53_zone",
                    "name": "primary",
                    "provider_name": "registry.terraform.io/hashicorp/aws",
                    "schema_version": 0,
                    "values": {
                        "comment": "Managed by Terraform",
                        "delegation_set_id": null,
                        "force_destroy": false,
                        "name": "dev.flipeon.com",
                        "tags": null,
                        "vpc": []
                    },
                    "sensitive_values": {
                        "name_servers": [],
                        "tags_all": {},
                        "vpc": []
                    }
                }
            ],
            "child_modules": [
                {
                    "resources": [
                        {
                            "address": "module.ecs_api.aws_ecs_cluster.main",
                            "mode": "managed",
                            "type": "aws_ecs_cluster",
                            "name": "main",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "configuration": [],
                                "name": "flipeon-api-dev",
                                "service_connect_defaults": [],
                                "tags": null
                            },
                            "sensitive_values": {
                                "configuration": [],
                                "service_connect_defaults": [],
                                "setting": [],
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.ecs_api.aws_ecs_service.main",
                            "mode": "managed",
                            "type": "aws_ecs_service",
                            "name": "main",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "alarms": [],
                                "capacity_provider_strategy": [],
                                "deployment_circuit_breaker": [],
                                "deployment_controller": [],
                                "deployment_maximum_percent": 200,
                                "deployment_minimum_healthy_percent": 50,
                                "desired_count": 1,
                                "enable_ecs_managed_tags": false,
                                "enable_execute_command": false,
                                "force_new_deployment": null,
                                "health_check_grace_period_seconds": null,
                                "launch_type": "FARGATE",
                                "load_balancer": [
                                    {
                                        "container_name": "flipeon-api-dev",
                                        "container_port": 80,
                                        "elb_name": ""
                                    }
                                ],
                                "name": "flipeon-api-dev",
                                "network_configuration": [
                                    {
                                        "assign_public_ip": true
                                    }
                                ],
                                "ordered_placement_strategy": [],
                                "placement_constraints": [],
                                "propagate_tags": null,
                                "scheduling_strategy": "REPLICA",
                                "service_connect_configuration": [],
                                "service_registries": [],
                                "tags": null,
                                "timeouts": null,
                                "volume_configuration": [],
                                "wait_for_steady_state": false
                            },
                            "sensitive_values": {
                                "alarms": [],
                                "capacity_provider_strategy": [],
                                "deployment_circuit_breaker": [],
                                "deployment_controller": [],
                                "load_balancer": [
                                    {}
                                ],
                                "network_configuration": [
                                    {
                                        "security_groups": [],
                                        "subnets": []
                                    }
                                ],
                                "ordered_placement_strategy": [],
                                "placement_constraints": [],
                                "service_connect_configuration": [],
                                "service_registries": [],
                                "tags_all": {},
                                "triggers": {},
                                "volume_configuration": []
                            }
                        },
                        {
                            "address": "module.ecs_api.aws_ecs_task_definition.main",
                            "mode": "managed",
                            "type": "aws_ecs_task_definition",
                            "name": "main",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "container_definitions": "[{\"essential\":true,\"image\":\"amazon/amazon-ecs-sample\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"/ecs/flipeon-api-dev\",\"awslogs-region\":\"us-east-1\",\"awslogs-stream-prefix\":\"ecs\"}},\"name\":\"flipeon-api-dev\",\"portMappings\":[{\"containerPort\":80,\"hostPort\":80,\"protocol\":\"tcp\"}]}]",
                                "cpu": "256",
                                "ephemeral_storage": [],
                                "family": "flipeon-api-dev",
                                "inference_accelerator": [],
                                "ipc_mode": null,
                                "memory": "512",
                                "network_mode": "awsvpc",
                                "pid_mode": null,
                                "placement_constraints": [],
                                "proxy_configuration": [],
                                "requires_compatibilities": [
                                    "FARGATE"
                                ],
                                "runtime_platform": [],
                                "skip_destroy": false,
                                "tags": null,
                                "track_latest": false,
                                "volume": []
                            },
                            "sensitive_values": {
                                "ephemeral_storage": [],
                                "inference_accelerator": [],
                                "placement_constraints": [],
                                "proxy_configuration": [],
                                "requires_compatibilities": [
                                    false
                                ],
                                "runtime_platform": [],
                                "tags_all": {},
                                "volume": []
                            }
                        },
                        {
                            "address": "module.ecs_api.aws_iam_role.ecs_task_execution",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "ecs_task_execution",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
                                "description": null,
                                "force_detach_policies": false,
                                "max_session_duration": 3600,
                                "name": "flipeon-api-dev-execution-role",
                                "path": "/",
                                "permissions_boundary": null,
                                "tags": null
                            },
                            "sensitive_values": {
                                "inline_policy": [],
                                "managed_policy_arns": [],
                                "tags_all": {}
                            }
                        }
                    ],
                    "address": "module.ecs_api"
                },
                {
                    "resources": [
                        {
                            "address": "module.ecs_app.aws_ecs_cluster.main",
                            "mode": "managed",
                            "type": "aws_ecs_cluster",
                            "name": "main",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "configuration": [],
                                "name": "flipeon-app-dev",
                                "service_connect_defaults": [],
                                "tags": null
                            },
                            "sensitive_values": {
                                "configuration": [],
                                "service_connect_defaults": [],
                                "setting": [],
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.ecs_app.aws_ecs_service.main",
                            "mode": "managed",
                            "type": "aws_ecs_service",
                            "name": "main",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "alarms": [],
                                "capacity_provider_strategy": [],
                                "deployment_circuit_breaker": [],
                                "deployment_controller": [],
                                "deployment_maximum_percent": 200,
                                "deployment_minimum_healthy_percent": 50,
                                "desired_count": 1,
                                "enable_ecs_managed_tags": false,
                                "enable_execute_command": false,
                                "force_new_deployment": null,
                                "health_check_grace_period_seconds": null,
                                "launch_type": "FARGATE",
                                "load_balancer": [
                                    {
                                        "container_name": "flipeon-app-dev",
                                        "container_port": 80,
                                        "elb_name": ""
                                    }
                                ],
                                "name": "flipeon-app-dev",
                                "network_configuration": [
                                    {
                                        "assign_public_ip": true
                                    }
                                ],
                                "ordered_placement_strategy": [],
                                "placement_constraints": [],
                                "propagate_tags": null,
                                "scheduling_strategy": "REPLICA",
                                "service_connect_configuration": [],
                                "service_registries": [],
                                "tags": null,
                                "timeouts": null,
                                "volume_configuration": [],
                                "wait_for_steady_state": false
                            },
                            "sensitive_values": {
                                "alarms": [],
                                "capacity_provider_strategy": [],
                                "deployment_circuit_breaker": [],
                                "deployment_controller": [],
                                "load_balancer": [
                                    {}
                                ],
                                "network_configuration": [
                                    {
                                        "security_groups": [],
                                        "subnets": []
                                    }
                                ],
                                "ordered_placement_strategy": [],
                                "placement_constraints": [],
                                "service_connect_configuration": [],
                                "service_registries": [],
                                "tags_all": {},
                                "triggers": {},
                                "volume_configuration": []
                            }
                        },
                        {
                            "address": "module.ecs_app.aws_ecs_task_definition.main",
                            "mode": "managed",
                            "type": "aws_ecs_task_definition",
                            "name": "main",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "container_definitions": "[{\"essential\":true,\"image\":\"amazon/amazon-ecs-sample\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"/ecs/flipeon-app-dev\",\"awslogs-region\":\"us-east-1\",\"awslogs-stream-prefix\":\"ecs\"}},\"name\":\"flipeon-app-dev\",\"portMappings\":[{\"containerPort\":80,\"hostPort\":80,\"protocol\":\"tcp\"}]}]",
                                "cpu": "256",
                                "ephemeral_storage": [],
                                "family": "flipeon-app-dev",
                                "inference_accelerator": [],
                                "ipc_mode": null,
                                "memory": "512",
                                "network_mode": "awsvpc",
                                "pid_mode": null,
                                "placement_constraints": [],
                                "proxy_configuration": [],
                                "requires_compatibilities": [
                                    "FARGATE"
                                ],
                                "runtime_platform": [],
                                "skip_destroy": false,
                                "tags": null,
                                "track_latest": false,
                                "volume": []
                            },
                            "sensitive_values": {
                                "ephemeral_storage": [],
                                "inference_accelerator": [],
                                "placement_constraints": [],
                                "proxy_configuration": [],
                                "requires_compatibilities": [
                                    false
                                ],
                                "runtime_platform": [],
                                "tags_all": {},
                                "volume": []
                            }
                        },
                        {
                            "address": "module.ecs_app.aws_iam_role.ecs_task_execution",
                            "mode": "managed",
                            "type": "aws_iam_role",
                            "name": "ecs_task_execution",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
                                "description": null,
                                "force_detach_policies": false,
                                "max_session_duration": 3600,
                                "name": "flipeon-app-dev-execution-role",
                                "path": "/",
                                "permissions_boundary": null,
                                "tags": null
                            },
                            "sensitive_values": {
                                "inline_policy": [],
                                "managed_policy_arns": [],
                                "tags_all": {}
                            }
                        }
                    ],
                    "address": "module.ecs_app"
                },
                {
                    "resources": [
                        {
                            "address": "module.load_balancer.aws_lb.application",
                            "mode": "managed",
                            "type": "aws_lb",
                            "name": "application",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "access_logs": [
                                    {
                                        "bucket": "",
                                        "enabled": false,
                                        "prefix": null
                                    }
                                ],
                                "client_keep_alive": 3600,
                                "connection_logs": [],
                                "customer_owned_ipv4_pool": null,
                                "desync_mitigation_mode": "defensive",
                                "dns_record_client_routing_policy": null,
                                "drop_invalid_header_fields": false,
                                "enable_cross_zone_load_balancing": null,
                                "enable_deletion_protection": false,
                                "enable_http2": true,
                                "enable_tls_version_and_cipher_suite_headers": false,
                                "enable_waf_fail_open": false,
                                "enable_xff_client_port": false,
                                "idle_timeout": 60,
                                "internal": false,
                                "load_balancer_type": "application",
                                "name": "lb-flipeon-dev",
                                "preserve_host_header": false,
                                "tags": {
                                    "Name": "flipeon-lb-dev",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "tags_all": {
                                    "Name": "flipeon-lb-dev",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "timeouts": null,
                                "xff_header_processing_mode": "append"
                            },
                            "sensitive_values": {
                                "access_logs": [
                                    {}
                                ],
                                "connection_logs": [],
                                "security_groups": [],
                                "subnet_mapping": [],
                                "subnets": [],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.load_balancer.aws_lb_listener.http2[0]",
                            "mode": "managed",
                            "type": "aws_lb_listener",
                            "name": "http2",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "alpn_policy": null,
                                "certificate_arn": null,
                                "default_action": [
                                    {
                                        "authenticate_cognito": [],
                                        "authenticate_oidc": [],
                                        "fixed_response": [],
                                        "forward": [],
                                        "redirect": [],
                                        "type": "forward"
                                    }
                                ],
                                "port": 80,
                                "protocol": "HTTP",
                                "tags": null,
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "default_action": [
                                    {
                                        "authenticate_cognito": [],
                                        "authenticate_oidc": [],
                                        "fixed_response": [],
                                        "forward": [],
                                        "redirect": []
                                    }
                                ],
                                "mutual_authentication": [],
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.load_balancer.aws_lb_target_group.application",
                            "mode": "managed",
                            "type": "aws_lb_target_group",
                            "name": "application",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "deregistration_delay": "300",
                                "health_check": [
                                    {
                                        "enabled": true,
                                        "healthy_threshold": 2,
                                        "interval": 30,
                                        "path": "/",
                                        "port": "traffic-port",
                                        "protocol": "HTTP",
                                        "timeout": 5,
                                        "unhealthy_threshold": 2
                                    }
                                ],
                                "lambda_multi_value_headers_enabled": false,
                                "name": "tg-lb-flipeon-dev",
                                "port": 80,
                                "protocol": "HTTP",
                                "proxy_protocol_v2": false,
                                "slow_start": 0,
                                "tags": null,
                                "target_type": "ip"
                            },
                            "sensitive_values": {
                                "health_check": [
                                    {}
                                ],
                                "load_balancer_arns": [],
                                "stickiness": [],
                                "tags_all": {},
                                "target_failover": [],
                                "target_health_state": []
                            }
                        }
                    ],
                    "address": "module.load_balancer"
                },
                {
                    "resources": [
                        {
                            "address": "module.logs_bucket.aws_s3_bucket.bucket",
                            "mode": "managed",
                            "type": "aws_s3_bucket",
                            "name": "bucket",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "bucket": "logs-bucket-flipeon-dev",
                                "force_destroy": false,
                                "tags": {
                                    "Name": "logs-bucket-flipeon-dev",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "tags_all": {
                                    "Name": "logs-bucket-flipeon-dev",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "cors_rule": [],
                                "grant": [],
                                "lifecycle_rule": [],
                                "logging": [],
                                "object_lock_configuration": [],
                                "replication_configuration": [],
                                "server_side_encryption_configuration": [],
                                "tags": {},
                                "tags_all": {},
                                "versioning": [],
                                "website": []
                            }
                        },
                        {
                            "address": "module.logs_bucket.aws_s3_bucket_lifecycle_configuration.bucket_lifecycle[0]",
                            "mode": "managed",
                            "type": "aws_s3_bucket_lifecycle_configuration",
                            "name": "bucket_lifecycle",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "expected_bucket_owner": null,
                                "rule": [
                                    {
                                        "abort_incomplete_multipart_upload": [],
                                        "expiration": [
                                            {
                                                "date": null,
                                                "days": 365
                                            }
                                        ],
                                        "filter": [],
                                        "id": "expire_old_objects",
                                        "noncurrent_version_expiration": [],
                                        "noncurrent_version_transition": [],
                                        "prefix": null,
                                        "status": "Enabled",
                                        "transition": [
                                            {
                                                "date": "",
                                                "days": 3,
                                                "storage_class": "GLACIER"
                                            }
                                        ]
                                    }
                                ],
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "rule": [
                                    {
                                        "abort_incomplete_multipart_upload": [],
                                        "expiration": [
                                            {}
                                        ],
                                        "filter": [],
                                        "noncurrent_version_expiration": [],
                                        "noncurrent_version_transition": [],
                                        "transition": [
                                            {}
                                        ]
                                    }
                                ]
                            }
                        },
                        {
                            "address": "module.logs_bucket.aws_s3_bucket_policy.bucket_policy",
                            "mode": "managed",
                            "type": "aws_s3_bucket_policy",
                            "name": "bucket_policy",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "sensitive_values": {}
                        },
                        {
                            "address": "module.logs_bucket.aws_s3_bucket_public_access_block.bucket_policy_settings",
                            "mode": "managed",
                            "type": "aws_s3_bucket_public_access_block",
                            "name": "bucket_policy_settings",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "block_public_acls": false,
                                "block_public_policy": false,
                                "ignore_public_acls": false,
                                "restrict_public_buckets": false
                            },
                            "sensitive_values": {}
                        }
                    ],
                    "address": "module.logs_bucket"
                },
                {
                    "resources": [
                        {
                            "address": "module.network.aws_eip.nat[0]",
                            "mode": "managed",
                            "type": "aws_eip",
                            "name": "nat",
                            "index": 0,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "address": null,
                                "associate_with_private_ip": null,
                                "customer_owned_ipv4_pool": null,
                                "domain": "vpc",
                                "tags": {
                                    "Name": "eip-flipeon",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "tags_all": {
                                    "Name": "eip-flipeon",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.network.aws_eip.nat[1]",
                            "mode": "managed",
                            "type": "aws_eip",
                            "name": "nat",
                            "index": 1,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "address": null,
                                "associate_with_private_ip": null,
                                "customer_owned_ipv4_pool": null,
                                "domain": "vpc",
                                "tags": {
                                    "Name": "eip-flipeon",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "tags_all": {
                                    "Name": "eip-flipeon",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.network.aws_eip.nat[2]",
                            "mode": "managed",
                            "type": "aws_eip",
                            "name": "nat",
                            "index": 2,
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 0,
                            "values": {
                                "address": null,
                                "associate_with_private_ip": null,
                                "customer_owned_ipv4_pool": null,
                                "domain": "vpc",
                                "tags": {
                                    "Name": "eip-flipeon",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "tags_all": {
                                    "Name": "eip-flipeon",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "tags": {},
                                "tags_all": {}
                            }
                        }
                    ],
                    "address": "module.network",
                    "child_modules": [
                        {
                            "resources": [
                                {
                                    "address": "module.network.module.vpc.aws_default_network_acl.this[0]",
                                    "mode": "managed",
                                    "type": "aws_default_network_acl",
                                    "name": "this",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "egress": [
                                            {
                                                "action": "allow",
                                                "cidr_block": "",
                                                "from_port": 0,
                                                "icmp_code": null,
                                                "icmp_type": null,
                                                "ipv6_cidr_block": "::/0",
                                                "protocol": "-1",
                                                "rule_no": 101,
                                                "to_port": 0
                                            },
                                            {
                                                "action": "allow",
                                                "cidr_block": "0.0.0.0/0",
                                                "from_port": 0,
                                                "icmp_code": null,
                                                "icmp_type": null,
                                                "ipv6_cidr_block": "",
                                                "protocol": "-1",
                                                "rule_no": 100,
                                                "to_port": 0
                                            }
                                        ],
                                        "ingress": [
                                            {
                                                "action": "allow",
                                                "cidr_block": "",
                                                "from_port": 0,
                                                "icmp_code": null,
                                                "icmp_type": null,
                                                "ipv6_cidr_block": "::/0",
                                                "protocol": "-1",
                                                "rule_no": 101,
                                                "to_port": 0
                                            },
                                            {
                                                "action": "allow",
                                                "cidr_block": "0.0.0.0/0",
                                                "from_port": 0,
                                                "icmp_code": null,
                                                "icmp_type": null,
                                                "ipv6_cidr_block": "",
                                                "protocol": "-1",
                                                "rule_no": 100,
                                                "to_port": 0
                                            }
                                        ],
                                        "subnet_ids": null,
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        }
                                    },
                                    "sensitive_values": {
                                        "egress": [
                                            {},
                                            {}
                                        ],
                                        "ingress": [
                                            {},
                                            {}
                                        ],
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_default_route_table.default[0]",
                                    "mode": "managed",
                                    "type": "aws_default_route_table",
                                    "name": "default",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "propagating_vgws": null,
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "timeouts": {
                                            "create": "5m",
                                            "update": "5m"
                                        }
                                    },
                                    "sensitive_values": {
                                        "route": [],
                                        "tags": {},
                                        "tags_all": {},
                                        "timeouts": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_default_security_group.this[0]",
                                    "mode": "managed",
                                    "type": "aws_default_security_group",
                                    "name": "this",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 1,
                                    "values": {
                                        "revoke_rules_on_delete": false,
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        }
                                    },
                                    "sensitive_values": {
                                        "egress": [],
                                        "ingress": [],
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_eip.nat[0]",
                                    "mode": "managed",
                                    "type": "aws_eip",
                                    "name": "nat",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "address": null,
                                        "associate_with_private_ip": null,
                                        "customer_owned_ipv4_pool": null,
                                        "domain": "vpc",
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "timeouts": null
                                    },
                                    "sensitive_values": {
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_internet_gateway.this[0]",
                                    "mode": "managed",
                                    "type": "aws_internet_gateway",
                                    "name": "this",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "timeouts": null
                                    },
                                    "sensitive_values": {
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_nat_gateway.this[0]",
                                    "mode": "managed",
                                    "type": "aws_nat_gateway",
                                    "name": "this",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "connectivity_type": "public",
                                        "secondary_allocation_ids": null,
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "timeouts": null
                                    },
                                    "sensitive_values": {
                                        "secondary_private_ip_addresses": [],
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_route.private_nat_gateway[0]",
                                    "mode": "managed",
                                    "type": "aws_route",
                                    "name": "private_nat_gateway",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "carrier_gateway_id": null,
                                        "core_network_arn": null,
                                        "destination_cidr_block": "0.0.0.0/0",
                                        "destination_ipv6_cidr_block": null,
                                        "destination_prefix_list_id": null,
                                        "egress_only_gateway_id": null,
                                        "gateway_id": null,
                                        "local_gateway_id": null,
                                        "timeouts": {
                                            "create": "5m",
                                            "delete": null,
                                            "update": null
                                        },
                                        "transit_gateway_id": null,
                                        "vpc_endpoint_id": null,
                                        "vpc_peering_connection_id": null
                                    },
                                    "sensitive_values": {
                                        "timeouts": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_route.public_internet_gateway[0]",
                                    "mode": "managed",
                                    "type": "aws_route",
                                    "name": "public_internet_gateway",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "carrier_gateway_id": null,
                                        "core_network_arn": null,
                                        "destination_cidr_block": "0.0.0.0/0",
                                        "destination_ipv6_cidr_block": null,
                                        "destination_prefix_list_id": null,
                                        "egress_only_gateway_id": null,
                                        "local_gateway_id": null,
                                        "nat_gateway_id": null,
                                        "timeouts": {
                                            "create": "5m",
                                            "delete": null,
                                            "update": null
                                        },
                                        "transit_gateway_id": null,
                                        "vpc_endpoint_id": null,
                                        "vpc_peering_connection_id": null
                                    },
                                    "sensitive_values": {
                                        "timeouts": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_route_table.private[0]",
                                    "mode": "managed",
                                    "type": "aws_route_table",
                                    "name": "private",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "timeouts": null
                                    },
                                    "sensitive_values": {
                                        "propagating_vgws": [],
                                        "route": [],
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_route_table.public[0]",
                                    "mode": "managed",
                                    "type": "aws_route_table",
                                    "name": "public",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "timeouts": null
                                    },
                                    "sensitive_values": {
                                        "propagating_vgws": [],
                                        "route": [],
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_route_table_association.private[0]",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "private",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "gateway_id": null,
                                        "timeouts": null
                                    },
                                    "sensitive_values": {}
                                },
                                {
                                    "address": "module.network.module.vpc.aws_route_table_association.private[1]",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "private",
                                    "index": 1,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "gateway_id": null,
                                        "timeouts": null
                                    },
                                    "sensitive_values": {}
                                },
                                {
                                    "address": "module.network.module.vpc.aws_route_table_association.private[2]",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "private",
                                    "index": 2,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "gateway_id": null,
                                        "timeouts": null
                                    },
                                    "sensitive_values": {}
                                },
                                {
                                    "address": "module.network.module.vpc.aws_route_table_association.public[0]",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "public",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "gateway_id": null,
                                        "timeouts": null
                                    },
                                    "sensitive_values": {}
                                },
                                {
                                    "address": "module.network.module.vpc.aws_route_table_association.public[1]",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "public",
                                    "index": 1,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "gateway_id": null,
                                        "timeouts": null
                                    },
                                    "sensitive_values": {}
                                },
                                {
                                    "address": "module.network.module.vpc.aws_route_table_association.public[2]",
                                    "mode": "managed",
                                    "type": "aws_route_table_association",
                                    "name": "public",
                                    "index": 2,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 0,
                                    "values": {
                                        "gateway_id": null,
                                        "timeouts": null
                                    },
                                    "sensitive_values": {}
                                },
                                {
                                    "address": "module.network.module.vpc.aws_subnet.private[0]",
                                    "mode": "managed",
                                    "type": "aws_subnet",
                                    "name": "private",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 1,
                                    "values": {
                                        "assign_ipv6_address_on_creation": false,
                                        "availability_zone": "us-east-1a",
                                        "cidr_block": "10.0.1.0/24",
                                        "customer_owned_ipv4_pool": null,
                                        "enable_dns64": false,
                                        "enable_lni_at_device_index": null,
                                        "enable_resource_name_dns_a_record_on_launch": false,
                                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                                        "ipv6_cidr_block": null,
                                        "ipv6_native": false,
                                        "map_customer_owned_ip_on_launch": null,
                                        "map_public_ip_on_launch": false,
                                        "outpost_arn": null,
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "timeouts": null
                                    },
                                    "sensitive_values": {
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_subnet.private[1]",
                                    "mode": "managed",
                                    "type": "aws_subnet",
                                    "name": "private",
                                    "index": 1,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 1,
                                    "values": {
                                        "assign_ipv6_address_on_creation": false,
                                        "availability_zone": "us-east-1b",
                                        "cidr_block": "10.0.2.0/24",
                                        "customer_owned_ipv4_pool": null,
                                        "enable_dns64": false,
                                        "enable_lni_at_device_index": null,
                                        "enable_resource_name_dns_a_record_on_launch": false,
                                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                                        "ipv6_cidr_block": null,
                                        "ipv6_native": false,
                                        "map_customer_owned_ip_on_launch": null,
                                        "map_public_ip_on_launch": false,
                                        "outpost_arn": null,
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "timeouts": null
                                    },
                                    "sensitive_values": {
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_subnet.private[2]",
                                    "mode": "managed",
                                    "type": "aws_subnet",
                                    "name": "private",
                                    "index": 2,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 1,
                                    "values": {
                                        "assign_ipv6_address_on_creation": false,
                                        "availability_zone": "us-east-1c",
                                        "cidr_block": "10.0.3.0/24",
                                        "customer_owned_ipv4_pool": null,
                                        "enable_dns64": false,
                                        "enable_lni_at_device_index": null,
                                        "enable_resource_name_dns_a_record_on_launch": false,
                                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                                        "ipv6_cidr_block": null,
                                        "ipv6_native": false,
                                        "map_customer_owned_ip_on_launch": null,
                                        "map_public_ip_on_launch": false,
                                        "outpost_arn": null,
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "timeouts": null
                                    },
                                    "sensitive_values": {
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_subnet.public[0]",
                                    "mode": "managed",
                                    "type": "aws_subnet",
                                    "name": "public",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 1,
                                    "values": {
                                        "assign_ipv6_address_on_creation": false,
                                        "availability_zone": "us-east-1a",
                                        "cidr_block": "10.0.101.0/24",
                                        "customer_owned_ipv4_pool": null,
                                        "enable_dns64": false,
                                        "enable_lni_at_device_index": null,
                                        "enable_resource_name_dns_a_record_on_launch": false,
                                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                                        "ipv6_cidr_block": null,
                                        "ipv6_native": false,
                                        "map_customer_owned_ip_on_launch": null,
                                        "map_public_ip_on_launch": false,
                                        "outpost_arn": null,
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "timeouts": null
                                    },
                                    "sensitive_values": {
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_subnet.public[1]",
                                    "mode": "managed",
                                    "type": "aws_subnet",
                                    "name": "public",
                                    "index": 1,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 1,
                                    "values": {
                                        "assign_ipv6_address_on_creation": false,
                                        "availability_zone": "us-east-1b",
                                        "cidr_block": "10.0.102.0/24",
                                        "customer_owned_ipv4_pool": null,
                                        "enable_dns64": false,
                                        "enable_lni_at_device_index": null,
                                        "enable_resource_name_dns_a_record_on_launch": false,
                                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                                        "ipv6_cidr_block": null,
                                        "ipv6_native": false,
                                        "map_customer_owned_ip_on_launch": null,
                                        "map_public_ip_on_launch": false,
                                        "outpost_arn": null,
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "timeouts": null
                                    },
                                    "sensitive_values": {
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_subnet.public[2]",
                                    "mode": "managed",
                                    "type": "aws_subnet",
                                    "name": "public",
                                    "index": 2,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 1,
                                    "values": {
                                        "assign_ipv6_address_on_creation": false,
                                        "availability_zone": "us-east-1c",
                                        "cidr_block": "10.0.103.0/24",
                                        "customer_owned_ipv4_pool": null,
                                        "enable_dns64": false,
                                        "enable_lni_at_device_index": null,
                                        "enable_resource_name_dns_a_record_on_launch": false,
                                        "enable_resource_name_dns_aaaa_record_on_launch": false,
                                        "ipv6_cidr_block": null,
                                        "ipv6_native": false,
                                        "map_customer_owned_ip_on_launch": null,
                                        "map_public_ip_on_launch": false,
                                        "outpost_arn": null,
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "timeouts": null
                                    },
                                    "sensitive_values": {
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                },
                                {
                                    "address": "module.network.module.vpc.aws_vpc.this[0]",
                                    "mode": "managed",
                                    "type": "aws_vpc",
                                    "name": "this",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/aws",
                                    "schema_version": 1,
                                    "values": {
                                        "assign_generated_ipv6_cidr_block": null,
                                        "cidr_block": "10.0.0.0/16",
                                        "enable_dns_hostnames": true,
                                        "enable_dns_support": true,
                                        "instance_tenancy": "default",
                                        "ipv4_ipam_pool_id": null,
                                        "ipv4_netmask_length": null,
                                        "ipv6_ipam_pool_id": null,
                                        "ipv6_netmask_length": null,
                                        "tags": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        },
                                        "tags_all": {
                                            "Name": "flipeon",
                                            "ProjectGroup": "grp-flipeon-dev"
                                        }
                                    },
                                    "sensitive_values": {
                                        "tags": {},
                                        "tags_all": {}
                                    }
                                }
                            ],
                            "address": "module.network.module.vpc"
                        }
                    ]
                },
                {
                    "resources": [
                        {
                            "address": "module.rds.aws_db_instance.db_reader",
                            "mode": "managed",
                            "type": "aws_db_instance",
                            "name": "db_reader",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 2,
                            "values": {
                                "allocated_storage": 20,
                                "allow_major_version_upgrade": null,
                                "apply_immediately": false,
                                "auto_minor_version_upgrade": true,
                                "blue_green_update": [],
                                "copy_tags_to_snapshot": false,
                                "custom_iam_instance_profile": null,
                                "customer_owned_ip_enabled": null,
                                "db_name": "flipeon_dev",
                                "dedicated_log_volume": false,
                                "delete_automated_backups": true,
                                "deletion_protection": null,
                                "domain": null,
                                "domain_auth_secret_arn": null,
                                "domain_dns_ips": null,
                                "domain_iam_role_name": null,
                                "domain_ou": null,
                                "enabled_cloudwatch_logs_exports": null,
                                "engine": "postgres",
                                "engine_version": "14",
                                "final_snapshot_identifier": null,
                                "iam_database_authentication_enabled": null,
                                "identifier": "flipeon-rds-dev-reader",
                                "instance_class": "db.t3.small",
                                "manage_master_user_password": null,
                                "max_allocated_storage": null,
                                "monitoring_interval": 0,
                                "performance_insights_enabled": false,
                                "port": 5432,
                                "publicly_accessible": false,
                                "restore_to_point_in_time": [],
                                "s3_import": [],
                                "skip_final_snapshot": false,
                                "storage_encrypted": null,
                                "tags": {
                                    "Name": "flipeon-rds-dev-reader",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "tags_all": {
                                    "Name": "flipeon-rds-dev-reader",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "timeouts": null,
                                "username": "flipeon"
                            },
                            "sensitive_values": {
                                "blue_green_update": [],
                                "listener_endpoint": [],
                                "master_user_secret": [],
                                "password": true,
                                "replicas": [],
                                "restore_to_point_in_time": [],
                                "s3_import": [],
                                "tags": {},
                                "tags_all": {},
                                "vpc_security_group_ids": []
                            }
                        },
                        {
                            "address": "module.rds.local_file.db_password_file",
                            "mode": "managed",
                            "type": "local_file",
                            "name": "db_password_file",
                            "provider_name": "registry.terraform.io/hashicorp/local",
                            "schema_version": 0,
                            "values": {
                                "content_base64": null,
                                "directory_permission": "0777",
                                "file_permission": "0777",
                                "filename": "rds/db_password.txt",
                                "sensitive_content": null,
                                "source": null
                            },
                            "sensitive_values": {
                                "content": true,
                                "sensitive_content": true
                            }
                        },
                        {
                            "address": "module.rds.random_password.db_password",
                            "mode": "managed",
                            "type": "random_password",
                            "name": "db_password",
                            "provider_name": "registry.terraform.io/hashicorp/random",
                            "schema_version": 3,
                            "values": {
                                "keepers": null,
                                "length": 16,
                                "lower": true,
                                "min_lower": 0,
                                "min_numeric": 0,
                                "min_special": 0,
                                "min_upper": 0,
                                "number": true,
                                "numeric": true,
                                "override_special": "_%@",
                                "special": true,
                                "upper": true
                            },
                            "sensitive_values": {
                                "bcrypt_hash": true,
                                "result": true
                            }
                        }
                    ],
                    "address": "module.rds",
                    "child_modules": [
                        {
                            "resources": [
                                {
                                    "address": "module.rds.module.db.random_password.master_password[0]",
                                    "mode": "managed",
                                    "type": "random_password",
                                    "name": "master_password",
                                    "index": 0,
                                    "provider_name": "registry.terraform.io/hashicorp/random",
                                    "schema_version": 3,
                                    "values": {
                                        "keepers": null,
                                        "length": 16,
                                        "lower": true,
                                        "min_lower": 0,
                                        "min_numeric": 0,
                                        "min_special": 0,
                                        "min_upper": 0,
                                        "number": true,
                                        "numeric": true,
                                        "override_special": null,
                                        "special": false,
                                        "upper": true
                                    },
                                    "sensitive_values": {
                                        "bcrypt_hash": true,
                                        "result": true
                                    }
                                }
                            ],
                            "address": "module.rds.module.db",
                            "child_modules": [
                                {
                                    "resources": [
                                        {
                                            "address": "module.rds.module.db.module.db_parameter_group.aws_db_parameter_group.this[0]",
                                            "mode": "managed",
                                            "type": "aws_db_parameter_group",
                                            "name": "this",
                                            "index": 0,
                                            "provider_name": "registry.terraform.io/hashicorp/aws",
                                            "schema_version": 0,
                                            "values": {
                                                "description": "flipeon-rds-dev-writer parameter group",
                                                "family": "postgres14",
                                                "name_prefix": "flipeon-rds-dev-writer-",
                                                "parameter": [],
                                                "tags": {
                                                    "Name": "flipeon-rds-dev-writer",
                                                    "ProjectGroup": "grp-flipeon-dev"
                                                },
                                                "tags_all": {
                                                    "Name": "flipeon-rds-dev-writer",
                                                    "ProjectGroup": "grp-flipeon-dev"
                                                }
                                            },
                                            "sensitive_values": {
                                                "parameter": [],
                                                "tags": {},
                                                "tags_all": {}
                                            }
                                        }
                                    ],
                                    "address": "module.rds.module.db.module.db_parameter_group"
                                },
                                {
                                    "resources": [
                                        {
                                            "address": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
                                            "mode": "managed",
                                            "type": "aws_db_instance",
                                            "name": "this",
                                            "index": 0,
                                            "provider_name": "registry.terraform.io/hashicorp/aws",
                                            "schema_version": 2,
                                            "values": {
                                                "allocated_storage": 20,
                                                "allow_major_version_upgrade": false,
                                                "apply_immediately": false,
                                                "auto_minor_version_upgrade": true,
                                                "blue_green_update": [],
                                                "copy_tags_to_snapshot": false,
                                                "custom_iam_instance_profile": null,
                                                "customer_owned_ip_enabled": null,
                                                "db_name": "flipeon_dev",
                                                "dedicated_log_volume": false,
                                                "delete_automated_backups": true,
                                                "deletion_protection": false,
                                                "domain": null,
                                                "domain_auth_secret_arn": null,
                                                "domain_dns_ips": null,
                                                "domain_iam_role_name": null,
                                                "domain_ou": null,
                                                "enabled_cloudwatch_logs_exports": null,
                                                "engine": "postgres",
                                                "engine_version": "14",
                                                "final_snapshot_identifier": null,
                                                "iam_database_authentication_enabled": false,
                                                "identifier": "flipeon-rds-dev-writer",
                                                "instance_class": "db.t3.medium",
                                                "manage_master_user_password": null,
                                                "max_allocated_storage": 100,
                                                "monitoring_interval": 0,
                                                "multi_az": false,
                                                "performance_insights_enabled": false,
                                                "port": 5432,
                                                "publicly_accessible": false,
                                                "replicate_source_db": null,
                                                "restore_to_point_in_time": [],
                                                "s3_import": [],
                                                "skip_final_snapshot": true,
                                                "storage_encrypted": true,
                                                "tags": {
                                                    "Name": "flipeon-rds-dev-writer",
                                                    "ProjectGroup": "grp-flipeon-dev"
                                                },
                                                "tags_all": {
                                                    "Name": "flipeon-rds-dev-writer",
                                                    "ProjectGroup": "grp-flipeon-dev"
                                                },
                                                "timeouts": {
                                                    "create": null,
                                                    "delete": null,
                                                    "update": null
                                                },
                                                "username": "flipeon"
                                            },
                                            "sensitive_values": {
                                                "blue_green_update": [],
                                                "listener_endpoint": [],
                                                "master_user_secret": [],
                                                "password": true,
                                                "replicas": [],
                                                "restore_to_point_in_time": [],
                                                "s3_import": [],
                                                "tags": {},
                                                "tags_all": {},
                                                "timeouts": {},
                                                "vpc_security_group_ids": []
                                            }
                                        }
                                    ],
                                    "address": "module.rds.module.db.module.db_instance"
                                }
                            ]
                        }
                    ]
                },
                {
                    "resources": [
                        {
                            "address": "module.route53.aws_route53_record.api",
                            "mode": "managed",
                            "type": "aws_route53_record",
                            "name": "api",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 2,
                            "values": {
                                "alias": [
                                    {
                                        "evaluate_target_health": true
                                    }
                                ],
                                "cidr_routing_policy": [],
                                "failover_routing_policy": [],
                                "geolocation_routing_policy": [],
                                "geoproximity_routing_policy": [],
                                "health_check_id": null,
                                "latency_routing_policy": [],
                                "multivalue_answer_routing_policy": null,
                                "name": "*.api",
                                "records": null,
                                "set_identifier": null,
                                "ttl": null,
                                "type": "A",
                                "weighted_routing_policy": []
                            },
                            "sensitive_values": {
                                "alias": [
                                    {}
                                ],
                                "cidr_routing_policy": [],
                                "failover_routing_policy": [],
                                "geolocation_routing_policy": [],
                                "geoproximity_routing_policy": [],
                                "latency_routing_policy": [],
                                "weighted_routing_policy": []
                            }
                        },
                        {
                            "address": "module.route53.aws_route53_record.app",
                            "mode": "managed",
                            "type": "aws_route53_record",
                            "name": "app",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 2,
                            "values": {
                                "alias": [
                                    {
                                        "evaluate_target_health": true
                                    }
                                ],
                                "cidr_routing_policy": [],
                                "failover_routing_policy": [],
                                "geolocation_routing_policy": [],
                                "geoproximity_routing_policy": [],
                                "health_check_id": null,
                                "latency_routing_policy": [],
                                "multivalue_answer_routing_policy": null,
                                "name": "*.app",
                                "records": null,
                                "set_identifier": null,
                                "ttl": null,
                                "type": "A",
                                "weighted_routing_policy": []
                            },
                            "sensitive_values": {
                                "alias": [
                                    {}
                                ],
                                "cidr_routing_policy": [],
                                "failover_routing_policy": [],
                                "geolocation_routing_policy": [],
                                "geoproximity_routing_policy": [],
                                "latency_routing_policy": [],
                                "weighted_routing_policy": []
                            }
                        },
                        {
                            "address": "module.route53.aws_route53_record.other_all",
                            "mode": "managed",
                            "type": "aws_route53_record",
                            "name": "other_all",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 2,
                            "values": {
                                "alias": [
                                    {
                                        "evaluate_target_health": true
                                    }
                                ],
                                "cidr_routing_policy": [],
                                "failover_routing_policy": [],
                                "geolocation_routing_policy": [],
                                "geoproximity_routing_policy": [],
                                "health_check_id": null,
                                "latency_routing_policy": [],
                                "multivalue_answer_routing_policy": null,
                                "name": "*",
                                "records": null,
                                "set_identifier": null,
                                "ttl": null,
                                "type": "A",
                                "weighted_routing_policy": []
                            },
                            "sensitive_values": {
                                "alias": [
                                    {}
                                ],
                                "cidr_routing_policy": [],
                                "failover_routing_policy": [],
                                "geolocation_routing_policy": [],
                                "geoproximity_routing_policy": [],
                                "latency_routing_policy": [],
                                "weighted_routing_policy": []
                            }
                        },
                        {
                            "address": "module.route53.aws_route53_record.www",
                            "mode": "managed",
                            "type": "aws_route53_record",
                            "name": "www",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 2,
                            "values": {
                                "alias": [
                                    {
                                        "evaluate_target_health": true
                                    }
                                ],
                                "cidr_routing_policy": [],
                                "failover_routing_policy": [],
                                "geolocation_routing_policy": [],
                                "geoproximity_routing_policy": [],
                                "health_check_id": null,
                                "latency_routing_policy": [],
                                "multivalue_answer_routing_policy": null,
                                "name": "www",
                                "records": null,
                                "set_identifier": null,
                                "ttl": null,
                                "type": "A",
                                "weighted_routing_policy": []
                            },
                            "sensitive_values": {
                                "alias": [
                                    {}
                                ],
                                "cidr_routing_policy": [],
                                "failover_routing_policy": [],
                                "geolocation_routing_policy": [],
                                "geoproximity_routing_policy": [],
                                "latency_routing_policy": [],
                                "weighted_routing_policy": []
                            }
                        }
                    ],
                    "address": "module.route53"
                },
                {
                    "resources": [
                        {
                            "address": "module.security_groups.aws_security_group.ecs",
                            "mode": "managed",
                            "type": "aws_security_group",
                            "name": "ecs",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "description": "Security group for ECS",
                                "egress": [
                                    {
                                        "cidr_blocks": [
                                            "0.0.0.0/0"
                                        ],
                                        "description": "",
                                        "from_port": 0,
                                        "ipv6_cidr_blocks": [],
                                        "prefix_list_ids": [],
                                        "protocol": "-1",
                                        "security_groups": [],
                                        "self": false,
                                        "to_port": 0
                                    }
                                ],
                                "ingress": [
                                    {
                                        "cidr_blocks": [
                                            "0.0.0.0/0"
                                        ],
                                        "description": "",
                                        "from_port": 443,
                                        "ipv6_cidr_blocks": [],
                                        "prefix_list_ids": [],
                                        "protocol": "tcp",
                                        "security_groups": [],
                                        "self": false,
                                        "to_port": 443
                                    },
                                    {
                                        "cidr_blocks": [
                                            "0.0.0.0/0"
                                        ],
                                        "description": "",
                                        "from_port": 80,
                                        "ipv6_cidr_blocks": [],
                                        "prefix_list_ids": [],
                                        "protocol": "tcp",
                                        "security_groups": [],
                                        "self": false,
                                        "to_port": 80
                                    }
                                ],
                                "name": "ecs-security-group",
                                "revoke_rules_on_delete": false,
                                "tags": {
                                    "Name": "ecs-security-group",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "tags_all": {
                                    "Name": "ecs-security-group",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "egress": [
                                    {
                                        "cidr_blocks": [
                                            false
                                        ],
                                        "ipv6_cidr_blocks": [],
                                        "prefix_list_ids": [],
                                        "security_groups": []
                                    }
                                ],
                                "ingress": [
                                    {
                                        "cidr_blocks": [
                                            false
                                        ],
                                        "ipv6_cidr_blocks": [],
                                        "prefix_list_ids": [],
                                        "security_groups": []
                                    },
                                    {
                                        "cidr_blocks": [
                                            false
                                        ],
                                        "ipv6_cidr_blocks": [],
                                        "prefix_list_ids": [],
                                        "security_groups": []
                                    }
                                ],
                                "tags": {},
                                "tags_all": {}
                            }
                        },
                        {
                            "address": "module.security_groups.aws_security_group.rds",
                            "mode": "managed",
                            "type": "aws_security_group",
                            "name": "rds",
                            "provider_name": "registry.terraform.io/hashicorp/aws",
                            "schema_version": 1,
                            "values": {
                                "description": "Security group for RDS",
                                "egress": [
                                    {
                                        "cidr_blocks": [
                                            "0.0.0.0/0"
                                        ],
                                        "description": "",
                                        "from_port": 0,
                                        "ipv6_cidr_blocks": [],
                                        "prefix_list_ids": [],
                                        "protocol": "-1",
                                        "security_groups": [],
                                        "self": false,
                                        "to_port": 0
                                    }
                                ],
                                "ingress": [
                                    {
                                        "cidr_blocks": [
                                            "0.0.0.0/0"
                                        ],
                                        "description": "",
                                        "from_port": 5432,
                                        "ipv6_cidr_blocks": [],
                                        "prefix_list_ids": [],
                                        "protocol": "tcp",
                                        "security_groups": [],
                                        "self": false,
                                        "to_port": 5432
                                    }
                                ],
                                "name": "rds-security-group",
                                "revoke_rules_on_delete": false,
                                "tags": {
                                    "Name": "rds-security-group",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "tags_all": {
                                    "Name": "rds-security-group",
                                    "ProjectGroup": "grp-flipeon-dev"
                                },
                                "timeouts": null
                            },
                            "sensitive_values": {
                                "egress": [
                                    {
                                        "cidr_blocks": [
                                            false
                                        ],
                                        "ipv6_cidr_blocks": [],
                                        "prefix_list_ids": [],
                                        "security_groups": []
                                    }
                                ],
                                "ingress": [
                                    {
                                        "cidr_blocks": [
                                            false
                                        ],
                                        "ipv6_cidr_blocks": [],
                                        "prefix_list_ids": [],
                                        "security_groups": []
                                    }
                                ],
                                "tags": {},
                                "tags_all": {}
                            }
                        }
                    ],
                    "address": "module.security_groups"
                }
            ]
        }
    },
    "resource_changes": [
        {
            "address": "aws_route53_zone.primary",
            "mode": "managed",
            "type": "aws_route53_zone",
            "name": "primary",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "comment": "Managed by Terraform",
                    "delegation_set_id": null,
                    "force_destroy": false,
                    "name": "dev.flipeon.com",
                    "tags": null,
                    "vpc": []
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "name_servers": true,
                    "primary_name_server": true,
                    "tags_all": true,
                    "vpc": [],
                    "zone_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "name_servers": [],
                    "tags_all": {},
                    "vpc": []
                }
            }
        },
        {
            "address": "module.ecs_api.aws_ecs_cluster.main",
            "module_address": "module.ecs_api",
            "mode": "managed",
            "type": "aws_ecs_cluster",
            "name": "main",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "configuration": [],
                    "name": "flipeon-api-dev",
                    "service_connect_defaults": [],
                    "tags": null
                },
                "after_unknown": {
                    "arn": true,
                    "configuration": [],
                    "id": true,
                    "service_connect_defaults": [],
                    "setting": true,
                    "tags_all": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "configuration": [],
                    "service_connect_defaults": [],
                    "setting": [],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.ecs_api.aws_ecs_service.main",
            "module_address": "module.ecs_api",
            "mode": "managed",
            "type": "aws_ecs_service",
            "name": "main",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "alarms": [],
                    "capacity_provider_strategy": [],
                    "deployment_circuit_breaker": [],
                    "deployment_controller": [],
                    "deployment_maximum_percent": 200,
                    "deployment_minimum_healthy_percent": 50,
                    "desired_count": 1,
                    "enable_ecs_managed_tags": false,
                    "enable_execute_command": false,
                    "force_new_deployment": null,
                    "health_check_grace_period_seconds": null,
                    "launch_type": "FARGATE",
                    "load_balancer": [
                        {
                            "container_name": "flipeon-api-dev",
                            "container_port": 80,
                            "elb_name": ""
                        }
                    ],
                    "name": "flipeon-api-dev",
                    "network_configuration": [
                        {
                            "assign_public_ip": true
                        }
                    ],
                    "ordered_placement_strategy": [],
                    "placement_constraints": [],
                    "propagate_tags": null,
                    "scheduling_strategy": "REPLICA",
                    "service_connect_configuration": [],
                    "service_registries": [],
                    "tags": null,
                    "timeouts": null,
                    "volume_configuration": [],
                    "wait_for_steady_state": false
                },
                "after_unknown": {
                    "alarms": [],
                    "capacity_provider_strategy": [],
                    "cluster": true,
                    "deployment_circuit_breaker": [],
                    "deployment_controller": [],
                    "iam_role": true,
                    "id": true,
                    "load_balancer": [
                        {
                            "target_group_arn": true
                        }
                    ],
                    "network_configuration": [
                        {
                            "security_groups": true,
                            "subnets": true
                        }
                    ],
                    "ordered_placement_strategy": [],
                    "placement_constraints": [],
                    "platform_version": true,
                    "service_connect_configuration": [],
                    "service_registries": [],
                    "tags_all": true,
                    "task_definition": true,
                    "triggers": true,
                    "volume_configuration": []
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "alarms": [],
                    "capacity_provider_strategy": [],
                    "deployment_circuit_breaker": [],
                    "deployment_controller": [],
                    "load_balancer": [
                        {}
                    ],
                    "network_configuration": [
                        {
                            "security_groups": [],
                            "subnets": []
                        }
                    ],
                    "ordered_placement_strategy": [],
                    "placement_constraints": [],
                    "service_connect_configuration": [],
                    "service_registries": [],
                    "tags_all": {},
                    "triggers": {},
                    "volume_configuration": []
                }
            }
        },
        {
            "address": "module.ecs_api.aws_ecs_task_definition.main",
            "module_address": "module.ecs_api",
            "mode": "managed",
            "type": "aws_ecs_task_definition",
            "name": "main",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "container_definitions": "[{\"essential\":true,\"image\":\"amazon/amazon-ecs-sample\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"/ecs/flipeon-api-dev\",\"awslogs-region\":\"us-east-1\",\"awslogs-stream-prefix\":\"ecs\"}},\"name\":\"flipeon-api-dev\",\"portMappings\":[{\"containerPort\":80,\"hostPort\":80,\"protocol\":\"tcp\"}]}]",
                    "cpu": "256",
                    "ephemeral_storage": [],
                    "family": "flipeon-api-dev",
                    "inference_accelerator": [],
                    "ipc_mode": null,
                    "memory": "512",
                    "network_mode": "awsvpc",
                    "pid_mode": null,
                    "placement_constraints": [],
                    "proxy_configuration": [],
                    "requires_compatibilities": [
                        "FARGATE"
                    ],
                    "runtime_platform": [],
                    "skip_destroy": false,
                    "tags": null,
                    "track_latest": false,
                    "volume": []
                },
                "after_unknown": {
                    "arn": true,
                    "arn_without_revision": true,
                    "ephemeral_storage": [],
                    "execution_role_arn": true,
                    "id": true,
                    "inference_accelerator": [],
                    "placement_constraints": [],
                    "proxy_configuration": [],
                    "requires_compatibilities": [
                        false
                    ],
                    "revision": true,
                    "runtime_platform": [],
                    "tags_all": true,
                    "task_role_arn": true,
                    "volume": []
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "ephemeral_storage": [],
                    "inference_accelerator": [],
                    "placement_constraints": [],
                    "proxy_configuration": [],
                    "requires_compatibilities": [
                        false
                    ],
                    "runtime_platform": [],
                    "tags_all": {},
                    "volume": []
                }
            }
        },
        {
            "address": "module.ecs_api.aws_iam_role.ecs_task_execution",
            "module_address": "module.ecs_api",
            "mode": "managed",
            "type": "aws_iam_role",
            "name": "ecs_task_execution",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
                    "description": null,
                    "force_detach_policies": false,
                    "max_session_duration": 3600,
                    "name": "flipeon-api-dev-execution-role",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": null
                },
                "after_unknown": {
                    "arn": true,
                    "create_date": true,
                    "id": true,
                    "inline_policy": true,
                    "managed_policy_arns": true,
                    "name_prefix": true,
                    "tags_all": true,
                    "unique_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "inline_policy": [],
                    "managed_policy_arns": [],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.ecs_app.aws_ecs_cluster.main",
            "module_address": "module.ecs_app",
            "mode": "managed",
            "type": "aws_ecs_cluster",
            "name": "main",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "configuration": [],
                    "name": "flipeon-app-dev",
                    "service_connect_defaults": [],
                    "tags": null
                },
                "after_unknown": {
                    "arn": true,
                    "configuration": [],
                    "id": true,
                    "service_connect_defaults": [],
                    "setting": true,
                    "tags_all": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "configuration": [],
                    "service_connect_defaults": [],
                    "setting": [],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.ecs_app.aws_ecs_service.main",
            "module_address": "module.ecs_app",
            "mode": "managed",
            "type": "aws_ecs_service",
            "name": "main",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "alarms": [],
                    "capacity_provider_strategy": [],
                    "deployment_circuit_breaker": [],
                    "deployment_controller": [],
                    "deployment_maximum_percent": 200,
                    "deployment_minimum_healthy_percent": 50,
                    "desired_count": 1,
                    "enable_ecs_managed_tags": false,
                    "enable_execute_command": false,
                    "force_new_deployment": null,
                    "health_check_grace_period_seconds": null,
                    "launch_type": "FARGATE",
                    "load_balancer": [
                        {
                            "container_name": "flipeon-app-dev",
                            "container_port": 80,
                            "elb_name": ""
                        }
                    ],
                    "name": "flipeon-app-dev",
                    "network_configuration": [
                        {
                            "assign_public_ip": true
                        }
                    ],
                    "ordered_placement_strategy": [],
                    "placement_constraints": [],
                    "propagate_tags": null,
                    "scheduling_strategy": "REPLICA",
                    "service_connect_configuration": [],
                    "service_registries": [],
                    "tags": null,
                    "timeouts": null,
                    "volume_configuration": [],
                    "wait_for_steady_state": false
                },
                "after_unknown": {
                    "alarms": [],
                    "capacity_provider_strategy": [],
                    "cluster": true,
                    "deployment_circuit_breaker": [],
                    "deployment_controller": [],
                    "iam_role": true,
                    "id": true,
                    "load_balancer": [
                        {
                            "target_group_arn": true
                        }
                    ],
                    "network_configuration": [
                        {
                            "security_groups": true,
                            "subnets": true
                        }
                    ],
                    "ordered_placement_strategy": [],
                    "placement_constraints": [],
                    "platform_version": true,
                    "service_connect_configuration": [],
                    "service_registries": [],
                    "tags_all": true,
                    "task_definition": true,
                    "triggers": true,
                    "volume_configuration": []
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "alarms": [],
                    "capacity_provider_strategy": [],
                    "deployment_circuit_breaker": [],
                    "deployment_controller": [],
                    "load_balancer": [
                        {}
                    ],
                    "network_configuration": [
                        {
                            "security_groups": [],
                            "subnets": []
                        }
                    ],
                    "ordered_placement_strategy": [],
                    "placement_constraints": [],
                    "service_connect_configuration": [],
                    "service_registries": [],
                    "tags_all": {},
                    "triggers": {},
                    "volume_configuration": []
                }
            }
        },
        {
            "address": "module.ecs_app.aws_ecs_task_definition.main",
            "module_address": "module.ecs_app",
            "mode": "managed",
            "type": "aws_ecs_task_definition",
            "name": "main",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "container_definitions": "[{\"essential\":true,\"image\":\"amazon/amazon-ecs-sample\",\"logConfiguration\":{\"logDriver\":\"awslogs\",\"options\":{\"awslogs-group\":\"/ecs/flipeon-app-dev\",\"awslogs-region\":\"us-east-1\",\"awslogs-stream-prefix\":\"ecs\"}},\"name\":\"flipeon-app-dev\",\"portMappings\":[{\"containerPort\":80,\"hostPort\":80,\"protocol\":\"tcp\"}]}]",
                    "cpu": "256",
                    "ephemeral_storage": [],
                    "family": "flipeon-app-dev",
                    "inference_accelerator": [],
                    "ipc_mode": null,
                    "memory": "512",
                    "network_mode": "awsvpc",
                    "pid_mode": null,
                    "placement_constraints": [],
                    "proxy_configuration": [],
                    "requires_compatibilities": [
                        "FARGATE"
                    ],
                    "runtime_platform": [],
                    "skip_destroy": false,
                    "tags": null,
                    "track_latest": false,
                    "volume": []
                },
                "after_unknown": {
                    "arn": true,
                    "arn_without_revision": true,
                    "ephemeral_storage": [],
                    "execution_role_arn": true,
                    "id": true,
                    "inference_accelerator": [],
                    "placement_constraints": [],
                    "proxy_configuration": [],
                    "requires_compatibilities": [
                        false
                    ],
                    "revision": true,
                    "runtime_platform": [],
                    "tags_all": true,
                    "task_role_arn": true,
                    "volume": []
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "ephemeral_storage": [],
                    "inference_accelerator": [],
                    "placement_constraints": [],
                    "proxy_configuration": [],
                    "requires_compatibilities": [
                        false
                    ],
                    "runtime_platform": [],
                    "tags_all": {},
                    "volume": []
                }
            }
        },
        {
            "address": "module.ecs_app.aws_iam_role.ecs_task_execution",
            "module_address": "module.ecs_app",
            "mode": "managed",
            "type": "aws_iam_role",
            "name": "ecs_task_execution",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
                    "description": null,
                    "force_detach_policies": false,
                    "max_session_duration": 3600,
                    "name": "flipeon-app-dev-execution-role",
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": null
                },
                "after_unknown": {
                    "arn": true,
                    "create_date": true,
                    "id": true,
                    "inline_policy": true,
                    "managed_policy_arns": true,
                    "name_prefix": true,
                    "tags_all": true,
                    "unique_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "inline_policy": [],
                    "managed_policy_arns": [],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.load_balancer.aws_lb.application",
            "module_address": "module.load_balancer",
            "mode": "managed",
            "type": "aws_lb",
            "name": "application",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "access_logs": [
                        {
                            "bucket": "",
                            "enabled": false,
                            "prefix": null
                        }
                    ],
                    "client_keep_alive": 3600,
                    "connection_logs": [],
                    "customer_owned_ipv4_pool": null,
                    "desync_mitigation_mode": "defensive",
                    "dns_record_client_routing_policy": null,
                    "drop_invalid_header_fields": false,
                    "enable_cross_zone_load_balancing": null,
                    "enable_deletion_protection": false,
                    "enable_http2": true,
                    "enable_tls_version_and_cipher_suite_headers": false,
                    "enable_waf_fail_open": false,
                    "enable_xff_client_port": false,
                    "idle_timeout": 60,
                    "internal": false,
                    "load_balancer_type": "application",
                    "name": "lb-flipeon-dev",
                    "preserve_host_header": false,
                    "tags": {
                        "Name": "flipeon-lb-dev",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon-lb-dev",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null,
                    "xff_header_processing_mode": "append"
                },
                "after_unknown": {
                    "access_logs": [
                        {}
                    ],
                    "arn": true,
                    "arn_suffix": true,
                    "connection_logs": [],
                    "dns_name": true,
                    "enforce_security_group_inbound_rules_on_private_link_traffic": true,
                    "id": true,
                    "ip_address_type": true,
                    "name_prefix": true,
                    "security_groups": true,
                    "subnet_mapping": true,
                    "subnets": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true,
                    "zone_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "access_logs": [
                        {}
                    ],
                    "connection_logs": [],
                    "security_groups": [],
                    "subnet_mapping": [],
                    "subnets": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.load_balancer.aws_lb_listener.http2[0]",
            "module_address": "module.load_balancer",
            "mode": "managed",
            "type": "aws_lb_listener",
            "name": "http2",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "alpn_policy": null,
                    "certificate_arn": null,
                    "default_action": [
                        {
                            "authenticate_cognito": [],
                            "authenticate_oidc": [],
                            "fixed_response": [],
                            "forward": [],
                            "redirect": [],
                            "type": "forward"
                        }
                    ],
                    "port": 80,
                    "protocol": "HTTP",
                    "tags": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "default_action": [
                        {
                            "authenticate_cognito": [],
                            "authenticate_oidc": [],
                            "fixed_response": [],
                            "forward": [],
                            "order": true,
                            "redirect": [],
                            "target_group_arn": true
                        }
                    ],
                    "id": true,
                    "load_balancer_arn": true,
                    "mutual_authentication": true,
                    "ssl_policy": true,
                    "tags_all": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "default_action": [
                        {
                            "authenticate_cognito": [],
                            "authenticate_oidc": [],
                            "fixed_response": [],
                            "forward": [],
                            "redirect": []
                        }
                    ],
                    "mutual_authentication": [],
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.load_balancer.aws_lb_target_group.application",
            "module_address": "module.load_balancer",
            "mode": "managed",
            "type": "aws_lb_target_group",
            "name": "application",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "deregistration_delay": "300",
                    "health_check": [
                        {
                            "enabled": true,
                            "healthy_threshold": 2,
                            "interval": 30,
                            "path": "/",
                            "port": "traffic-port",
                            "protocol": "HTTP",
                            "timeout": 5,
                            "unhealthy_threshold": 2
                        }
                    ],
                    "lambda_multi_value_headers_enabled": false,
                    "name": "tg-lb-flipeon-dev",
                    "port": 80,
                    "protocol": "HTTP",
                    "proxy_protocol_v2": false,
                    "slow_start": 0,
                    "tags": null,
                    "target_type": "ip"
                },
                "after_unknown": {
                    "arn": true,
                    "arn_suffix": true,
                    "connection_termination": true,
                    "health_check": [
                        {
                            "matcher": true
                        }
                    ],
                    "id": true,
                    "ip_address_type": true,
                    "load_balancer_arns": true,
                    "load_balancing_algorithm_type": true,
                    "load_balancing_anomaly_mitigation": true,
                    "load_balancing_cross_zone_enabled": true,
                    "name_prefix": true,
                    "preserve_client_ip": true,
                    "protocol_version": true,
                    "stickiness": true,
                    "tags_all": true,
                    "target_failover": true,
                    "target_health_state": true,
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "health_check": [
                        {}
                    ],
                    "load_balancer_arns": [],
                    "stickiness": [],
                    "tags_all": {},
                    "target_failover": [],
                    "target_health_state": []
                }
            }
        },
        {
            "address": "module.logs_bucket.aws_s3_bucket.bucket",
            "module_address": "module.logs_bucket",
            "mode": "managed",
            "type": "aws_s3_bucket",
            "name": "bucket",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "bucket": "logs-bucket-flipeon-dev",
                    "force_destroy": false,
                    "tags": {
                        "Name": "logs-bucket-flipeon-dev",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "logs-bucket-flipeon-dev",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "acceleration_status": true,
                    "acl": true,
                    "arn": true,
                    "bucket_domain_name": true,
                    "bucket_prefix": true,
                    "bucket_regional_domain_name": true,
                    "cors_rule": true,
                    "grant": true,
                    "hosted_zone_id": true,
                    "id": true,
                    "lifecycle_rule": true,
                    "logging": true,
                    "object_lock_configuration": true,
                    "object_lock_enabled": true,
                    "policy": true,
                    "region": true,
                    "replication_configuration": true,
                    "request_payer": true,
                    "server_side_encryption_configuration": true,
                    "tags": {},
                    "tags_all": {},
                    "versioning": true,
                    "website": true,
                    "website_domain": true,
                    "website_endpoint": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "cors_rule": [],
                    "grant": [],
                    "lifecycle_rule": [],
                    "logging": [],
                    "object_lock_configuration": [],
                    "replication_configuration": [],
                    "server_side_encryption_configuration": [],
                    "tags": {},
                    "tags_all": {},
                    "versioning": [],
                    "website": []
                }
            }
        },
        {
            "address": "module.logs_bucket.aws_s3_bucket_lifecycle_configuration.bucket_lifecycle[0]",
            "module_address": "module.logs_bucket",
            "mode": "managed",
            "type": "aws_s3_bucket_lifecycle_configuration",
            "name": "bucket_lifecycle",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "expected_bucket_owner": null,
                    "rule": [
                        {
                            "abort_incomplete_multipart_upload": [],
                            "expiration": [
                                {
                                    "date": null,
                                    "days": 365
                                }
                            ],
                            "filter": [],
                            "id": "expire_old_objects",
                            "noncurrent_version_expiration": [],
                            "noncurrent_version_transition": [],
                            "prefix": null,
                            "status": "Enabled",
                            "transition": [
                                {
                                    "date": "",
                                    "days": 3,
                                    "storage_class": "GLACIER"
                                }
                            ]
                        }
                    ],
                    "timeouts": null
                },
                "after_unknown": {
                    "bucket": true,
                    "id": true,
                    "rule": [
                        {
                            "abort_incomplete_multipart_upload": [],
                            "expiration": [
                                {
                                    "expired_object_delete_marker": true
                                }
                            ],
                            "filter": [],
                            "noncurrent_version_expiration": [],
                            "noncurrent_version_transition": [],
                            "transition": [
                                {}
                            ]
                        }
                    ]
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "rule": [
                        {
                            "abort_incomplete_multipart_upload": [],
                            "expiration": [
                                {}
                            ],
                            "filter": [],
                            "noncurrent_version_expiration": [],
                            "noncurrent_version_transition": [],
                            "transition": [
                                {}
                            ]
                        }
                    ]
                }
            }
        },
        {
            "address": "module.logs_bucket.aws_s3_bucket_policy.bucket_policy",
            "module_address": "module.logs_bucket",
            "mode": "managed",
            "type": "aws_s3_bucket_policy",
            "name": "bucket_policy",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {},
                "after_unknown": {
                    "bucket": true,
                    "id": true,
                    "policy": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.logs_bucket.aws_s3_bucket_public_access_block.bucket_policy_settings",
            "module_address": "module.logs_bucket",
            "mode": "managed",
            "type": "aws_s3_bucket_public_access_block",
            "name": "bucket_policy_settings",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "block_public_acls": false,
                    "block_public_policy": false,
                    "ignore_public_acls": false,
                    "restrict_public_buckets": false
                },
                "after_unknown": {
                    "bucket": true,
                    "id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.network.aws_eip.nat[0]",
            "module_address": "module.network",
            "mode": "managed",
            "type": "aws_eip",
            "name": "nat",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "address": null,
                    "associate_with_private_ip": null,
                    "customer_owned_ipv4_pool": null,
                    "domain": "vpc",
                    "tags": {
                        "Name": "eip-flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "eip-flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "allocation_id": true,
                    "arn": true,
                    "association_id": true,
                    "carrier_ip": true,
                    "customer_owned_ip": true,
                    "id": true,
                    "instance": true,
                    "network_border_group": true,
                    "network_interface": true,
                    "private_dns": true,
                    "private_ip": true,
                    "ptr_record": true,
                    "public_dns": true,
                    "public_ip": true,
                    "public_ipv4_pool": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.aws_eip.nat[1]",
            "module_address": "module.network",
            "mode": "managed",
            "type": "aws_eip",
            "name": "nat",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "address": null,
                    "associate_with_private_ip": null,
                    "customer_owned_ipv4_pool": null,
                    "domain": "vpc",
                    "tags": {
                        "Name": "eip-flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "eip-flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "allocation_id": true,
                    "arn": true,
                    "association_id": true,
                    "carrier_ip": true,
                    "customer_owned_ip": true,
                    "id": true,
                    "instance": true,
                    "network_border_group": true,
                    "network_interface": true,
                    "private_dns": true,
                    "private_ip": true,
                    "ptr_record": true,
                    "public_dns": true,
                    "public_ip": true,
                    "public_ipv4_pool": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.aws_eip.nat[2]",
            "module_address": "module.network",
            "mode": "managed",
            "type": "aws_eip",
            "name": "nat",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "address": null,
                    "associate_with_private_ip": null,
                    "customer_owned_ipv4_pool": null,
                    "domain": "vpc",
                    "tags": {
                        "Name": "eip-flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "eip-flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "allocation_id": true,
                    "arn": true,
                    "association_id": true,
                    "carrier_ip": true,
                    "customer_owned_ip": true,
                    "id": true,
                    "instance": true,
                    "network_border_group": true,
                    "network_interface": true,
                    "private_dns": true,
                    "private_ip": true,
                    "ptr_record": true,
                    "public_dns": true,
                    "public_ip": true,
                    "public_ipv4_pool": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.rds.aws_db_instance.db_reader",
            "module_address": "module.rds",
            "mode": "managed",
            "type": "aws_db_instance",
            "name": "db_reader",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allocated_storage": 20,
                    "allow_major_version_upgrade": null,
                    "apply_immediately": false,
                    "auto_minor_version_upgrade": true,
                    "blue_green_update": [],
                    "copy_tags_to_snapshot": false,
                    "custom_iam_instance_profile": null,
                    "customer_owned_ip_enabled": null,
                    "db_name": "flipeon_dev",
                    "dedicated_log_volume": false,
                    "delete_automated_backups": true,
                    "deletion_protection": null,
                    "domain": null,
                    "domain_auth_secret_arn": null,
                    "domain_dns_ips": null,
                    "domain_iam_role_name": null,
                    "domain_ou": null,
                    "enabled_cloudwatch_logs_exports": null,
                    "engine": "postgres",
                    "engine_version": "14",
                    "final_snapshot_identifier": null,
                    "iam_database_authentication_enabled": null,
                    "identifier": "flipeon-rds-dev-reader",
                    "instance_class": "db.t3.small",
                    "manage_master_user_password": null,
                    "max_allocated_storage": null,
                    "monitoring_interval": 0,
                    "performance_insights_enabled": false,
                    "port": 5432,
                    "publicly_accessible": false,
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "skip_final_snapshot": false,
                    "storage_encrypted": null,
                    "tags": {
                        "Name": "flipeon-rds-dev-reader",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon-rds-dev-reader",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null,
                    "username": "flipeon"
                },
                "after_unknown": {
                    "address": true,
                    "arn": true,
                    "availability_zone": true,
                    "backup_retention_period": true,
                    "backup_target": true,
                    "backup_window": true,
                    "blue_green_update": [],
                    "ca_cert_identifier": true,
                    "character_set_name": true,
                    "db_subnet_group_name": true,
                    "domain_fqdn": true,
                    "endpoint": true,
                    "engine_version_actual": true,
                    "hosted_zone_id": true,
                    "id": true,
                    "identifier_prefix": true,
                    "iops": true,
                    "kms_key_id": true,
                    "latest_restorable_time": true,
                    "license_model": true,
                    "listener_endpoint": true,
                    "maintenance_window": true,
                    "master_user_secret": true,
                    "master_user_secret_kms_key_id": true,
                    "monitoring_role_arn": true,
                    "multi_az": true,
                    "nchar_character_set_name": true,
                    "network_type": true,
                    "option_group_name": true,
                    "parameter_group_name": true,
                    "password": true,
                    "performance_insights_kms_key_id": true,
                    "performance_insights_retention_period": true,
                    "replica_mode": true,
                    "replicas": true,
                    "replicate_source_db": true,
                    "resource_id": true,
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "snapshot_identifier": true,
                    "status": true,
                    "storage_throughput": true,
                    "storage_type": true,
                    "tags": {},
                    "tags_all": {},
                    "timezone": true,
                    "vpc_security_group_ids": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "blue_green_update": [],
                    "listener_endpoint": [],
                    "master_user_secret": [],
                    "password": true,
                    "replicas": [],
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "tags": {},
                    "tags_all": {},
                    "vpc_security_group_ids": []
                }
            }
        },
        {
            "address": "module.rds.local_file.db_password_file",
            "module_address": "module.rds",
            "mode": "managed",
            "type": "local_file",
            "name": "db_password_file",
            "provider_name": "registry.terraform.io/hashicorp/local",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "content_base64": null,
                    "directory_permission": "0777",
                    "file_permission": "0777",
                    "filename": "rds/db_password.txt",
                    "sensitive_content": null,
                    "source": null
                },
                "after_unknown": {
                    "content": true,
                    "content_base64sha256": true,
                    "content_base64sha512": true,
                    "content_md5": true,
                    "content_sha1": true,
                    "content_sha256": true,
                    "content_sha512": true,
                    "id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "content": true,
                    "sensitive_content": true
                }
            }
        },
        {
            "address": "module.rds.random_password.db_password",
            "module_address": "module.rds",
            "mode": "managed",
            "type": "random_password",
            "name": "db_password",
            "provider_name": "registry.terraform.io/hashicorp/random",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "keepers": null,
                    "length": 16,
                    "lower": true,
                    "min_lower": 0,
                    "min_numeric": 0,
                    "min_special": 0,
                    "min_upper": 0,
                    "number": true,
                    "numeric": true,
                    "override_special": "_%@",
                    "special": true,
                    "upper": true
                },
                "after_unknown": {
                    "bcrypt_hash": true,
                    "id": true,
                    "result": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "bcrypt_hash": true,
                    "result": true
                }
            }
        },
        {
            "address": "module.route53.aws_route53_record.api",
            "module_address": "module.route53",
            "mode": "managed",
            "type": "aws_route53_record",
            "name": "api",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "alias": [
                        {
                            "evaluate_target_health": true
                        }
                    ],
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "health_check_id": null,
                    "latency_routing_policy": [],
                    "multivalue_answer_routing_policy": null,
                    "name": "*.api",
                    "records": null,
                    "set_identifier": null,
                    "ttl": null,
                    "type": "A",
                    "weighted_routing_policy": []
                },
                "after_unknown": {
                    "alias": [
                        {
                            "name": true,
                            "zone_id": true
                        }
                    ],
                    "allow_overwrite": true,
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "fqdn": true,
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "id": true,
                    "latency_routing_policy": [],
                    "weighted_routing_policy": [],
                    "zone_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "alias": [
                        {}
                    ],
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "latency_routing_policy": [],
                    "weighted_routing_policy": []
                }
            }
        },
        {
            "address": "module.route53.aws_route53_record.app",
            "module_address": "module.route53",
            "mode": "managed",
            "type": "aws_route53_record",
            "name": "app",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "alias": [
                        {
                            "evaluate_target_health": true
                        }
                    ],
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "health_check_id": null,
                    "latency_routing_policy": [],
                    "multivalue_answer_routing_policy": null,
                    "name": "*.app",
                    "records": null,
                    "set_identifier": null,
                    "ttl": null,
                    "type": "A",
                    "weighted_routing_policy": []
                },
                "after_unknown": {
                    "alias": [
                        {
                            "name": true,
                            "zone_id": true
                        }
                    ],
                    "allow_overwrite": true,
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "fqdn": true,
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "id": true,
                    "latency_routing_policy": [],
                    "weighted_routing_policy": [],
                    "zone_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "alias": [
                        {}
                    ],
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "latency_routing_policy": [],
                    "weighted_routing_policy": []
                }
            }
        },
        {
            "address": "module.route53.aws_route53_record.other_all",
            "module_address": "module.route53",
            "mode": "managed",
            "type": "aws_route53_record",
            "name": "other_all",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "alias": [
                        {
                            "evaluate_target_health": true
                        }
                    ],
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "health_check_id": null,
                    "latency_routing_policy": [],
                    "multivalue_answer_routing_policy": null,
                    "name": "*",
                    "records": null,
                    "set_identifier": null,
                    "ttl": null,
                    "type": "A",
                    "weighted_routing_policy": []
                },
                "after_unknown": {
                    "alias": [
                        {
                            "name": true,
                            "zone_id": true
                        }
                    ],
                    "allow_overwrite": true,
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "fqdn": true,
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "id": true,
                    "latency_routing_policy": [],
                    "weighted_routing_policy": [],
                    "zone_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "alias": [
                        {}
                    ],
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "latency_routing_policy": [],
                    "weighted_routing_policy": []
                }
            }
        },
        {
            "address": "module.route53.aws_route53_record.www",
            "module_address": "module.route53",
            "mode": "managed",
            "type": "aws_route53_record",
            "name": "www",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "alias": [
                        {
                            "evaluate_target_health": true
                        }
                    ],
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "health_check_id": null,
                    "latency_routing_policy": [],
                    "multivalue_answer_routing_policy": null,
                    "name": "www",
                    "records": null,
                    "set_identifier": null,
                    "ttl": null,
                    "type": "A",
                    "weighted_routing_policy": []
                },
                "after_unknown": {
                    "alias": [
                        {
                            "name": true,
                            "zone_id": true
                        }
                    ],
                    "allow_overwrite": true,
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "fqdn": true,
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "id": true,
                    "latency_routing_policy": [],
                    "weighted_routing_policy": [],
                    "zone_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "alias": [
                        {}
                    ],
                    "cidr_routing_policy": [],
                    "failover_routing_policy": [],
                    "geolocation_routing_policy": [],
                    "geoproximity_routing_policy": [],
                    "latency_routing_policy": [],
                    "weighted_routing_policy": []
                }
            }
        },
        {
            "address": "module.security_groups.aws_security_group.ecs",
            "module_address": "module.security_groups",
            "mode": "managed",
            "type": "aws_security_group",
            "name": "ecs",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "Security group for ECS",
                    "egress": [
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description": "",
                            "from_port": 0,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "-1",
                            "security_groups": [],
                            "self": false,
                            "to_port": 0
                        }
                    ],
                    "ingress": [
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description": "",
                            "from_port": 443,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [],
                            "self": false,
                            "to_port": 443
                        },
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description": "",
                            "from_port": 80,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [],
                            "self": false,
                            "to_port": 80
                        }
                    ],
                    "name": "ecs-security-group",
                    "revoke_rules_on_delete": false,
                    "tags": {
                        "Name": "ecs-security-group",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "ecs-security-group",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "egress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "id": true,
                    "ingress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        },
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "name_prefix": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "ingress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        },
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.security_groups.aws_security_group.rds",
            "module_address": "module.security_groups",
            "mode": "managed",
            "type": "aws_security_group",
            "name": "rds",
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "Security group for RDS",
                    "egress": [
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description": "",
                            "from_port": 0,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "-1",
                            "security_groups": [],
                            "self": false,
                            "to_port": 0
                        }
                    ],
                    "ingress": [
                        {
                            "cidr_blocks": [
                                "0.0.0.0/0"
                            ],
                            "description": "",
                            "from_port": 5432,
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "protocol": "tcp",
                            "security_groups": [],
                            "self": false,
                            "to_port": 5432
                        }
                    ],
                    "name": "rds-security-group",
                    "revoke_rules_on_delete": false,
                    "tags": {
                        "Name": "rds-security-group",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "rds-security-group",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "egress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "id": true,
                    "ingress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "name_prefix": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "ingress": [
                        {
                            "cidr_blocks": [
                                false
                            ],
                            "ipv6_cidr_blocks": [],
                            "prefix_list_ids": [],
                            "security_groups": []
                        }
                    ],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_default_network_acl.this[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_default_network_acl",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "egress": [
                        {
                            "action": "allow",
                            "cidr_block": "",
                            "from_port": 0,
                            "icmp_code": null,
                            "icmp_type": null,
                            "ipv6_cidr_block": "::/0",
                            "protocol": "-1",
                            "rule_no": 101,
                            "to_port": 0
                        },
                        {
                            "action": "allow",
                            "cidr_block": "0.0.0.0/0",
                            "from_port": 0,
                            "icmp_code": null,
                            "icmp_type": null,
                            "ipv6_cidr_block": "",
                            "protocol": "-1",
                            "rule_no": 100,
                            "to_port": 0
                        }
                    ],
                    "ingress": [
                        {
                            "action": "allow",
                            "cidr_block": "",
                            "from_port": 0,
                            "icmp_code": null,
                            "icmp_type": null,
                            "ipv6_cidr_block": "::/0",
                            "protocol": "-1",
                            "rule_no": 101,
                            "to_port": 0
                        },
                        {
                            "action": "allow",
                            "cidr_block": "0.0.0.0/0",
                            "from_port": 0,
                            "icmp_code": null,
                            "icmp_type": null,
                            "ipv6_cidr_block": "",
                            "protocol": "-1",
                            "rule_no": 100,
                            "to_port": 0
                        }
                    ],
                    "subnet_ids": null,
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "default_network_acl_id": true,
                    "egress": [
                        {},
                        {}
                    ],
                    "id": true,
                    "ingress": [
                        {},
                        {}
                    ],
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [
                        {},
                        {}
                    ],
                    "ingress": [
                        {},
                        {}
                    ],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_default_route_table.default[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_default_route_table",
            "name": "default",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "propagating_vgws": null,
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": {
                        "create": "5m",
                        "update": "5m"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "default_route_table_id": true,
                    "id": true,
                    "owner_id": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "route": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_default_security_group.this[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_default_security_group",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "revoke_rules_on_delete": false,
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "description": true,
                    "egress": true,
                    "id": true,
                    "ingress": true,
                    "name": true,
                    "name_prefix": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "egress": [],
                    "ingress": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_eip.nat[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_eip",
            "name": "nat",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "address": null,
                    "associate_with_private_ip": null,
                    "customer_owned_ipv4_pool": null,
                    "domain": "vpc",
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "allocation_id": true,
                    "arn": true,
                    "association_id": true,
                    "carrier_ip": true,
                    "customer_owned_ip": true,
                    "id": true,
                    "instance": true,
                    "network_border_group": true,
                    "network_interface": true,
                    "private_dns": true,
                    "private_ip": true,
                    "ptr_record": true,
                    "public_dns": true,
                    "public_ip": true,
                    "public_ipv4_pool": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_internet_gateway.this[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_internet_gateway",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_nat_gateway.this[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_nat_gateway",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "connectivity_type": "public",
                    "secondary_allocation_ids": null,
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "allocation_id": true,
                    "association_id": true,
                    "id": true,
                    "network_interface_id": true,
                    "private_ip": true,
                    "public_ip": true,
                    "secondary_private_ip_address_count": true,
                    "secondary_private_ip_addresses": true,
                    "subnet_id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "secondary_private_ip_addresses": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_route.private_nat_gateway[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_route",
            "name": "private_nat_gateway",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "gateway_id": null,
                    "local_gateway_id": null,
                    "timeouts": {
                        "create": "5m",
                        "delete": null,
                        "update": null
                    },
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null
                },
                "after_unknown": {
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "nat_gateway_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "timeouts": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_route.public_internet_gateway[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_route",
            "name": "public_internet_gateway",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "carrier_gateway_id": null,
                    "core_network_arn": null,
                    "destination_cidr_block": "0.0.0.0/0",
                    "destination_ipv6_cidr_block": null,
                    "destination_prefix_list_id": null,
                    "egress_only_gateway_id": null,
                    "local_gateway_id": null,
                    "nat_gateway_id": null,
                    "timeouts": {
                        "create": "5m",
                        "delete": null,
                        "update": null
                    },
                    "transit_gateway_id": null,
                    "vpc_endpoint_id": null,
                    "vpc_peering_connection_id": null
                },
                "after_unknown": {
                    "gateway_id": true,
                    "id": true,
                    "instance_id": true,
                    "instance_owner_id": true,
                    "network_interface_id": true,
                    "origin": true,
                    "route_table_id": true,
                    "state": true,
                    "timeouts": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "timeouts": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_route_table.private[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_route_table.public[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_route_table",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "owner_id": true,
                    "propagating_vgws": true,
                    "route": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "propagating_vgws": [],
                    "route": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_route_table_association.private[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.network.module.vpc.aws_route_table_association.private[1]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.network.module.vpc.aws_route_table_association.private[2]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "private",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.network.module.vpc.aws_route_table_association.public[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.network.module.vpc.aws_route_table_association.public[1]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.network.module.vpc.aws_route_table_association.public[2]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_route_table_association",
            "name": "public",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "gateway_id": null,
                    "timeouts": null
                },
                "after_unknown": {
                    "id": true,
                    "route_table_id": true,
                    "subnet_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {}
            }
        },
        {
            "address": "module.network.module.vpc.aws_subnet.private[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1a",
                    "cidr_block": "10.0.1.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_subnet.private[1]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1b",
                    "cidr_block": "10.0.2.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_subnet.private[2]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "private",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1c",
                    "cidr_block": "10.0.3.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_subnet.public[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1a",
                    "cidr_block": "10.0.101.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_subnet.public[1]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 1,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1b",
                    "cidr_block": "10.0.102.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_subnet.public[2]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_subnet",
            "name": "public",
            "index": 2,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_ipv6_address_on_creation": false,
                    "availability_zone": "us-east-1c",
                    "cidr_block": "10.0.103.0/24",
                    "customer_owned_ipv4_pool": null,
                    "enable_dns64": false,
                    "enable_lni_at_device_index": null,
                    "enable_resource_name_dns_a_record_on_launch": false,
                    "enable_resource_name_dns_aaaa_record_on_launch": false,
                    "ipv6_cidr_block": null,
                    "ipv6_native": false,
                    "map_customer_owned_ip_on_launch": null,
                    "map_public_ip_on_launch": false,
                    "outpost_arn": null,
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": null
                },
                "after_unknown": {
                    "arn": true,
                    "availability_zone_id": true,
                    "id": true,
                    "ipv6_cidr_block_association_id": true,
                    "owner_id": true,
                    "private_dns_hostname_type_on_launch": true,
                    "tags": {},
                    "tags_all": {},
                    "vpc_id": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.network.module.vpc.aws_vpc.this[0]",
            "module_address": "module.network.module.vpc",
            "mode": "managed",
            "type": "aws_vpc",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "assign_generated_ipv6_cidr_block": null,
                    "cidr_block": "10.0.0.0/16",
                    "enable_dns_hostnames": true,
                    "enable_dns_support": true,
                    "instance_tenancy": "default",
                    "ipv4_ipam_pool_id": null,
                    "ipv4_netmask_length": null,
                    "ipv6_ipam_pool_id": null,
                    "ipv6_netmask_length": null,
                    "tags": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon",
                        "ProjectGroup": "grp-flipeon-dev"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "default_network_acl_id": true,
                    "default_route_table_id": true,
                    "default_security_group_id": true,
                    "dhcp_options_id": true,
                    "enable_network_address_usage_metrics": true,
                    "id": true,
                    "ipv6_association_id": true,
                    "ipv6_cidr_block": true,
                    "ipv6_cidr_block_network_border_group": true,
                    "main_route_table_id": true,
                    "owner_id": true,
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "tags": {},
                    "tags_all": {}
                }
            }
        },
        {
            "address": "module.rds.module.db.random_password.master_password[0]",
            "module_address": "module.rds.module.db",
            "mode": "managed",
            "type": "random_password",
            "name": "master_password",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/random",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "keepers": null,
                    "length": 16,
                    "lower": true,
                    "min_lower": 0,
                    "min_numeric": 0,
                    "min_special": 0,
                    "min_upper": 0,
                    "number": true,
                    "numeric": true,
                    "override_special": null,
                    "special": false,
                    "upper": true
                },
                "after_unknown": {
                    "bcrypt_hash": true,
                    "id": true,
                    "result": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "bcrypt_hash": true,
                    "result": true
                }
            }
        },
        {
            "address": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "module_address": "module.rds.module.db.module.db_instance",
            "mode": "managed",
            "type": "aws_db_instance",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "allocated_storage": 20,
                    "allow_major_version_upgrade": false,
                    "apply_immediately": false,
                    "auto_minor_version_upgrade": true,
                    "blue_green_update": [],
                    "copy_tags_to_snapshot": false,
                    "custom_iam_instance_profile": null,
                    "customer_owned_ip_enabled": null,
                    "db_name": "flipeon_dev",
                    "dedicated_log_volume": false,
                    "delete_automated_backups": true,
                    "deletion_protection": false,
                    "domain": null,
                    "domain_auth_secret_arn": null,
                    "domain_dns_ips": null,
                    "domain_iam_role_name": null,
                    "domain_ou": null,
                    "enabled_cloudwatch_logs_exports": null,
                    "engine": "postgres",
                    "engine_version": "14",
                    "final_snapshot_identifier": null,
                    "iam_database_authentication_enabled": false,
                    "identifier": "flipeon-rds-dev-writer",
                    "instance_class": "db.t3.medium",
                    "manage_master_user_password": null,
                    "max_allocated_storage": 100,
                    "monitoring_interval": 0,
                    "multi_az": false,
                    "performance_insights_enabled": false,
                    "port": 5432,
                    "publicly_accessible": false,
                    "replicate_source_db": null,
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "skip_final_snapshot": true,
                    "storage_encrypted": true,
                    "tags": {
                        "Name": "flipeon-rds-dev-writer",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon-rds-dev-writer",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "timeouts": {
                        "create": null,
                        "delete": null,
                        "update": null
                    },
                    "username": "flipeon"
                },
                "after_unknown": {
                    "address": true,
                    "arn": true,
                    "availability_zone": true,
                    "backup_retention_period": true,
                    "backup_target": true,
                    "backup_window": true,
                    "blue_green_update": [],
                    "ca_cert_identifier": true,
                    "character_set_name": true,
                    "db_subnet_group_name": true,
                    "domain_fqdn": true,
                    "endpoint": true,
                    "engine_version_actual": true,
                    "hosted_zone_id": true,
                    "id": true,
                    "identifier_prefix": true,
                    "iops": true,
                    "kms_key_id": true,
                    "latest_restorable_time": true,
                    "license_model": true,
                    "listener_endpoint": true,
                    "maintenance_window": true,
                    "master_user_secret": true,
                    "master_user_secret_kms_key_id": true,
                    "monitoring_role_arn": true,
                    "nchar_character_set_name": true,
                    "network_type": true,
                    "option_group_name": true,
                    "parameter_group_name": true,
                    "password": true,
                    "performance_insights_kms_key_id": true,
                    "performance_insights_retention_period": true,
                    "replica_mode": true,
                    "replicas": true,
                    "resource_id": true,
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "snapshot_identifier": true,
                    "status": true,
                    "storage_throughput": true,
                    "storage_type": true,
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "timezone": true,
                    "vpc_security_group_ids": true
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "blue_green_update": [],
                    "listener_endpoint": [],
                    "master_user_secret": [],
                    "password": true,
                    "replicas": [],
                    "restore_to_point_in_time": [],
                    "s3_import": [],
                    "tags": {},
                    "tags_all": {},
                    "timeouts": {},
                    "vpc_security_group_ids": []
                }
            }
        },
        {
            "address": "module.rds.module.db.module.db_parameter_group.aws_db_parameter_group.this[0]",
            "module_address": "module.rds.module.db.module.db_parameter_group",
            "mode": "managed",
            "type": "aws_db_parameter_group",
            "name": "this",
            "index": 0,
            "provider_name": "registry.terraform.io/hashicorp/aws",
            "change": {
                "actions": [
                    "create"
                ],
                "before": null,
                "after": {
                    "description": "flipeon-rds-dev-writer parameter group",
                    "family": "postgres14",
                    "name_prefix": "flipeon-rds-dev-writer-",
                    "parameter": [],
                    "tags": {
                        "Name": "flipeon-rds-dev-writer",
                        "ProjectGroup": "grp-flipeon-dev"
                    },
                    "tags_all": {
                        "Name": "flipeon-rds-dev-writer",
                        "ProjectGroup": "grp-flipeon-dev"
                    }
                },
                "after_unknown": {
                    "arn": true,
                    "id": true,
                    "name": true,
                    "parameter": [],
                    "tags": {},
                    "tags_all": {}
                },
                "before_sensitive": false,
                "after_sensitive": {
                    "parameter": [],
                    "tags": {},
                    "tags_all": {}
                }
            }
        }
    ],
    "prior_state": {
        "format_version": "1.0",
        "terraform_version": "1.8.5",
        "values": {
            "root_module": {
                "child_modules": [
                    {
                        "address": "module.rds",
                        "child_modules": [
                            {
                                "address": "module.rds.module.db",
                                "child_modules": [
                                    {
                                        "resources": [
                                            {
                                                "address": "module.rds.module.db.module.db_instance.data.aws_iam_policy_document.enhanced_monitoring",
                                                "mode": "data",
                                                "type": "aws_iam_policy_document",
                                                "name": "enhanced_monitoring",
                                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                                "schema_version": 0,
                                                "values": {
                                                    "id": "76086537",
                                                    "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"monitoring.rds.amazonaws.com\"\n      }\n    }\n  ]\n}",
                                                    "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRole\",\"Principal\":{\"Service\":\"monitoring.rds.amazonaws.com\"}}]}",
                                                    "override_json": null,
                                                    "override_policy_documents": null,
                                                    "policy_id": null,
                                                    "source_json": null,
                                                    "source_policy_documents": null,
                                                    "statement": [
                                                        {
                                                            "actions": [
                                                                "sts:AssumeRole"
                                                            ],
                                                            "condition": [],
                                                            "effect": "Allow",
                                                            "not_actions": [],
                                                            "not_principals": [],
                                                            "not_resources": [],
                                                            "principals": [
                                                                {
                                                                    "identifiers": [
                                                                        "monitoring.rds.amazonaws.com"
                                                                    ],
                                                                    "type": "Service"
                                                                }
                                                            ],
                                                            "resources": [],
                                                            "sid": ""
                                                        }
                                                    ],
                                                    "version": "2012-10-17"
                                                },
                                                "sensitive_values": {
                                                    "statement": [
                                                        {
                                                            "actions": [
                                                                false
                                                            ],
                                                            "condition": [],
                                                            "not_actions": [],
                                                            "not_principals": [],
                                                            "not_resources": [],
                                                            "principals": [
                                                                {
                                                                    "identifiers": [
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "resources": []
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "address": "module.rds.module.db.module.db_instance.data.aws_partition.current",
                                                "mode": "data",
                                                "type": "aws_partition",
                                                "name": "current",
                                                "provider_name": "registry.terraform.io/hashicorp/aws",
                                                "schema_version": 0,
                                                "values": {
                                                    "dns_suffix": "amazonaws.com",
                                                    "id": "aws",
                                                    "partition": "aws",
                                                    "reverse_dns_prefix": "com.amazonaws"
                                                },
                                                "sensitive_values": {}
                                            }
                                        ],
                                        "address": "module.rds.module.db.module.db_instance"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        }
    },
    "configuration": {
        "provider_config": {
            "aws": {
                "name": "aws",
                "full_name": "registry.terraform.io/hashicorp/aws",
                "expressions": {
                    "region": {
                        "references": [
                            "var.region"
                        ]
                    }
                }
            },
            "helm": {
                "name": "helm",
                "full_name": "registry.terraform.io/hashicorp/helm"
            },
            "kubernetes": {
                "name": "kubernetes",
                "full_name": "registry.terraform.io/hashicorp/kubernetes"
            },
            "module.load_balancer:aws": {
                "name": "aws",
                "full_name": "registry.terraform.io/hashicorp/aws",
                "module_address": "module.load_balancer",
                "expressions": {
                    "region": {
                        "references": [
                            "var.region"
                        ]
                    }
                }
            },
            "module.rds:local": {
                "name": "local",
                "full_name": "registry.terraform.io/hashicorp/local",
                "module_address": "module.rds"
            },
            "module.rds:random": {
                "name": "random",
                "full_name": "registry.terraform.io/hashicorp/random",
                "module_address": "module.rds"
            },
            "module.route53:aws": {
                "name": "aws",
                "full_name": "registry.terraform.io/hashicorp/aws",
                "module_address": "module.route53",
                "expressions": {
                    "region": {
                        "references": [
                            "var.region"
                        ]
                    }
                }
            }
        },
        "root_module": {
            "resources": [
                {
                    "address": "aws_route53_zone.primary",
                    "mode": "managed",
                    "type": "aws_route53_zone",
                    "name": "primary",
                    "provider_config_key": "aws",
                    "expressions": {
                        "name": {
                            "references": [
                                "local.domain"
                            ]
                        }
                    },
                    "schema_version": 0
                }
            ],
            "module_calls": {
                "ecs_api": {
                    "source": "./ecs",
                    "expressions": {
                        "cluster_name": {
                            "references": [
                                "var.project_name",
                                "var.environment"
                            ]
                        },
                        "desired_capacity": {
                            "constant_value": 1
                        },
                        "lb_target_group": {
                            "references": [
                                "module.load_balancer.target_group_arn",
                                "module.load_balancer"
                            ]
                        },
                        "max_capacity": {
                            "constant_value": 2
                        },
                        "region": {
                            "references": [
                                "var.region"
                            ]
                        },
                        "source_security_group_ids": {
                            "references": [
                                "module.security_groups.ecs_security_group_id",
                                "module.security_groups"
                            ]
                        },
                        "subnet_ids": {
                            "references": [
                                "module.network.private_subnets",
                                "module.network"
                            ]
                        },
                        "task_cpu": {
                            "constant_value": 256
                        },
                        "task_memory": {
                            "constant_value": 512
                        },
                        "vpc_id": {
                            "references": [
                                "module.network.vpc_id",
                                "module.network"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "ecs_task_execution_role_arn": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.ecs_task_execution.arn",
                                        "aws_iam_role.ecs_task_execution"
                                    ]
                                }
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_ecs_cluster.main",
                                "mode": "managed",
                                "type": "aws_ecs_cluster",
                                "name": "main",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "var.cluster_name"
                                        ]
                                    }
                                },
                                "schema_version": 0
                            },
                            {
                                "address": "aws_ecs_service.main",
                                "mode": "managed",
                                "type": "aws_ecs_service",
                                "name": "main",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cluster": {
                                        "references": [
                                            "aws_ecs_cluster.main.id",
                                            "aws_ecs_cluster.main"
                                        ]
                                    },
                                    "deployment_maximum_percent": {
                                        "constant_value": 200
                                    },
                                    "deployment_minimum_healthy_percent": {
                                        "constant_value": 50
                                    },
                                    "desired_count": {
                                        "constant_value": 1
                                    },
                                    "launch_type": {
                                        "constant_value": "FARGATE"
                                    },
                                    "load_balancer": [
                                        {
                                            "container_name": {
                                                "references": [
                                                    "var.cluster_name"
                                                ]
                                            },
                                            "container_port": {
                                                "constant_value": 80
                                            },
                                            "target_group_arn": {
                                                "references": [
                                                    "var.lb_target_group"
                                                ]
                                            }
                                        }
                                    ],
                                    "name": {
                                        "references": [
                                            "var.cluster_name"
                                        ]
                                    },
                                    "network_configuration": [
                                        {
                                            "assign_public_ip": {
                                                "constant_value": true
                                            },
                                            "security_groups": {
                                                "references": [
                                                    "var.source_security_group_ids"
                                                ]
                                            },
                                            "subnets": {
                                                "references": [
                                                    "var.subnet_ids"
                                                ]
                                            }
                                        }
                                    ],
                                    "task_definition": {
                                        "references": [
                                            "aws_ecs_task_definition.main.arn",
                                            "aws_ecs_task_definition.main"
                                        ]
                                    }
                                },
                                "schema_version": 0
                            },
                            {
                                "address": "aws_ecs_task_definition.main",
                                "mode": "managed",
                                "type": "aws_ecs_task_definition",
                                "name": "main",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "container_definitions": {
                                        "references": [
                                            "var.cluster_name",
                                            "var.image",
                                            "var.cluster_name",
                                            "var.region"
                                        ]
                                    },
                                    "cpu": {
                                        "constant_value": "256"
                                    },
                                    "execution_role_arn": {
                                        "references": [
                                            "aws_iam_role.ecs_task_execution.arn",
                                            "aws_iam_role.ecs_task_execution"
                                        ]
                                    },
                                    "family": {
                                        "references": [
                                            "var.cluster_name"
                                        ]
                                    },
                                    "memory": {
                                        "constant_value": "512"
                                    },
                                    "network_mode": {
                                        "constant_value": "awsvpc"
                                    },
                                    "requires_compatibilities": {
                                        "constant_value": [
                                            "FARGATE"
                                        ]
                                    },
                                    "task_role_arn": {
                                        "references": [
                                            "aws_iam_role.ecs_task_execution.arn",
                                            "aws_iam_role.ecs_task_execution"
                                        ]
                                    }
                                },
                                "schema_version": 1
                            },
                            {
                                "address": "aws_iam_role.ecs_task_execution",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "ecs_task_execution",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assume_role_policy": {},
                                    "name": {
                                        "references": [
                                            "var.cluster_name"
                                        ]
                                    }
                                },
                                "schema_version": 0
                            }
                        ],
                        "variables": {
                            "cluster_name": {
                                "description": "The name of the ECS cluster"
                            },
                            "desired_capacity": {
                                "description": "The desired number of ECS service tasks"
                            },
                            "image": {
                                "default": "amazon/amazon-ecs-sample",
                                "description": "The AMI to use for the ECS service"
                            },
                            "lb_target_group": {
                                "description": "The load balancer target group"
                            },
                            "max_capacity": {
                                "description": "The maximum number of ECS service tasks"
                            },
                            "region": {
                                "description": "AWS region"
                            },
                            "source_security_group_ids": {
                                "description": "source_security_group_ids"
                            },
                            "subnet_ids": {
                                "description": "A list of subnet IDs for the ECS service"
                            },
                            "task_cpu": {
                                "description": "The number of cpu units used by the task"
                            },
                            "task_memory": {
                                "description": "The amount (in MiB) of memory used by the task"
                            },
                            "vpc_id": {
                                "description": "The VPC ID where the ECS cluster will be deployed"
                            }
                        }
                    },
                    "depends_on": [
                        "module.load_balancer"
                    ]
                },
                "ecs_app": {
                    "source": "./ecs",
                    "expressions": {
                        "cluster_name": {
                            "references": [
                                "var.project_name",
                                "var.environment"
                            ]
                        },
                        "desired_capacity": {
                            "constant_value": 1
                        },
                        "lb_target_group": {
                            "references": [
                                "module.load_balancer.target_group_arn",
                                "module.load_balancer"
                            ]
                        },
                        "max_capacity": {
                            "constant_value": 2
                        },
                        "region": {
                            "references": [
                                "var.region"
                            ]
                        },
                        "source_security_group_ids": {
                            "references": [
                                "module.security_groups.ecs_security_group_id",
                                "module.security_groups"
                            ]
                        },
                        "subnet_ids": {
                            "references": [
                                "module.network.private_subnets",
                                "module.network"
                            ]
                        },
                        "task_cpu": {
                            "constant_value": 256
                        },
                        "task_memory": {
                            "constant_value": 512
                        },
                        "vpc_id": {
                            "references": [
                                "module.network.vpc_id",
                                "module.network"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "ecs_task_execution_role_arn": {
                                "expression": {
                                    "references": [
                                        "aws_iam_role.ecs_task_execution.arn",
                                        "aws_iam_role.ecs_task_execution"
                                    ]
                                }
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_ecs_cluster.main",
                                "mode": "managed",
                                "type": "aws_ecs_cluster",
                                "name": "main",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "name": {
                                        "references": [
                                            "var.cluster_name"
                                        ]
                                    }
                                },
                                "schema_version": 0
                            },
                            {
                                "address": "aws_ecs_service.main",
                                "mode": "managed",
                                "type": "aws_ecs_service",
                                "name": "main",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "cluster": {
                                        "references": [
                                            "aws_ecs_cluster.main.id",
                                            "aws_ecs_cluster.main"
                                        ]
                                    },
                                    "deployment_maximum_percent": {
                                        "constant_value": 200
                                    },
                                    "deployment_minimum_healthy_percent": {
                                        "constant_value": 50
                                    },
                                    "desired_count": {
                                        "constant_value": 1
                                    },
                                    "launch_type": {
                                        "constant_value": "FARGATE"
                                    },
                                    "load_balancer": [
                                        {
                                            "container_name": {
                                                "references": [
                                                    "var.cluster_name"
                                                ]
                                            },
                                            "container_port": {
                                                "constant_value": 80
                                            },
                                            "target_group_arn": {
                                                "references": [
                                                    "var.lb_target_group"
                                                ]
                                            }
                                        }
                                    ],
                                    "name": {
                                        "references": [
                                            "var.cluster_name"
                                        ]
                                    },
                                    "network_configuration": [
                                        {
                                            "assign_public_ip": {
                                                "constant_value": true
                                            },
                                            "security_groups": {
                                                "references": [
                                                    "var.source_security_group_ids"
                                                ]
                                            },
                                            "subnets": {
                                                "references": [
                                                    "var.subnet_ids"
                                                ]
                                            }
                                        }
                                    ],
                                    "task_definition": {
                                        "references": [
                                            "aws_ecs_task_definition.main.arn",
                                            "aws_ecs_task_definition.main"
                                        ]
                                    }
                                },
                                "schema_version": 0
                            },
                            {
                                "address": "aws_ecs_task_definition.main",
                                "mode": "managed",
                                "type": "aws_ecs_task_definition",
                                "name": "main",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "container_definitions": {
                                        "references": [
                                            "var.cluster_name",
                                            "var.image",
                                            "var.cluster_name",
                                            "var.region"
                                        ]
                                    },
                                    "cpu": {
                                        "constant_value": "256"
                                    },
                                    "execution_role_arn": {
                                        "references": [
                                            "aws_iam_role.ecs_task_execution.arn",
                                            "aws_iam_role.ecs_task_execution"
                                        ]
                                    },
                                    "family": {
                                        "references": [
                                            "var.cluster_name"
                                        ]
                                    },
                                    "memory": {
                                        "constant_value": "512"
                                    },
                                    "network_mode": {
                                        "constant_value": "awsvpc"
                                    },
                                    "requires_compatibilities": {
                                        "constant_value": [
                                            "FARGATE"
                                        ]
                                    },
                                    "task_role_arn": {
                                        "references": [
                                            "aws_iam_role.ecs_task_execution.arn",
                                            "aws_iam_role.ecs_task_execution"
                                        ]
                                    }
                                },
                                "schema_version": 1
                            },
                            {
                                "address": "aws_iam_role.ecs_task_execution",
                                "mode": "managed",
                                "type": "aws_iam_role",
                                "name": "ecs_task_execution",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "assume_role_policy": {},
                                    "name": {
                                        "references": [
                                            "var.cluster_name"
                                        ]
                                    }
                                },
                                "schema_version": 0
                            }
                        ],
                        "variables": {
                            "cluster_name": {
                                "description": "The name of the ECS cluster"
                            },
                            "desired_capacity": {
                                "description": "The desired number of ECS service tasks"
                            },
                            "image": {
                                "default": "amazon/amazon-ecs-sample",
                                "description": "The AMI to use for the ECS service"
                            },
                            "lb_target_group": {
                                "description": "The load balancer target group"
                            },
                            "max_capacity": {
                                "description": "The maximum number of ECS service tasks"
                            },
                            "region": {
                                "description": "AWS region"
                            },
                            "source_security_group_ids": {
                                "description": "source_security_group_ids"
                            },
                            "subnet_ids": {
                                "description": "A list of subnet IDs for the ECS service"
                            },
                            "task_cpu": {
                                "description": "The number of cpu units used by the task"
                            },
                            "task_memory": {
                                "description": "The amount (in MiB) of memory used by the task"
                            },
                            "vpc_id": {
                                "description": "The VPC ID where the ECS cluster will be deployed"
                            }
                        }
                    },
                    "depends_on": [
                        "module.load_balancer"
                    ]
                },
                "load_balancer": {
                    "source": "./lb",
                    "expressions": {
                        "certificate_arn": {
                            "constant_value": ""
                        },
                        "environment": {
                            "references": [
                                "var.environment"
                            ]
                        },
                        "logs_bucket": {
                            "references": [
                                "module.logs_bucket.bucket_domain_name",
                                "module.logs_bucket"
                            ]
                        },
                        "project_group": {
                            "references": [
                                "var.project_group"
                            ]
                        },
                        "project_name": {
                            "references": [
                                "var.project_name"
                            ]
                        },
                        "region": {
                            "references": [
                                "var.region"
                            ]
                        },
                        "security_group_id": {
                            "references": [
                                "module.security_groups.ecs_security_group_id",
                                "module.security_groups"
                            ]
                        },
                        "subnet_ids": {
                            "references": [
                                "module.network.private_subnets",
                                "module.network"
                            ]
                        },
                        "vpc_id": {
                            "references": [
                                "module.network.vpc_id",
                                "module.network"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "load_balancer_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lb.application.arn",
                                        "aws_lb.application"
                                    ]
                                }
                            },
                            "load_balancer_dns_name": {
                                "expression": {
                                    "references": [
                                        "aws_lb.application.dns_name",
                                        "aws_lb.application"
                                    ]
                                }
                            },
                            "load_balancer_security_group": {
                                "expression": {
                                    "references": [
                                        "aws_lb.application.security_groups",
                                        "aws_lb.application"
                                    ]
                                }
                            },
                            "load_balancer_zone_id": {
                                "expression": {
                                    "references": [
                                        "aws_lb.application.zone_id",
                                        "aws_lb.application"
                                    ]
                                }
                            },
                            "target_group_arn": {
                                "expression": {
                                    "references": [
                                        "aws_lb_target_group.application.arn",
                                        "aws_lb_target_group.application"
                                    ]
                                }
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_lb.application",
                                "mode": "managed",
                                "type": "aws_lb",
                                "name": "application",
                                "provider_config_key": "module.load_balancer:aws",
                                "expressions": {
                                    "access_logs": [
                                        {
                                            "bucket": {
                                                "references": [
                                                    "var.logs_bucket"
                                                ]
                                            }
                                        }
                                    ],
                                    "enable_deletion_protection": {
                                        "constant_value": false
                                    },
                                    "enable_http2": {
                                        "constant_value": true
                                    },
                                    "internal": {
                                        "constant_value": false
                                    },
                                    "load_balancer_type": {
                                        "constant_value": "application"
                                    },
                                    "name": {
                                        "references": [
                                            "local.suffix"
                                        ]
                                    },
                                    "security_groups": {
                                        "references": [
                                            "var.security_group_id"
                                        ]
                                    },
                                    "subnets": {
                                        "references": [
                                            "var.subnet_ids"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.project_name",
                                            "var.environment",
                                            "var.project_group"
                                        ]
                                    }
                                },
                                "schema_version": 0
                            },
                            {
                                "address": "aws_lb_listener.http",
                                "mode": "managed",
                                "type": "aws_lb_listener",
                                "name": "http",
                                "provider_config_key": "module.load_balancer:aws",
                                "expressions": {
                                    "default_action": [
                                        {
                                            "redirect": [
                                                {
                                                    "port": {
                                                        "constant_value": "443"
                                                    },
                                                    "protocol": {
                                                        "constant_value": "HTTPS"
                                                    },
                                                    "status_code": {
                                                        "constant_value": "HTTP_301"
                                                    }
                                                }
                                            ],
                                            "type": {
                                                "constant_value": "redirect"
                                            }
                                        }
                                    ],
                                    "load_balancer_arn": {
                                        "references": [
                                            "aws_lb.application.arn",
                                            "aws_lb.application"
                                        ]
                                    },
                                    "port": {
                                        "constant_value": 80
                                    },
                                    "protocol": {
                                        "constant_value": "HTTP"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.certificate_arn"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lb_listener.http2",
                                "mode": "managed",
                                "type": "aws_lb_listener",
                                "name": "http2",
                                "provider_config_key": "module.load_balancer:aws",
                                "expressions": {
                                    "default_action": [
                                        {
                                            "target_group_arn": {
                                                "references": [
                                                    "aws_lb_target_group.application.arn",
                                                    "aws_lb_target_group.application"
                                                ]
                                            },
                                            "type": {
                                                "constant_value": "forward"
                                            }
                                        }
                                    ],
                                    "load_balancer_arn": {
                                        "references": [
                                            "aws_lb.application.arn",
                                            "aws_lb.application"
                                        ]
                                    },
                                    "port": {
                                        "constant_value": 80
                                    },
                                    "protocol": {
                                        "constant_value": "HTTP"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.certificate_arn"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lb_listener.https",
                                "mode": "managed",
                                "type": "aws_lb_listener",
                                "name": "https",
                                "provider_config_key": "module.load_balancer:aws",
                                "expressions": {
                                    "certificate_arn": {
                                        "references": [
                                            "var.certificate_arn"
                                        ]
                                    },
                                    "default_action": [
                                        {
                                            "target_group_arn": {
                                                "references": [
                                                    "aws_lb_target_group.application.arn",
                                                    "aws_lb_target_group.application"
                                                ]
                                            },
                                            "type": {
                                                "constant_value": "forward"
                                            }
                                        }
                                    ],
                                    "load_balancer_arn": {
                                        "references": [
                                            "aws_lb.application.arn",
                                            "aws_lb.application"
                                        ]
                                    },
                                    "port": {
                                        "constant_value": 443
                                    },
                                    "protocol": {
                                        "constant_value": "HTTPS"
                                    },
                                    "ssl_policy": {
                                        "constant_value": "ELBSecurityPolicy-2016-08"
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.certificate_arn"
                                    ]
                                }
                            },
                            {
                                "address": "aws_lb_target_group.application",
                                "mode": "managed",
                                "type": "aws_lb_target_group",
                                "name": "application",
                                "provider_config_key": "module.load_balancer:aws",
                                "expressions": {
                                    "health_check": [
                                        {
                                            "healthy_threshold": {
                                                "constant_value": 2
                                            },
                                            "interval": {
                                                "constant_value": 30
                                            },
                                            "path": {
                                                "constant_value": "/"
                                            },
                                            "protocol": {
                                                "constant_value": "HTTP"
                                            },
                                            "timeout": {
                                                "constant_value": 5
                                            },
                                            "unhealthy_threshold": {
                                                "constant_value": 2
                                            }
                                        }
                                    ],
                                    "name": {
                                        "references": [
                                            "local.suffix"
                                        ]
                                    },
                                    "port": {
                                        "references": [
                                            "var.certificate_arn"
                                        ]
                                    },
                                    "protocol": {
                                        "references": [
                                            "var.certificate_arn"
                                        ]
                                    },
                                    "target_type": {
                                        "constant_value": "ip"
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "var.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 0
                            }
                        ],
                        "variables": {
                            "certificate_arn": {
                                "description": "The ARN of the ACM certificate"
                            },
                            "environment": {
                                "description": "The environment (e.g., dev, prod)"
                            },
                            "logs_bucket": {
                                "description": "The logs bucket for the access logs"
                            },
                            "project_group": {
                                "description": "The project group"
                            },
                            "project_name": {
                                "description": "The name of the project"
                            },
                            "region": {
                                "description": "The AWS region to deploy the resources"
                            },
                            "security_group_id": {
                                "description": "The security group ID for the load balancer"
                            },
                            "subnet_ids": {
                                "description": "The subnet IDs for the load balancer"
                            },
                            "vpc_id": {
                                "description": "The VPC ID"
                            }
                        }
                    }
                },
                "logs_bucket": {
                    "source": "./s3",
                    "expressions": {
                        "bucket_name": {
                            "references": [
                                "var.project_name",
                                "var.environment"
                            ]
                        },
                        "expiration_days": {
                            "constant_value": 365
                        },
                        "project_group": {
                            "references": [
                                "var.project_group"
                            ]
                        },
                        "transition_days": {
                            "constant_value": 3
                        }
                    },
                    "module": {
                        "outputs": {
                            "bucket_domain_name": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.bucket.bucket_domain_name",
                                        "aws_s3_bucket.bucket"
                                    ]
                                }
                            },
                            "bucket_id": {
                                "expression": {
                                    "references": [
                                        "aws_s3_bucket.bucket.id",
                                        "aws_s3_bucket.bucket"
                                    ]
                                }
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_s3_bucket.bucket",
                                "mode": "managed",
                                "type": "aws_s3_bucket",
                                "name": "bucket",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "var.bucket_name"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.bucket_name",
                                            "var.project_group"
                                        ]
                                    }
                                },
                                "schema_version": 0
                            },
                            {
                                "address": "aws_s3_bucket_lifecycle_configuration.bucket_lifecycle",
                                "mode": "managed",
                                "type": "aws_s3_bucket_lifecycle_configuration",
                                "name": "bucket_lifecycle",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.bucket.id",
                                            "aws_s3_bucket.bucket"
                                        ]
                                    },
                                    "rule": [
                                        {
                                            "expiration": [
                                                {
                                                    "days": {
                                                        "references": [
                                                            "var.expiration_days"
                                                        ]
                                                    }
                                                }
                                            ],
                                            "id": {
                                                "constant_value": "expire_old_objects"
                                            },
                                            "status": {
                                                "constant_value": "Enabled"
                                            },
                                            "transition": [
                                                {
                                                    "days": {
                                                        "references": [
                                                            "var.transition_days"
                                                        ]
                                                    },
                                                    "storage_class": {
                                                        "constant_value": "GLACIER"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "var.expiration_days"
                                    ]
                                }
                            },
                            {
                                "address": "aws_s3_bucket_policy.bucket_policy",
                                "mode": "managed",
                                "type": "aws_s3_bucket_policy",
                                "name": "bucket_policy",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.bucket.id",
                                            "aws_s3_bucket.bucket"
                                        ]
                                    },
                                    "policy": {
                                        "references": [
                                            "aws_s3_bucket.bucket.arn",
                                            "aws_s3_bucket.bucket",
                                            "aws_s3_bucket.bucket.arn",
                                            "aws_s3_bucket.bucket"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "depends_on": [
                                    "aws_s3_bucket_public_access_block.bucket_policy_settings"
                                ]
                            },
                            {
                                "address": "aws_s3_bucket_public_access_block.bucket_policy_settings",
                                "mode": "managed",
                                "type": "aws_s3_bucket_public_access_block",
                                "name": "bucket_policy_settings",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "block_public_acls": {
                                        "constant_value": false
                                    },
                                    "block_public_policy": {
                                        "constant_value": false
                                    },
                                    "bucket": {
                                        "references": [
                                            "aws_s3_bucket.bucket.id",
                                            "aws_s3_bucket.bucket"
                                        ]
                                    },
                                    "ignore_public_acls": {
                                        "constant_value": false
                                    },
                                    "restrict_public_buckets": {
                                        "constant_value": false
                                    }
                                },
                                "schema_version": 0
                            }
                        ],
                        "variables": {
                            "bucket_name": {
                                "description": "The name of the bucket"
                            },
                            "expiration_days": {
                                "default": 365,
                                "description": "Number of days for remove files (automatically)."
                            },
                            "project_group": {
                                "description": "The project group name."
                            },
                            "transition_days": {
                                "default": 30,
                                "description": "Number of days for send to low cost bucket (automatically)."
                            }
                        }
                    }
                },
                "network": {
                    "source": "./network",
                    "expressions": {
                        "project_group": {
                            "references": [
                                "var.project_group"
                            ]
                        },
                        "region": {
                            "references": [
                                "var.region"
                            ]
                        },
                        "vpc_name": {
                            "references": [
                                "var.project_name"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "database_subnet_group": {
                                "expression": {
                                    "references": [
                                        "module.vpc.database_subnet_group",
                                        "module.vpc"
                                    ]
                                },
                                "description": "The database subnet group"
                            },
                            "private_subnets": {
                                "expression": {
                                    "references": [
                                        "module.vpc.private_subnets",
                                        "module.vpc"
                                    ]
                                },
                                "description": "The private subnets"
                            },
                            "public_subnets": {
                                "expression": {
                                    "references": [
                                        "module.vpc.public_subnets",
                                        "module.vpc"
                                    ]
                                },
                                "description": "The public subnets"
                            },
                            "security_group_id": {
                                "expression": {
                                    "references": [
                                        "module.vpc.default_security_group_id",
                                        "module.vpc"
                                    ]
                                },
                                "description": "The default security group ID"
                            },
                            "subnet_ids": {
                                "expression": {
                                    "references": [
                                        "module.vpc.database_subnets",
                                        "module.vpc"
                                    ]
                                }
                            },
                            "vpc_id": {
                                "expression": {
                                    "references": [
                                        "module.vpc.vpc_id",
                                        "module.vpc"
                                    ]
                                },
                                "description": "The ID of the VPC"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_eip.nat",
                                "mode": "managed",
                                "type": "aws_eip",
                                "name": "nat",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "domain": {
                                        "constant_value": "vpc"
                                    },
                                    "tags": {
                                        "references": [
                                            "var.vpc_name",
                                            "var.project_group"
                                        ]
                                    }
                                },
                                "schema_version": 0,
                                "count_expression": {
                                    "references": [
                                        "module.vpc.azs",
                                        "module.vpc"
                                    ]
                                }
                            }
                        ],
                        "module_calls": {
                            "vpc": {
                                "source": "terraform-aws-modules/vpc/aws",
                                "expressions": {
                                    "azs": {
                                        "references": [
                                            "local.azs"
                                        ]
                                    },
                                    "cidr": {
                                        "references": [
                                            "var.vpc_cidr"
                                        ]
                                    },
                                    "enable_dns_hostnames": {
                                        "constant_value": true
                                    },
                                    "enable_dns_support": {
                                        "constant_value": true
                                    },
                                    "enable_nat_gateway": {
                                        "constant_value": true
                                    },
                                    "name": {
                                        "references": [
                                            "var.vpc_name"
                                        ]
                                    },
                                    "private_subnets": {
                                        "references": [
                                            "var.private_subnets"
                                        ]
                                    },
                                    "public_subnets": {
                                        "references": [
                                            "var.public_subnets"
                                        ]
                                    },
                                    "single_nat_gateway": {
                                        "constant_value": true
                                    },
                                    "tags": {
                                        "references": [
                                            "var.vpc_name",
                                            "var.project_group"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "azs": {
                                            "expression": {
                                                "references": [
                                                    "var.azs"
                                                ]
                                            },
                                            "description": "A list of availability zones specified as argument to this module"
                                        },
                                        "cgw_arns": {
                                            "expression": {
                                                "references": [
                                                    "aws_customer_gateway.this"
                                                ]
                                            },
                                            "description": "List of ARNs of Customer Gateway"
                                        },
                                        "cgw_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_customer_gateway.this"
                                                ]
                                            },
                                            "description": "List of IDs of Customer Gateway"
                                        },
                                        "database_internet_gateway_route_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_route.database_internet_gateway[0].id",
                                                    "aws_route.database_internet_gateway[0]",
                                                    "aws_route.database_internet_gateway"
                                                ]
                                            },
                                            "description": "ID of the database internet gateway route"
                                        },
                                        "database_ipv6_egress_route_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_route.database_ipv6_egress[0].id",
                                                    "aws_route.database_ipv6_egress[0]",
                                                    "aws_route.database_ipv6_egress"
                                                ]
                                            },
                                            "description": "ID of the database IPv6 egress route"
                                        },
                                        "database_nat_gateway_route_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_route.database_nat_gateway"
                                                ]
                                            },
                                            "description": "List of IDs of the database nat gateway route"
                                        },
                                        "database_network_acl_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.database[0].arn",
                                                    "aws_network_acl.database[0]",
                                                    "aws_network_acl.database"
                                                ]
                                            },
                                            "description": "ARN of the database network ACL"
                                        },
                                        "database_network_acl_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.database[0].id",
                                                    "aws_network_acl.database[0]",
                                                    "aws_network_acl.database"
                                                ]
                                            },
                                            "description": "ID of the database network ACL"
                                        },
                                        "database_route_table_association_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_route_table_association.database"
                                                ]
                                            },
                                            "description": "List of IDs of the database route table association"
                                        },
                                        "database_route_table_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_route_table.database",
                                                    "aws_route_table.database",
                                                    "aws_route_table.private"
                                                ]
                                            },
                                            "description": "List of IDs of database route tables"
                                        },
                                        "database_subnet_arns": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.database"
                                                ]
                                            },
                                            "description": "List of ARNs of database subnets"
                                        },
                                        "database_subnet_group": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_subnet_group.database[0].id",
                                                    "aws_db_subnet_group.database[0]",
                                                    "aws_db_subnet_group.database"
                                                ]
                                            },
                                            "description": "ID of database subnet group"
                                        },
                                        "database_subnet_group_name": {
                                            "expression": {
                                                "references": [
                                                    "aws_db_subnet_group.database[0].name",
                                                    "aws_db_subnet_group.database[0]",
                                                    "aws_db_subnet_group.database"
                                                ]
                                            },
                                            "description": "Name of database subnet group"
                                        },
                                        "database_subnets": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.database"
                                                ]
                                            },
                                            "description": "List of IDs of database subnets"
                                        },
                                        "database_subnets_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.database"
                                                ]
                                            },
                                            "description": "List of cidr_blocks of database subnets"
                                        },
                                        "database_subnets_ipv6_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.database"
                                                ]
                                            },
                                            "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC"
                                        },
                                        "default_network_acl_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc.this[0].default_network_acl_id",
                                                    "aws_vpc.this[0]",
                                                    "aws_vpc.this"
                                                ]
                                            },
                                            "description": "The ID of the default network ACL"
                                        },
                                        "default_route_table_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc.this[0].default_route_table_id",
                                                    "aws_vpc.this[0]",
                                                    "aws_vpc.this"
                                                ]
                                            },
                                            "description": "The ID of the default route table"
                                        },
                                        "default_security_group_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc.this[0].default_security_group_id",
                                                    "aws_vpc.this[0]",
                                                    "aws_vpc.this"
                                                ]
                                            },
                                            "description": "The ID of the security group created by default on VPC creation"
                                        },
                                        "default_vpc_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_default_vpc.this[0].arn",
                                                    "aws_default_vpc.this[0]",
                                                    "aws_default_vpc.this"
                                                ]
                                            },
                                            "description": "The ARN of the Default VPC"
                                        },
                                        "default_vpc_cidr_block": {
                                            "expression": {
                                                "references": [
                                                    "aws_default_vpc.this[0].cidr_block",
                                                    "aws_default_vpc.this[0]",
                                                    "aws_default_vpc.this"
                                                ]
                                            },
                                            "description": "The CIDR block of the Default VPC"
                                        },
                                        "default_vpc_default_network_acl_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_default_vpc.this[0].default_network_acl_id",
                                                    "aws_default_vpc.this[0]",
                                                    "aws_default_vpc.this"
                                                ]
                                            },
                                            "description": "The ID of the default network ACL of the Default VPC"
                                        },
                                        "default_vpc_default_route_table_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_default_vpc.this[0].default_route_table_id",
                                                    "aws_default_vpc.this[0]",
                                                    "aws_default_vpc.this"
                                                ]
                                            },
                                            "description": "The ID of the default route table of the Default VPC"
                                        },
                                        "default_vpc_default_security_group_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_default_vpc.this[0].default_security_group_id",
                                                    "aws_default_vpc.this[0]",
                                                    "aws_default_vpc.this"
                                                ]
                                            },
                                            "description": "The ID of the security group created by default on Default VPC creation"
                                        },
                                        "default_vpc_enable_dns_hostnames": {
                                            "expression": {
                                                "references": [
                                                    "aws_default_vpc.this[0].enable_dns_hostnames",
                                                    "aws_default_vpc.this[0]",
                                                    "aws_default_vpc.this"
                                                ]
                                            },
                                            "description": "Whether or not the Default VPC has DNS hostname support"
                                        },
                                        "default_vpc_enable_dns_support": {
                                            "expression": {
                                                "references": [
                                                    "aws_default_vpc.this[0].enable_dns_support",
                                                    "aws_default_vpc.this[0]",
                                                    "aws_default_vpc.this"
                                                ]
                                            },
                                            "description": "Whether or not the Default VPC has DNS support"
                                        },
                                        "default_vpc_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_default_vpc.this[0].id",
                                                    "aws_default_vpc.this[0]",
                                                    "aws_default_vpc.this"
                                                ]
                                            },
                                            "description": "The ID of the Default VPC"
                                        },
                                        "default_vpc_instance_tenancy": {
                                            "expression": {
                                                "references": [
                                                    "aws_default_vpc.this[0].instance_tenancy",
                                                    "aws_default_vpc.this[0]",
                                                    "aws_default_vpc.this"
                                                ]
                                            },
                                            "description": "Tenancy of instances spin up within Default VPC"
                                        },
                                        "default_vpc_main_route_table_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_default_vpc.this[0].main_route_table_id",
                                                    "aws_default_vpc.this[0]",
                                                    "aws_default_vpc.this"
                                                ]
                                            },
                                            "description": "The ID of the main route table associated with the Default VPC"
                                        },
                                        "dhcp_options_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc_dhcp_options.this[0].id",
                                                    "aws_vpc_dhcp_options.this[0]",
                                                    "aws_vpc_dhcp_options.this"
                                                ]
                                            },
                                            "description": "The ID of the DHCP options"
                                        },
                                        "egress_only_internet_gateway_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_egress_only_internet_gateway.this[0].id",
                                                    "aws_egress_only_internet_gateway.this[0]",
                                                    "aws_egress_only_internet_gateway.this"
                                                ]
                                            },
                                            "description": "The ID of the egress only Internet Gateway"
                                        },
                                        "elasticache_network_acl_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.elasticache[0].arn",
                                                    "aws_network_acl.elasticache[0]",
                                                    "aws_network_acl.elasticache"
                                                ]
                                            },
                                            "description": "ARN of the elasticache network ACL"
                                        },
                                        "elasticache_network_acl_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.elasticache[0].id",
                                                    "aws_network_acl.elasticache[0]",
                                                    "aws_network_acl.elasticache"
                                                ]
                                            },
                                            "description": "ID of the elasticache network ACL"
                                        },
                                        "elasticache_route_table_association_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_route_table_association.elasticache"
                                                ]
                                            },
                                            "description": "List of IDs of the elasticache route table association"
                                        },
                                        "elasticache_route_table_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_route_table.elasticache",
                                                    "local.private_route_table_ids"
                                                ]
                                            },
                                            "description": "List of IDs of elasticache route tables"
                                        },
                                        "elasticache_subnet_arns": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.elasticache"
                                                ]
                                            },
                                            "description": "List of ARNs of elasticache subnets"
                                        },
                                        "elasticache_subnet_group": {
                                            "expression": {
                                                "references": [
                                                    "aws_elasticache_subnet_group.elasticache[0].id",
                                                    "aws_elasticache_subnet_group.elasticache[0]",
                                                    "aws_elasticache_subnet_group.elasticache"
                                                ]
                                            },
                                            "description": "ID of elasticache subnet group"
                                        },
                                        "elasticache_subnet_group_name": {
                                            "expression": {
                                                "references": [
                                                    "aws_elasticache_subnet_group.elasticache[0].name",
                                                    "aws_elasticache_subnet_group.elasticache[0]",
                                                    "aws_elasticache_subnet_group.elasticache"
                                                ]
                                            },
                                            "description": "Name of elasticache subnet group"
                                        },
                                        "elasticache_subnets": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.elasticache"
                                                ]
                                            },
                                            "description": "List of IDs of elasticache subnets"
                                        },
                                        "elasticache_subnets_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.elasticache"
                                                ]
                                            },
                                            "description": "List of cidr_blocks of elasticache subnets"
                                        },
                                        "elasticache_subnets_ipv6_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.elasticache"
                                                ]
                                            },
                                            "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC"
                                        },
                                        "igw_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_internet_gateway.this[0].arn",
                                                    "aws_internet_gateway.this[0]",
                                                    "aws_internet_gateway.this"
                                                ]
                                            },
                                            "description": "The ARN of the Internet Gateway"
                                        },
                                        "igw_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_internet_gateway.this[0].id",
                                                    "aws_internet_gateway.this[0]",
                                                    "aws_internet_gateway.this"
                                                ]
                                            },
                                            "description": "The ID of the Internet Gateway"
                                        },
                                        "intra_network_acl_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.intra[0].arn",
                                                    "aws_network_acl.intra[0]",
                                                    "aws_network_acl.intra"
                                                ]
                                            },
                                            "description": "ARN of the intra network ACL"
                                        },
                                        "intra_network_acl_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.intra[0].id",
                                                    "aws_network_acl.intra[0]",
                                                    "aws_network_acl.intra"
                                                ]
                                            },
                                            "description": "ID of the intra network ACL"
                                        },
                                        "intra_route_table_association_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_route_table_association.intra"
                                                ]
                                            },
                                            "description": "List of IDs of the intra route table association"
                                        },
                                        "intra_route_table_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_route_table.intra"
                                                ]
                                            },
                                            "description": "List of IDs of intra route tables"
                                        },
                                        "intra_subnet_arns": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.intra"
                                                ]
                                            },
                                            "description": "List of ARNs of intra subnets"
                                        },
                                        "intra_subnets": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.intra"
                                                ]
                                            },
                                            "description": "List of IDs of intra subnets"
                                        },
                                        "intra_subnets_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.intra"
                                                ]
                                            },
                                            "description": "List of cidr_blocks of intra subnets"
                                        },
                                        "intra_subnets_ipv6_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.intra"
                                                ]
                                            },
                                            "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC"
                                        },
                                        "name": {
                                            "expression": {
                                                "references": [
                                                    "var.name"
                                                ]
                                            },
                                            "description": "The name of the VPC specified as argument to this module"
                                        },
                                        "nat_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_eip.nat"
                                                ]
                                            },
                                            "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway"
                                        },
                                        "nat_public_ips": {
                                            "expression": {
                                                "references": [
                                                    "var.reuse_nat_ips",
                                                    "var.external_nat_ips",
                                                    "aws_eip.nat"
                                                ]
                                            },
                                            "description": "List of public Elastic IPs created for AWS NAT Gateway"
                                        },
                                        "natgw_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_nat_gateway.this"
                                                ]
                                            },
                                            "description": "List of NAT Gateway IDs"
                                        },
                                        "natgw_interface_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_nat_gateway.this"
                                                ]
                                            },
                                            "description": "List of Network Interface IDs assigned to NAT Gateways"
                                        },
                                        "outpost_network_acl_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.outpost[0].arn",
                                                    "aws_network_acl.outpost[0]",
                                                    "aws_network_acl.outpost"
                                                ]
                                            },
                                            "description": "ARN of the outpost network ACL"
                                        },
                                        "outpost_network_acl_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.outpost[0].id",
                                                    "aws_network_acl.outpost[0]",
                                                    "aws_network_acl.outpost"
                                                ]
                                            },
                                            "description": "ID of the outpost network ACL"
                                        },
                                        "outpost_subnet_arns": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.outpost"
                                                ]
                                            },
                                            "description": "List of ARNs of outpost subnets"
                                        },
                                        "outpost_subnets": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.outpost"
                                                ]
                                            },
                                            "description": "List of IDs of outpost subnets"
                                        },
                                        "outpost_subnets_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.outpost"
                                                ]
                                            },
                                            "description": "List of cidr_blocks of outpost subnets"
                                        },
                                        "outpost_subnets_ipv6_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.outpost"
                                                ]
                                            },
                                            "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC"
                                        },
                                        "private_ipv6_egress_route_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_route.private_ipv6_egress"
                                                ]
                                            },
                                            "description": "List of IDs of the ipv6 egress route"
                                        },
                                        "private_nat_gateway_route_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_route.private_nat_gateway"
                                                ]
                                            },
                                            "description": "List of IDs of the private nat gateway route"
                                        },
                                        "private_network_acl_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.private[0].arn",
                                                    "aws_network_acl.private[0]",
                                                    "aws_network_acl.private"
                                                ]
                                            },
                                            "description": "ARN of the private network ACL"
                                        },
                                        "private_network_acl_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.private[0].id",
                                                    "aws_network_acl.private[0]",
                                                    "aws_network_acl.private"
                                                ]
                                            },
                                            "description": "ID of the private network ACL"
                                        },
                                        "private_route_table_association_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_route_table_association.private"
                                                ]
                                            },
                                            "description": "List of IDs of the private route table association"
                                        },
                                        "private_route_table_ids": {
                                            "expression": {
                                                "references": [
                                                    "local.private_route_table_ids"
                                                ]
                                            },
                                            "description": "List of IDs of private route tables"
                                        },
                                        "private_subnet_arns": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.private"
                                                ]
                                            },
                                            "description": "List of ARNs of private subnets"
                                        },
                                        "private_subnets": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.private"
                                                ]
                                            },
                                            "description": "List of IDs of private subnets"
                                        },
                                        "private_subnets_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.private"
                                                ]
                                            },
                                            "description": "List of cidr_blocks of private subnets"
                                        },
                                        "private_subnets_ipv6_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.private"
                                                ]
                                            },
                                            "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC"
                                        },
                                        "public_internet_gateway_ipv6_route_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_route.public_internet_gateway_ipv6[0].id",
                                                    "aws_route.public_internet_gateway_ipv6[0]",
                                                    "aws_route.public_internet_gateway_ipv6"
                                                ]
                                            },
                                            "description": "ID of the IPv6 internet gateway route"
                                        },
                                        "public_internet_gateway_route_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_route.public_internet_gateway[0].id",
                                                    "aws_route.public_internet_gateway[0]",
                                                    "aws_route.public_internet_gateway"
                                                ]
                                            },
                                            "description": "ID of the internet gateway route"
                                        },
                                        "public_network_acl_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.public[0].arn",
                                                    "aws_network_acl.public[0]",
                                                    "aws_network_acl.public"
                                                ]
                                            },
                                            "description": "ARN of the public network ACL"
                                        },
                                        "public_network_acl_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.public[0].id",
                                                    "aws_network_acl.public[0]",
                                                    "aws_network_acl.public"
                                                ]
                                            },
                                            "description": "ID of the public network ACL"
                                        },
                                        "public_route_table_association_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_route_table_association.public"
                                                ]
                                            },
                                            "description": "List of IDs of the public route table association"
                                        },
                                        "public_route_table_ids": {
                                            "expression": {
                                                "references": [
                                                    "local.public_route_table_ids"
                                                ]
                                            },
                                            "description": "List of IDs of public route tables"
                                        },
                                        "public_subnet_arns": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.public"
                                                ]
                                            },
                                            "description": "List of ARNs of public subnets"
                                        },
                                        "public_subnets": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.public"
                                                ]
                                            },
                                            "description": "List of IDs of public subnets"
                                        },
                                        "public_subnets_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.public"
                                                ]
                                            },
                                            "description": "List of cidr_blocks of public subnets"
                                        },
                                        "public_subnets_ipv6_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.public"
                                                ]
                                            },
                                            "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC"
                                        },
                                        "redshift_network_acl_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.redshift[0].arn",
                                                    "aws_network_acl.redshift[0]",
                                                    "aws_network_acl.redshift"
                                                ]
                                            },
                                            "description": "ARN of the redshift network ACL"
                                        },
                                        "redshift_network_acl_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_network_acl.redshift[0].id",
                                                    "aws_network_acl.redshift[0]",
                                                    "aws_network_acl.redshift"
                                                ]
                                            },
                                            "description": "ID of the redshift network ACL"
                                        },
                                        "redshift_public_route_table_association_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_route_table_association.redshift_public"
                                                ]
                                            },
                                            "description": "List of IDs of the public redshift route table association"
                                        },
                                        "redshift_route_table_association_ids": {
                                            "expression": {
                                                "references": [
                                                    "aws_route_table_association.redshift"
                                                ]
                                            },
                                            "description": "List of IDs of the redshift route table association"
                                        },
                                        "redshift_route_table_ids": {
                                            "expression": {
                                                "references": [
                                                    "local.redshift_route_table_ids",
                                                    "local.redshift_route_table_ids",
                                                    "var.enable_public_redshift",
                                                    "local.public_route_table_ids",
                                                    "local.private_route_table_ids"
                                                ]
                                            },
                                            "description": "List of IDs of redshift route tables"
                                        },
                                        "redshift_subnet_arns": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.redshift"
                                                ]
                                            },
                                            "description": "List of ARNs of redshift subnets"
                                        },
                                        "redshift_subnet_group": {
                                            "expression": {
                                                "references": [
                                                    "aws_redshift_subnet_group.redshift[0].id",
                                                    "aws_redshift_subnet_group.redshift[0]",
                                                    "aws_redshift_subnet_group.redshift"
                                                ]
                                            },
                                            "description": "ID of redshift subnet group"
                                        },
                                        "redshift_subnets": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.redshift"
                                                ]
                                            },
                                            "description": "List of IDs of redshift subnets"
                                        },
                                        "redshift_subnets_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.redshift"
                                                ]
                                            },
                                            "description": "List of cidr_blocks of redshift subnets"
                                        },
                                        "redshift_subnets_ipv6_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_subnet.redshift"
                                                ]
                                            },
                                            "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC"
                                        },
                                        "this_customer_gateway": {
                                            "expression": {
                                                "references": [
                                                    "aws_customer_gateway.this"
                                                ]
                                            },
                                            "description": "Map of Customer Gateway attributes"
                                        },
                                        "vgw_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpn_gateway.this[0].arn",
                                                    "aws_vpn_gateway.this[0]",
                                                    "aws_vpn_gateway.this"
                                                ]
                                            },
                                            "description": "The ARN of the VPN Gateway"
                                        },
                                        "vgw_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpn_gateway.this[0].id",
                                                    "aws_vpn_gateway.this[0]",
                                                    "aws_vpn_gateway.this",
                                                    "aws_vpn_gateway_attachment.this[0].vpn_gateway_id",
                                                    "aws_vpn_gateway_attachment.this[0]",
                                                    "aws_vpn_gateway_attachment.this"
                                                ]
                                            },
                                            "description": "The ID of the VPN Gateway"
                                        },
                                        "vpc_arn": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc.this[0].arn",
                                                    "aws_vpc.this[0]",
                                                    "aws_vpc.this"
                                                ]
                                            },
                                            "description": "The ARN of the VPC"
                                        },
                                        "vpc_cidr_block": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc.this[0].cidr_block",
                                                    "aws_vpc.this[0]",
                                                    "aws_vpc.this"
                                                ]
                                            },
                                            "description": "The CIDR block of the VPC"
                                        },
                                        "vpc_enable_dns_hostnames": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc.this[0].enable_dns_hostnames",
                                                    "aws_vpc.this[0]",
                                                    "aws_vpc.this"
                                                ]
                                            },
                                            "description": "Whether or not the VPC has DNS hostname support"
                                        },
                                        "vpc_enable_dns_support": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc.this[0].enable_dns_support",
                                                    "aws_vpc.this[0]",
                                                    "aws_vpc.this"
                                                ]
                                            },
                                            "description": "Whether or not the VPC has DNS support"
                                        },
                                        "vpc_flow_log_cloudwatch_iam_role_arn": {
                                            "expression": {
                                                "references": [
                                                    "local.flow_log_iam_role_arn"
                                                ]
                                            },
                                            "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group"
                                        },
                                        "vpc_flow_log_deliver_cross_account_role": {
                                            "expression": {
                                                "references": [
                                                    "aws_flow_log.this[0].deliver_cross_account_role",
                                                    "aws_flow_log.this[0]",
                                                    "aws_flow_log.this"
                                                ]
                                            },
                                            "description": "The ARN of the IAM role used when pushing logs cross account"
                                        },
                                        "vpc_flow_log_destination_arn": {
                                            "expression": {
                                                "references": [
                                                    "local.flow_log_destination_arn"
                                                ]
                                            },
                                            "description": "The ARN of the destination for VPC Flow Logs"
                                        },
                                        "vpc_flow_log_destination_type": {
                                            "expression": {
                                                "references": [
                                                    "var.flow_log_destination_type"
                                                ]
                                            },
                                            "description": "The type of the destination for VPC Flow Logs"
                                        },
                                        "vpc_flow_log_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_flow_log.this[0].id",
                                                    "aws_flow_log.this[0]",
                                                    "aws_flow_log.this"
                                                ]
                                            },
                                            "description": "The ID of the Flow Log resource"
                                        },
                                        "vpc_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc.this[0].id",
                                                    "aws_vpc.this[0]",
                                                    "aws_vpc.this"
                                                ]
                                            },
                                            "description": "The ID of the VPC"
                                        },
                                        "vpc_instance_tenancy": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc.this[0].instance_tenancy",
                                                    "aws_vpc.this[0]",
                                                    "aws_vpc.this"
                                                ]
                                            },
                                            "description": "Tenancy of instances spin up within VPC"
                                        },
                                        "vpc_ipv6_association_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc.this[0].ipv6_association_id",
                                                    "aws_vpc.this[0]",
                                                    "aws_vpc.this"
                                                ]
                                            },
                                            "description": "The association ID for the IPv6 CIDR block"
                                        },
                                        "vpc_ipv6_cidr_block": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc.this[0].ipv6_cidr_block",
                                                    "aws_vpc.this[0]",
                                                    "aws_vpc.this"
                                                ]
                                            },
                                            "description": "The IPv6 CIDR block"
                                        },
                                        "vpc_main_route_table_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc.this[0].main_route_table_id",
                                                    "aws_vpc.this[0]",
                                                    "aws_vpc.this"
                                                ]
                                            },
                                            "description": "The ID of the main route table associated with this VPC"
                                        },
                                        "vpc_owner_id": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc.this[0].owner_id",
                                                    "aws_vpc.this[0]",
                                                    "aws_vpc.this"
                                                ]
                                            },
                                            "description": "The ID of the AWS account that owns the VPC"
                                        },
                                        "vpc_secondary_cidr_blocks": {
                                            "expression": {
                                                "references": [
                                                    "aws_vpc_ipv4_cidr_block_association.this"
                                                ]
                                            },
                                            "description": "List of secondary CIDR blocks of the VPC"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "aws_cloudwatch_log_group.flow_log",
                                            "mode": "managed",
                                            "type": "aws_cloudwatch_log_group",
                                            "name": "flow_log",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "kms_key_id": {
                                                    "references": [
                                                        "var.flow_log_cloudwatch_log_group_kms_key_id"
                                                    ]
                                                },
                                                "log_group_class": {
                                                    "references": [
                                                        "var.flow_log_cloudwatch_log_group_class"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.flow_log_cloudwatch_log_group_name_prefix",
                                                        "local.flow_log_cloudwatch_log_group_name_suffix"
                                                    ]
                                                },
                                                "retention_in_days": {
                                                    "references": [
                                                        "var.flow_log_cloudwatch_log_group_retention_in_days"
                                                    ]
                                                },
                                                "skip_destroy": {
                                                    "references": [
                                                        "var.flow_log_cloudwatch_log_group_skip_destroy"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.vpc_flow_log_tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_flow_log_cloudwatch_log_group"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_customer_gateway.this",
                                            "mode": "managed",
                                            "type": "aws_customer_gateway",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "bgp_asn": {
                                                    "references": [
                                                        "each.value[\"bgp_asn\"]",
                                                        "each.value"
                                                    ]
                                                },
                                                "device_name": {
                                                    "references": [
                                                        "each.value"
                                                    ]
                                                },
                                                "ip_address": {
                                                    "references": [
                                                        "each.value[\"ip_address\"]",
                                                        "each.value"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "each.key",
                                                        "var.tags",
                                                        "var.customer_gateway_tags"
                                                    ]
                                                },
                                                "type": {
                                                    "constant_value": "ipsec.1"
                                                }
                                            },
                                            "schema_version": 0,
                                            "for_each_expression": {
                                                "references": [
                                                    "var.customer_gateways"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_db_subnet_group.database",
                                            "mode": "managed",
                                            "type": "aws_db_subnet_group",
                                            "name": "database",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "description": {
                                                    "references": [
                                                        "var.name"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.database_subnet_group_name",
                                                        "var.name"
                                                    ]
                                                },
                                                "subnet_ids": {
                                                    "references": [
                                                        "aws_subnet.database"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.database_subnet_group_name",
                                                        "var.name",
                                                        "var.tags",
                                                        "var.database_subnet_group_tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_database_subnets",
                                                    "var.create_database_subnet_group"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_default_network_acl.this",
                                            "mode": "managed",
                                            "type": "aws_default_network_acl",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "default_network_acl_id": {
                                                    "references": [
                                                        "aws_vpc.this[0].default_network_acl_id",
                                                        "aws_vpc.this[0]",
                                                        "aws_vpc.this"
                                                    ]
                                                },
                                                "subnet_ids": {
                                                    "constant_value": null
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.default_network_acl_name",
                                                        "var.name",
                                                        "var.tags",
                                                        "var.default_network_acl_tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.manage_default_network_acl"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_default_route_table.default",
                                            "mode": "managed",
                                            "type": "aws_default_route_table",
                                            "name": "default",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "default_route_table_id": {
                                                    "references": [
                                                        "aws_vpc.this[0].default_route_table_id",
                                                        "aws_vpc.this[0]",
                                                        "aws_vpc.this"
                                                    ]
                                                },
                                                "propagating_vgws": {
                                                    "references": [
                                                        "var.default_route_table_propagating_vgws"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.default_route_table_name",
                                                        "var.name",
                                                        "var.tags",
                                                        "var.default_route_table_tags"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "create": {
                                                        "constant_value": "5m"
                                                    },
                                                    "update": {
                                                        "constant_value": "5m"
                                                    }
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.manage_default_route_table"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_default_security_group.this",
                                            "mode": "managed",
                                            "type": "aws_default_security_group",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "tags": {
                                                    "references": [
                                                        "var.default_security_group_name",
                                                        "var.name",
                                                        "var.tags",
                                                        "var.default_security_group_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "aws_vpc.this[0].id",
                                                        "aws_vpc.this[0]",
                                                        "aws_vpc.this"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.manage_default_security_group"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_default_vpc.this",
                                            "mode": "managed",
                                            "type": "aws_default_vpc",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "enable_dns_hostnames": {
                                                    "references": [
                                                        "var.default_vpc_enable_dns_hostnames"
                                                    ]
                                                },
                                                "enable_dns_support": {
                                                    "references": [
                                                        "var.default_vpc_enable_dns_support"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.default_vpc_name",
                                                        "var.tags",
                                                        "var.default_vpc_tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "count_expression": {
                                                "references": [
                                                    "var.manage_default_vpc"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_egress_only_internet_gateway.this",
                                            "mode": "managed",
                                            "type": "aws_egress_only_internet_gateway",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.tags",
                                                        "var.igw_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.create_egress_only_igw",
                                                    "var.enable_ipv6",
                                                    "local.max_subnet_length"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_eip.nat",
                                            "mode": "managed",
                                            "type": "aws_eip",
                                            "name": "nat",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "domain": {
                                                    "constant_value": "vpc"
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.azs",
                                                        "var.single_nat_gateway",
                                                        "count.index",
                                                        "var.tags",
                                                        "var.nat_eip_tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.enable_nat_gateway",
                                                    "var.reuse_nat_ips",
                                                    "local.nat_gateway_count"
                                                ]
                                            },
                                            "depends_on": [
                                                "aws_internet_gateway.this"
                                            ]
                                        },
                                        {
                                            "address": "aws_elasticache_subnet_group.elasticache",
                                            "mode": "managed",
                                            "type": "aws_elasticache_subnet_group",
                                            "name": "elasticache",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "description": {
                                                    "references": [
                                                        "var.name"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.elasticache_subnet_group_name",
                                                        "var.name"
                                                    ]
                                                },
                                                "subnet_ids": {
                                                    "references": [
                                                        "aws_subnet.elasticache"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.elasticache_subnet_group_name",
                                                        "var.name",
                                                        "var.tags",
                                                        "var.elasticache_subnet_group_tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_elasticache_subnets",
                                                    "var.create_elasticache_subnet_group"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_flow_log.this",
                                            "mode": "managed",
                                            "type": "aws_flow_log",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "deliver_cross_account_role": {
                                                    "references": [
                                                        "var.flow_log_deliver_cross_account_role"
                                                    ]
                                                },
                                                "iam_role_arn": {
                                                    "references": [
                                                        "local.flow_log_iam_role_arn"
                                                    ]
                                                },
                                                "log_destination": {
                                                    "references": [
                                                        "local.flow_log_destination_arn"
                                                    ]
                                                },
                                                "log_destination_type": {
                                                    "references": [
                                                        "var.flow_log_destination_type"
                                                    ]
                                                },
                                                "log_format": {
                                                    "references": [
                                                        "var.flow_log_log_format"
                                                    ]
                                                },
                                                "max_aggregation_interval": {
                                                    "references": [
                                                        "var.flow_log_max_aggregation_interval"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.vpc_flow_log_tags"
                                                    ]
                                                },
                                                "traffic_type": {
                                                    "references": [
                                                        "var.flow_log_traffic_type"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.enable_flow_log"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
                                            "mode": "managed",
                                            "type": "aws_iam_policy",
                                            "name": "vpc_flow_log_cloudwatch",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "name": {
                                                    "references": [
                                                        "var.vpc_flow_log_iam_policy_use_name_prefix",
                                                        "var.vpc_flow_log_iam_policy_name"
                                                    ]
                                                },
                                                "name_prefix": {
                                                    "references": [
                                                        "var.vpc_flow_log_iam_policy_use_name_prefix",
                                                        "var.vpc_flow_log_iam_policy_name"
                                                    ]
                                                },
                                                "policy": {
                                                    "references": [
                                                        "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
                                                        "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
                                                        "data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.vpc_flow_log_tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_flow_log_cloudwatch_iam_role"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_iam_role.vpc_flow_log_cloudwatch",
                                            "mode": "managed",
                                            "type": "aws_iam_role",
                                            "name": "vpc_flow_log_cloudwatch",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "assume_role_policy": {
                                                    "references": [
                                                        "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
                                                        "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
                                                        "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.vpc_flow_log_iam_role_use_name_prefix",
                                                        "var.vpc_flow_log_iam_role_name"
                                                    ]
                                                },
                                                "name_prefix": {
                                                    "references": [
                                                        "var.vpc_flow_log_iam_role_use_name_prefix",
                                                        "var.vpc_flow_log_iam_role_name"
                                                    ]
                                                },
                                                "permissions_boundary": {
                                                    "references": [
                                                        "var.vpc_flow_log_permissions_boundary"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.vpc_flow_log_tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_flow_log_cloudwatch_iam_role"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
                                            "mode": "managed",
                                            "type": "aws_iam_role_policy_attachment",
                                            "name": "vpc_flow_log_cloudwatch",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "policy_arn": {
                                                    "references": [
                                                        "aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
                                                        "aws_iam_policy.vpc_flow_log_cloudwatch[0]",
                                                        "aws_iam_policy.vpc_flow_log_cloudwatch"
                                                    ]
                                                },
                                                "role": {
                                                    "references": [
                                                        "aws_iam_role.vpc_flow_log_cloudwatch[0].name",
                                                        "aws_iam_role.vpc_flow_log_cloudwatch[0]",
                                                        "aws_iam_role.vpc_flow_log_cloudwatch"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_flow_log_cloudwatch_iam_role"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_internet_gateway.this",
                                            "mode": "managed",
                                            "type": "aws_internet_gateway",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.tags",
                                                        "var.igw_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_public_subnets",
                                                    "var.create_igw"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_nat_gateway.this",
                                            "mode": "managed",
                                            "type": "aws_nat_gateway",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "allocation_id": {
                                                    "references": [
                                                        "local.nat_gateway_ips",
                                                        "var.single_nat_gateway",
                                                        "count.index"
                                                    ]
                                                },
                                                "subnet_id": {
                                                    "references": [
                                                        "aws_subnet.public",
                                                        "var.single_nat_gateway",
                                                        "count.index"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.azs",
                                                        "var.single_nat_gateway",
                                                        "count.index",
                                                        "var.tags",
                                                        "var.nat_gateway_tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.enable_nat_gateway",
                                                    "local.nat_gateway_count"
                                                ]
                                            },
                                            "depends_on": [
                                                "aws_internet_gateway.this"
                                            ]
                                        },
                                        {
                                            "address": "aws_network_acl.database",
                                            "mode": "managed",
                                            "type": "aws_network_acl",
                                            "name": "database",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "subnet_ids": {
                                                    "references": [
                                                        "aws_subnet.database"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.database_subnet_suffix",
                                                        "var.tags",
                                                        "var.database_acl_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_database_network_acl"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl.elasticache",
                                            "mode": "managed",
                                            "type": "aws_network_acl",
                                            "name": "elasticache",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "subnet_ids": {
                                                    "references": [
                                                        "aws_subnet.elasticache"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.elasticache_subnet_suffix",
                                                        "var.tags",
                                                        "var.elasticache_acl_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_elasticache_network_acl"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl.intra",
                                            "mode": "managed",
                                            "type": "aws_network_acl",
                                            "name": "intra",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "subnet_ids": {
                                                    "references": [
                                                        "aws_subnet.intra"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.intra_subnet_suffix",
                                                        "var.tags",
                                                        "var.intra_acl_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_intra_network_acl"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl.outpost",
                                            "mode": "managed",
                                            "type": "aws_network_acl",
                                            "name": "outpost",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "subnet_ids": {
                                                    "references": [
                                                        "aws_subnet.outpost"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.outpost_subnet_suffix",
                                                        "var.tags",
                                                        "var.outpost_acl_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_outpost_network_acl"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl.private",
                                            "mode": "managed",
                                            "type": "aws_network_acl",
                                            "name": "private",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "subnet_ids": {
                                                    "references": [
                                                        "aws_subnet.private"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.private_subnet_suffix",
                                                        "var.tags",
                                                        "var.private_acl_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_private_network_acl"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl.public",
                                            "mode": "managed",
                                            "type": "aws_network_acl",
                                            "name": "public",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "subnet_ids": {
                                                    "references": [
                                                        "aws_subnet.public"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.public_subnet_suffix",
                                                        "var.tags",
                                                        "var.public_acl_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_public_subnets",
                                                    "var.public_dedicated_network_acl"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl.redshift",
                                            "mode": "managed",
                                            "type": "aws_network_acl",
                                            "name": "redshift",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "subnet_ids": {
                                                    "references": [
                                                        "aws_subnet.redshift"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.redshift_subnet_suffix",
                                                        "var.tags",
                                                        "var.redshift_acl_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_redshift_network_acl"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.database_inbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "database_inbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.database_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": false
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.database_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.database_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.database_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.database_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.database[0].id",
                                                        "aws_network_acl.database[0]",
                                                        "aws_network_acl.database"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.database_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.database_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.database_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.database_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_database_network_acl",
                                                    "var.database_inbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.database_outbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "database_outbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.database_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": true
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.database_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.database_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.database_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.database_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.database[0].id",
                                                        "aws_network_acl.database[0]",
                                                        "aws_network_acl.database"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.database_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.database_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.database_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.database_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_database_network_acl",
                                                    "var.database_outbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.elasticache_inbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "elasticache_inbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.elasticache_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": false
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.elasticache_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.elasticache_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.elasticache_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.elasticache_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.elasticache[0].id",
                                                        "aws_network_acl.elasticache[0]",
                                                        "aws_network_acl.elasticache"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.elasticache_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.elasticache_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.elasticache_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.elasticache_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_elasticache_network_acl",
                                                    "var.elasticache_inbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.elasticache_outbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "elasticache_outbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.elasticache_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": true
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.elasticache_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.elasticache_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.elasticache_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.elasticache_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.elasticache[0].id",
                                                        "aws_network_acl.elasticache[0]",
                                                        "aws_network_acl.elasticache"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.elasticache_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.elasticache_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.elasticache_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.elasticache_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_elasticache_network_acl",
                                                    "var.elasticache_outbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.intra_inbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "intra_inbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.intra_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": false
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.intra_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.intra_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.intra_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.intra_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.intra[0].id",
                                                        "aws_network_acl.intra[0]",
                                                        "aws_network_acl.intra"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.intra_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.intra_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.intra_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.intra_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_intra_network_acl",
                                                    "var.intra_inbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.intra_outbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "intra_outbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.intra_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": true
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.intra_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.intra_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.intra_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.intra_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.intra[0].id",
                                                        "aws_network_acl.intra[0]",
                                                        "aws_network_acl.intra"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.intra_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.intra_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.intra_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.intra_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_intra_network_acl",
                                                    "var.intra_outbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.outpost_inbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "outpost_inbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.outpost_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": false
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.outpost_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.outpost_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.outpost_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.outpost_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.outpost[0].id",
                                                        "aws_network_acl.outpost[0]",
                                                        "aws_network_acl.outpost"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.outpost_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.outpost_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.outpost_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.outpost_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_outpost_network_acl",
                                                    "var.outpost_inbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.outpost_outbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "outpost_outbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.outpost_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": true
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.outpost_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.outpost_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.outpost_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.outpost_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.outpost[0].id",
                                                        "aws_network_acl.outpost[0]",
                                                        "aws_network_acl.outpost"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.outpost_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.outpost_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.outpost_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.outpost_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_outpost_network_acl",
                                                    "var.outpost_outbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.private_inbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "private_inbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.private_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": false
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.private_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.private_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.private_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.private_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.private[0].id",
                                                        "aws_network_acl.private[0]",
                                                        "aws_network_acl.private"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.private_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.private_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.private_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.private_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_private_network_acl",
                                                    "var.private_inbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.private_outbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "private_outbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.private_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": true
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.private_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.private_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.private_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.private_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.private[0].id",
                                                        "aws_network_acl.private[0]",
                                                        "aws_network_acl.private"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.private_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.private_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.private_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.private_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_private_network_acl",
                                                    "var.private_outbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.public_inbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "public_inbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.public_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": false
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.public_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.public_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.public_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.public_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.public[0].id",
                                                        "aws_network_acl.public[0]",
                                                        "aws_network_acl.public"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.public_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.public_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.public_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.public_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_public_subnets",
                                                    "var.public_dedicated_network_acl",
                                                    "var.public_inbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.public_outbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "public_outbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.public_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": true
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.public_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.public_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.public_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.public_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.public[0].id",
                                                        "aws_network_acl.public[0]",
                                                        "aws_network_acl.public"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.public_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.public_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.public_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.public_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_public_subnets",
                                                    "var.public_dedicated_network_acl",
                                                    "var.public_outbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.redshift_inbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "redshift_inbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.redshift_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": false
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.redshift_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.redshift_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.redshift_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.redshift_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.redshift[0].id",
                                                        "aws_network_acl.redshift[0]",
                                                        "aws_network_acl.redshift"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.redshift_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.redshift_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.redshift_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.redshift_inbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_redshift_network_acl",
                                                    "var.redshift_inbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_network_acl_rule.redshift_outbound",
                                            "mode": "managed",
                                            "type": "aws_network_acl_rule",
                                            "name": "redshift_outbound",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.redshift_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "egress": {
                                                    "constant_value": true
                                                },
                                                "from_port": {
                                                    "references": [
                                                        "var.redshift_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_code": {
                                                    "references": [
                                                        "var.redshift_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "icmp_type": {
                                                    "references": [
                                                        "var.redshift_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.redshift_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "network_acl_id": {
                                                    "references": [
                                                        "aws_network_acl.redshift[0].id",
                                                        "aws_network_acl.redshift[0]",
                                                        "aws_network_acl.redshift"
                                                    ]
                                                },
                                                "protocol": {
                                                    "references": [
                                                        "var.redshift_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_action": {
                                                    "references": [
                                                        "var.redshift_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "rule_number": {
                                                    "references": [
                                                        "var.redshift_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                },
                                                "to_port": {
                                                    "references": [
                                                        "var.redshift_outbound_acl_rules",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_redshift_network_acl",
                                                    "var.redshift_outbound_acl_rules"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_redshift_subnet_group.redshift",
                                            "mode": "managed",
                                            "type": "aws_redshift_subnet_group",
                                            "name": "redshift",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "description": {
                                                    "references": [
                                                        "var.name"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.redshift_subnet_group_name",
                                                        "var.name"
                                                    ]
                                                },
                                                "subnet_ids": {
                                                    "references": [
                                                        "aws_subnet.redshift"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.redshift_subnet_group_name",
                                                        "var.name",
                                                        "var.tags",
                                                        "var.redshift_subnet_group_tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_redshift_subnets",
                                                    "var.create_redshift_subnet_group"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route.database_dns64_nat_gateway",
                                            "mode": "managed",
                                            "type": "aws_route",
                                            "name": "database_dns64_nat_gateway",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "destination_ipv6_cidr_block": {
                                                    "constant_value": "64:ff9b::/96"
                                                },
                                                "nat_gateway_id": {
                                                    "references": [
                                                        "aws_nat_gateway.this",
                                                        "count.index"
                                                    ]
                                                },
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.database",
                                                        "count.index"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "create": {
                                                        "constant_value": "5m"
                                                    }
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_database_route_table",
                                                    "var.create_database_internet_gateway_route",
                                                    "var.create_database_nat_gateway_route",
                                                    "var.enable_nat_gateway",
                                                    "var.enable_ipv6",
                                                    "var.private_subnet_enable_dns64",
                                                    "var.single_nat_gateway",
                                                    "local.len_database_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route.database_internet_gateway",
                                            "mode": "managed",
                                            "type": "aws_route",
                                            "name": "database_internet_gateway",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "destination_cidr_block": {
                                                    "constant_value": "0.0.0.0/0"
                                                },
                                                "gateway_id": {
                                                    "references": [
                                                        "aws_internet_gateway.this[0].id",
                                                        "aws_internet_gateway.this[0]",
                                                        "aws_internet_gateway.this"
                                                    ]
                                                },
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.database[0].id",
                                                        "aws_route_table.database[0]",
                                                        "aws_route_table.database"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "create": {
                                                        "constant_value": "5m"
                                                    }
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_database_route_table",
                                                    "var.create_igw",
                                                    "var.create_database_internet_gateway_route",
                                                    "var.create_database_nat_gateway_route"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route.database_ipv6_egress",
                                            "mode": "managed",
                                            "type": "aws_route",
                                            "name": "database_ipv6_egress",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "destination_ipv6_cidr_block": {
                                                    "constant_value": "::/0"
                                                },
                                                "egress_only_gateway_id": {
                                                    "references": [
                                                        "aws_egress_only_internet_gateway.this[0].id",
                                                        "aws_egress_only_internet_gateway.this[0]",
                                                        "aws_egress_only_internet_gateway.this"
                                                    ]
                                                },
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.database[0].id",
                                                        "aws_route_table.database[0]",
                                                        "aws_route_table.database"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "create": {
                                                        "constant_value": "5m"
                                                    }
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_database_route_table",
                                                    "var.create_egress_only_igw",
                                                    "var.enable_ipv6",
                                                    "var.create_database_internet_gateway_route"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route.database_nat_gateway",
                                            "mode": "managed",
                                            "type": "aws_route",
                                            "name": "database_nat_gateway",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "destination_cidr_block": {
                                                    "constant_value": "0.0.0.0/0"
                                                },
                                                "nat_gateway_id": {
                                                    "references": [
                                                        "aws_nat_gateway.this",
                                                        "count.index"
                                                    ]
                                                },
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.database",
                                                        "count.index"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "create": {
                                                        "constant_value": "5m"
                                                    }
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_database_route_table",
                                                    "var.create_database_internet_gateway_route",
                                                    "var.create_database_nat_gateway_route",
                                                    "var.enable_nat_gateway",
                                                    "var.single_nat_gateway",
                                                    "local.len_database_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route.private_dns64_nat_gateway",
                                            "mode": "managed",
                                            "type": "aws_route",
                                            "name": "private_dns64_nat_gateway",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "destination_ipv6_cidr_block": {
                                                    "constant_value": "64:ff9b::/96"
                                                },
                                                "nat_gateway_id": {
                                                    "references": [
                                                        "aws_nat_gateway.this",
                                                        "count.index"
                                                    ]
                                                },
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.private",
                                                        "count.index"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "create": {
                                                        "constant_value": "5m"
                                                    }
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.enable_nat_gateway",
                                                    "var.enable_ipv6",
                                                    "var.private_subnet_enable_dns64",
                                                    "local.nat_gateway_count"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route.private_ipv6_egress",
                                            "mode": "managed",
                                            "type": "aws_route",
                                            "name": "private_ipv6_egress",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "destination_ipv6_cidr_block": {
                                                    "constant_value": "::/0"
                                                },
                                                "egress_only_gateway_id": {
                                                    "references": [
                                                        "aws_egress_only_internet_gateway.this"
                                                    ]
                                                },
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.private",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.create_egress_only_igw",
                                                    "var.enable_ipv6",
                                                    "local.len_private_subnets",
                                                    "local.nat_gateway_count"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route.private_nat_gateway",
                                            "mode": "managed",
                                            "type": "aws_route",
                                            "name": "private_nat_gateway",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "destination_cidr_block": {
                                                    "references": [
                                                        "var.nat_gateway_destination_cidr_block"
                                                    ]
                                                },
                                                "nat_gateway_id": {
                                                    "references": [
                                                        "aws_nat_gateway.this",
                                                        "count.index"
                                                    ]
                                                },
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.private",
                                                        "count.index"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "create": {
                                                        "constant_value": "5m"
                                                    }
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.enable_nat_gateway",
                                                    "local.nat_gateway_count"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route.public_internet_gateway",
                                            "mode": "managed",
                                            "type": "aws_route",
                                            "name": "public_internet_gateway",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "destination_cidr_block": {
                                                    "constant_value": "0.0.0.0/0"
                                                },
                                                "gateway_id": {
                                                    "references": [
                                                        "aws_internet_gateway.this[0].id",
                                                        "aws_internet_gateway.this[0]",
                                                        "aws_internet_gateway.this"
                                                    ]
                                                },
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.public[0].id",
                                                        "aws_route_table.public[0]",
                                                        "aws_route_table.public"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "create": {
                                                        "constant_value": "5m"
                                                    }
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_public_subnets",
                                                    "var.create_igw"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route.public_internet_gateway_ipv6",
                                            "mode": "managed",
                                            "type": "aws_route",
                                            "name": "public_internet_gateway_ipv6",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "destination_ipv6_cidr_block": {
                                                    "constant_value": "::/0"
                                                },
                                                "gateway_id": {
                                                    "references": [
                                                        "aws_internet_gateway.this[0].id",
                                                        "aws_internet_gateway.this[0]",
                                                        "aws_internet_gateway.this"
                                                    ]
                                                },
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.public[0].id",
                                                        "aws_route_table.public[0]",
                                                        "aws_route_table.public"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_public_subnets",
                                                    "var.create_igw",
                                                    "var.enable_ipv6"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table.database",
                                            "mode": "managed",
                                            "type": "aws_route_table",
                                            "name": "database",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "tags": {
                                                    "references": [
                                                        "var.single_nat_gateway",
                                                        "var.create_database_internet_gateway_route",
                                                        "var.name",
                                                        "var.database_subnet_suffix",
                                                        "var.name",
                                                        "var.database_subnet_suffix",
                                                        "var.azs",
                                                        "count.index",
                                                        "var.tags",
                                                        "var.database_route_table_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_database_route_table",
                                                    "var.single_nat_gateway",
                                                    "var.create_database_internet_gateway_route",
                                                    "local.len_database_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table.elasticache",
                                            "mode": "managed",
                                            "type": "aws_route_table",
                                            "name": "elasticache",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.elasticache_subnet_suffix",
                                                        "var.tags",
                                                        "var.elasticache_route_table_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_elasticache_route_table"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table.intra",
                                            "mode": "managed",
                                            "type": "aws_route_table",
                                            "name": "intra",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "tags": {
                                                    "references": [
                                                        "var.create_multiple_intra_route_tables",
                                                        "var.name",
                                                        "var.intra_subnet_suffix",
                                                        "var.azs",
                                                        "count.index",
                                                        "var.name",
                                                        "var.intra_subnet_suffix",
                                                        "var.tags",
                                                        "var.intra_route_table_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_intra_subnets",
                                                    "local.num_intra_route_tables"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table.private",
                                            "mode": "managed",
                                            "type": "aws_route_table",
                                            "name": "private",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "tags": {
                                                    "references": [
                                                        "var.single_nat_gateway",
                                                        "var.name",
                                                        "var.private_subnet_suffix",
                                                        "var.name",
                                                        "var.private_subnet_suffix",
                                                        "var.azs",
                                                        "count.index",
                                                        "var.tags",
                                                        "var.private_route_table_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_private_subnets",
                                                    "local.max_subnet_length",
                                                    "local.nat_gateway_count"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table.public",
                                            "mode": "managed",
                                            "type": "aws_route_table",
                                            "name": "public",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "tags": {
                                                    "references": [
                                                        "var.create_multiple_public_route_tables",
                                                        "var.name",
                                                        "var.public_subnet_suffix",
                                                        "var.azs",
                                                        "count.index",
                                                        "var.name",
                                                        "var.public_subnet_suffix",
                                                        "var.tags",
                                                        "var.public_route_table_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_public_subnets",
                                                    "local.num_public_route_tables"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table.redshift",
                                            "mode": "managed",
                                            "type": "aws_route_table",
                                            "name": "redshift",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.redshift_subnet_suffix",
                                                        "var.tags",
                                                        "var.redshift_route_table_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_redshift_route_table"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table_association.database",
                                            "mode": "managed",
                                            "type": "aws_route_table_association",
                                            "name": "database",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.database",
                                                        "aws_route_table.private",
                                                        "var.create_database_subnet_route_table",
                                                        "var.single_nat_gateway",
                                                        "var.create_database_internet_gateway_route",
                                                        "count.index",
                                                        "count.index"
                                                    ]
                                                },
                                                "subnet_id": {
                                                    "references": [
                                                        "aws_subnet.database",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_database_subnets",
                                                    "local.len_database_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table_association.elasticache",
                                            "mode": "managed",
                                            "type": "aws_route_table_association",
                                            "name": "elasticache",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.elasticache",
                                                        "aws_route_table.private",
                                                        "var.single_nat_gateway",
                                                        "var.create_elasticache_subnet_route_table",
                                                        "count.index"
                                                    ]
                                                },
                                                "subnet_id": {
                                                    "references": [
                                                        "aws_subnet.elasticache",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_elasticache_subnets",
                                                    "local.len_elasticache_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table_association.intra",
                                            "mode": "managed",
                                            "type": "aws_route_table_association",
                                            "name": "intra",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.intra",
                                                        "var.create_multiple_intra_route_tables",
                                                        "count.index"
                                                    ]
                                                },
                                                "subnet_id": {
                                                    "references": [
                                                        "aws_subnet.intra",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_intra_subnets",
                                                    "local.len_intra_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table_association.outpost",
                                            "mode": "managed",
                                            "type": "aws_route_table_association",
                                            "name": "outpost",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.private",
                                                        "var.single_nat_gateway",
                                                        "count.index"
                                                    ]
                                                },
                                                "subnet_id": {
                                                    "references": [
                                                        "aws_subnet.outpost",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_outpost_subnets",
                                                    "local.len_outpost_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table_association.private",
                                            "mode": "managed",
                                            "type": "aws_route_table_association",
                                            "name": "private",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.private",
                                                        "var.single_nat_gateway",
                                                        "count.index"
                                                    ]
                                                },
                                                "subnet_id": {
                                                    "references": [
                                                        "aws_subnet.private",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_private_subnets",
                                                    "local.len_private_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table_association.public",
                                            "mode": "managed",
                                            "type": "aws_route_table_association",
                                            "name": "public",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.public",
                                                        "var.create_multiple_public_route_tables",
                                                        "count.index"
                                                    ]
                                                },
                                                "subnet_id": {
                                                    "references": [
                                                        "aws_subnet.public",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_public_subnets",
                                                    "local.len_public_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table_association.redshift",
                                            "mode": "managed",
                                            "type": "aws_route_table_association",
                                            "name": "redshift",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.redshift",
                                                        "aws_route_table.private",
                                                        "var.single_nat_gateway",
                                                        "var.create_redshift_subnet_route_table",
                                                        "count.index"
                                                    ]
                                                },
                                                "subnet_id": {
                                                    "references": [
                                                        "aws_subnet.redshift",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_redshift_subnets",
                                                    "var.enable_public_redshift",
                                                    "local.len_redshift_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_route_table_association.redshift_public",
                                            "mode": "managed",
                                            "type": "aws_route_table_association",
                                            "name": "redshift_public",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.redshift",
                                                        "aws_route_table.public",
                                                        "var.single_nat_gateway",
                                                        "var.create_redshift_subnet_route_table",
                                                        "count.index"
                                                    ]
                                                },
                                                "subnet_id": {
                                                    "references": [
                                                        "aws_subnet.redshift",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_redshift_subnets",
                                                    "var.enable_public_redshift",
                                                    "local.len_redshift_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_subnet.database",
                                            "mode": "managed",
                                            "type": "aws_subnet",
                                            "name": "database",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "assign_ipv6_address_on_creation": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.database_subnet_ipv6_native",
                                                        "var.database_subnet_assign_ipv6_address_on_creation"
                                                    ]
                                                },
                                                "availability_zone": {
                                                    "references": [
                                                        "var.azs",
                                                        "count.index",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "availability_zone_id": {
                                                    "references": [
                                                        "var.azs",
                                                        "count.index",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "cidr_block": {
                                                    "references": [
                                                        "var.database_subnet_ipv6_native",
                                                        "var.database_subnets",
                                                        "count.index"
                                                    ]
                                                },
                                                "enable_dns64": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.database_subnet_enable_dns64"
                                                    ]
                                                },
                                                "enable_resource_name_dns_a_record_on_launch": {
                                                    "references": [
                                                        "var.database_subnet_ipv6_native",
                                                        "var.database_subnet_enable_resource_name_dns_a_record_on_launch"
                                                    ]
                                                },
                                                "enable_resource_name_dns_aaaa_record_on_launch": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.database_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.database_subnet_ipv6_prefixes",
                                                        "aws_vpc.this[0].ipv6_cidr_block",
                                                        "aws_vpc.this[0]",
                                                        "aws_vpc.this",
                                                        "var.database_subnet_ipv6_prefixes",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_native": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.database_subnet_ipv6_native"
                                                    ]
                                                },
                                                "private_dns_hostname_type_on_launch": {
                                                    "references": [
                                                        "var.database_subnet_private_dns_hostname_type_on_launch"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.database_subnet_names",
                                                        "count.index",
                                                        "var.name",
                                                        "var.database_subnet_suffix",
                                                        "var.azs",
                                                        "count.index",
                                                        "var.tags",
                                                        "var.database_subnet_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_database_subnets",
                                                    "local.len_database_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_subnet.elasticache",
                                            "mode": "managed",
                                            "type": "aws_subnet",
                                            "name": "elasticache",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "assign_ipv6_address_on_creation": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.elasticache_subnet_ipv6_native",
                                                        "var.elasticache_subnet_assign_ipv6_address_on_creation"
                                                    ]
                                                },
                                                "availability_zone": {
                                                    "references": [
                                                        "var.azs",
                                                        "count.index",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "availability_zone_id": {
                                                    "references": [
                                                        "var.azs",
                                                        "count.index",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "cidr_block": {
                                                    "references": [
                                                        "var.elasticache_subnet_ipv6_native",
                                                        "var.elasticache_subnets",
                                                        "count.index"
                                                    ]
                                                },
                                                "enable_dns64": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.elasticache_subnet_enable_dns64"
                                                    ]
                                                },
                                                "enable_resource_name_dns_a_record_on_launch": {
                                                    "references": [
                                                        "var.elasticache_subnet_ipv6_native",
                                                        "var.elasticache_subnet_enable_resource_name_dns_a_record_on_launch"
                                                    ]
                                                },
                                                "enable_resource_name_dns_aaaa_record_on_launch": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.elasticache_subnet_ipv6_prefixes",
                                                        "aws_vpc.this[0].ipv6_cidr_block",
                                                        "aws_vpc.this[0]",
                                                        "aws_vpc.this",
                                                        "var.elasticache_subnet_ipv6_prefixes",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_native": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.elasticache_subnet_ipv6_native"
                                                    ]
                                                },
                                                "private_dns_hostname_type_on_launch": {
                                                    "references": [
                                                        "var.elasticache_subnet_private_dns_hostname_type_on_launch"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.elasticache_subnet_names",
                                                        "count.index",
                                                        "var.name",
                                                        "var.elasticache_subnet_suffix",
                                                        "var.azs",
                                                        "count.index",
                                                        "var.tags",
                                                        "var.elasticache_subnet_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_elasticache_subnets",
                                                    "local.len_elasticache_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_subnet.intra",
                                            "mode": "managed",
                                            "type": "aws_subnet",
                                            "name": "intra",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "assign_ipv6_address_on_creation": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.intra_subnet_ipv6_native",
                                                        "var.intra_subnet_assign_ipv6_address_on_creation"
                                                    ]
                                                },
                                                "availability_zone": {
                                                    "references": [
                                                        "var.azs",
                                                        "count.index",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "availability_zone_id": {
                                                    "references": [
                                                        "var.azs",
                                                        "count.index",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "cidr_block": {
                                                    "references": [
                                                        "var.intra_subnet_ipv6_native",
                                                        "var.intra_subnets",
                                                        "count.index"
                                                    ]
                                                },
                                                "enable_dns64": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.intra_subnet_enable_dns64"
                                                    ]
                                                },
                                                "enable_resource_name_dns_a_record_on_launch": {
                                                    "references": [
                                                        "var.intra_subnet_ipv6_native",
                                                        "var.intra_subnet_enable_resource_name_dns_a_record_on_launch"
                                                    ]
                                                },
                                                "enable_resource_name_dns_aaaa_record_on_launch": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.intra_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.intra_subnet_ipv6_prefixes",
                                                        "aws_vpc.this[0].ipv6_cidr_block",
                                                        "aws_vpc.this[0]",
                                                        "aws_vpc.this",
                                                        "var.intra_subnet_ipv6_prefixes",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_native": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.intra_subnet_ipv6_native"
                                                    ]
                                                },
                                                "private_dns_hostname_type_on_launch": {
                                                    "references": [
                                                        "var.intra_subnet_private_dns_hostname_type_on_launch"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.intra_subnet_names",
                                                        "count.index",
                                                        "var.name",
                                                        "var.intra_subnet_suffix",
                                                        "var.azs",
                                                        "count.index",
                                                        "var.tags",
                                                        "var.intra_subnet_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_intra_subnets",
                                                    "local.len_intra_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_subnet.outpost",
                                            "mode": "managed",
                                            "type": "aws_subnet",
                                            "name": "outpost",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "assign_ipv6_address_on_creation": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.outpost_subnet_ipv6_native",
                                                        "var.outpost_subnet_assign_ipv6_address_on_creation"
                                                    ]
                                                },
                                                "availability_zone": {
                                                    "references": [
                                                        "var.outpost_az"
                                                    ]
                                                },
                                                "cidr_block": {
                                                    "references": [
                                                        "var.outpost_subnet_ipv6_native",
                                                        "var.outpost_subnets",
                                                        "count.index"
                                                    ]
                                                },
                                                "customer_owned_ipv4_pool": {
                                                    "references": [
                                                        "var.customer_owned_ipv4_pool"
                                                    ]
                                                },
                                                "enable_dns64": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.outpost_subnet_enable_dns64"
                                                    ]
                                                },
                                                "enable_resource_name_dns_a_record_on_launch": {
                                                    "references": [
                                                        "var.outpost_subnet_ipv6_native",
                                                        "var.outpost_subnet_enable_resource_name_dns_a_record_on_launch"
                                                    ]
                                                },
                                                "enable_resource_name_dns_aaaa_record_on_launch": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.outpost_subnet_ipv6_prefixes",
                                                        "aws_vpc.this[0].ipv6_cidr_block",
                                                        "aws_vpc.this[0]",
                                                        "aws_vpc.this",
                                                        "var.outpost_subnet_ipv6_prefixes",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_native": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.outpost_subnet_ipv6_native"
                                                    ]
                                                },
                                                "map_customer_owned_ip_on_launch": {
                                                    "references": [
                                                        "var.map_customer_owned_ip_on_launch"
                                                    ]
                                                },
                                                "outpost_arn": {
                                                    "references": [
                                                        "var.outpost_arn"
                                                    ]
                                                },
                                                "private_dns_hostname_type_on_launch": {
                                                    "references": [
                                                        "var.outpost_subnet_private_dns_hostname_type_on_launch"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.outpost_subnet_names",
                                                        "count.index",
                                                        "var.name",
                                                        "var.outpost_subnet_suffix",
                                                        "var.outpost_az",
                                                        "var.tags",
                                                        "var.outpost_subnet_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_outpost_subnets",
                                                    "local.len_outpost_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_subnet.private",
                                            "mode": "managed",
                                            "type": "aws_subnet",
                                            "name": "private",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "assign_ipv6_address_on_creation": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.private_subnet_ipv6_native",
                                                        "var.private_subnet_assign_ipv6_address_on_creation"
                                                    ]
                                                },
                                                "availability_zone": {
                                                    "references": [
                                                        "var.azs",
                                                        "count.index",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "availability_zone_id": {
                                                    "references": [
                                                        "var.azs",
                                                        "count.index",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "cidr_block": {
                                                    "references": [
                                                        "var.private_subnet_ipv6_native",
                                                        "var.private_subnets",
                                                        "count.index"
                                                    ]
                                                },
                                                "enable_dns64": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.private_subnet_enable_dns64"
                                                    ]
                                                },
                                                "enable_resource_name_dns_a_record_on_launch": {
                                                    "references": [
                                                        "var.private_subnet_ipv6_native",
                                                        "var.private_subnet_enable_resource_name_dns_a_record_on_launch"
                                                    ]
                                                },
                                                "enable_resource_name_dns_aaaa_record_on_launch": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.private_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.private_subnet_ipv6_prefixes",
                                                        "aws_vpc.this[0].ipv6_cidr_block",
                                                        "aws_vpc.this[0]",
                                                        "aws_vpc.this",
                                                        "var.private_subnet_ipv6_prefixes",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_native": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.private_subnet_ipv6_native"
                                                    ]
                                                },
                                                "private_dns_hostname_type_on_launch": {
                                                    "references": [
                                                        "var.private_subnet_private_dns_hostname_type_on_launch"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.private_subnet_names",
                                                        "count.index",
                                                        "var.name",
                                                        "var.private_subnet_suffix",
                                                        "var.azs",
                                                        "count.index",
                                                        "var.tags",
                                                        "var.private_subnet_tags",
                                                        "var.private_subnet_tags_per_az",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_private_subnets",
                                                    "local.len_private_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_subnet.public",
                                            "mode": "managed",
                                            "type": "aws_subnet",
                                            "name": "public",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "assign_ipv6_address_on_creation": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.public_subnet_ipv6_native",
                                                        "var.public_subnet_assign_ipv6_address_on_creation"
                                                    ]
                                                },
                                                "availability_zone": {
                                                    "references": [
                                                        "var.azs",
                                                        "count.index",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "availability_zone_id": {
                                                    "references": [
                                                        "var.azs",
                                                        "count.index",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "cidr_block": {
                                                    "references": [
                                                        "var.public_subnet_ipv6_native",
                                                        "var.public_subnets",
                                                        "count.index"
                                                    ]
                                                },
                                                "enable_dns64": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.public_subnet_enable_dns64"
                                                    ]
                                                },
                                                "enable_resource_name_dns_a_record_on_launch": {
                                                    "references": [
                                                        "var.public_subnet_ipv6_native",
                                                        "var.public_subnet_enable_resource_name_dns_a_record_on_launch"
                                                    ]
                                                },
                                                "enable_resource_name_dns_aaaa_record_on_launch": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.public_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.public_subnet_ipv6_prefixes",
                                                        "aws_vpc.this[0].ipv6_cidr_block",
                                                        "aws_vpc.this[0]",
                                                        "aws_vpc.this",
                                                        "var.public_subnet_ipv6_prefixes",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_native": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.public_subnet_ipv6_native"
                                                    ]
                                                },
                                                "map_public_ip_on_launch": {
                                                    "references": [
                                                        "var.map_public_ip_on_launch"
                                                    ]
                                                },
                                                "private_dns_hostname_type_on_launch": {
                                                    "references": [
                                                        "var.public_subnet_private_dns_hostname_type_on_launch"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.public_subnet_names",
                                                        "count.index",
                                                        "var.name",
                                                        "var.public_subnet_suffix",
                                                        "var.azs",
                                                        "count.index",
                                                        "var.tags",
                                                        "var.public_subnet_tags",
                                                        "var.public_subnet_tags_per_az",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_public_subnets",
                                                    "var.one_nat_gateway_per_az",
                                                    "local.len_public_subnets",
                                                    "var.azs",
                                                    "local.len_public_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_subnet.redshift",
                                            "mode": "managed",
                                            "type": "aws_subnet",
                                            "name": "redshift",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "assign_ipv6_address_on_creation": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.redshift_subnet_ipv6_native",
                                                        "var.redshift_subnet_assign_ipv6_address_on_creation"
                                                    ]
                                                },
                                                "availability_zone": {
                                                    "references": [
                                                        "var.azs",
                                                        "count.index",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "availability_zone_id": {
                                                    "references": [
                                                        "var.azs",
                                                        "count.index",
                                                        "var.azs",
                                                        "count.index"
                                                    ]
                                                },
                                                "cidr_block": {
                                                    "references": [
                                                        "var.redshift_subnet_ipv6_native",
                                                        "var.redshift_subnets",
                                                        "count.index"
                                                    ]
                                                },
                                                "enable_dns64": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.redshift_subnet_enable_dns64"
                                                    ]
                                                },
                                                "enable_resource_name_dns_a_record_on_launch": {
                                                    "references": [
                                                        "var.redshift_subnet_ipv6_native",
                                                        "var.redshift_subnet_enable_resource_name_dns_a_record_on_launch"
                                                    ]
                                                },
                                                "enable_resource_name_dns_aaaa_record_on_launch": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.redshift_subnet_ipv6_prefixes",
                                                        "aws_vpc.this[0].ipv6_cidr_block",
                                                        "aws_vpc.this[0]",
                                                        "aws_vpc.this",
                                                        "var.redshift_subnet_ipv6_prefixes",
                                                        "count.index"
                                                    ]
                                                },
                                                "ipv6_native": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.redshift_subnet_ipv6_native"
                                                    ]
                                                },
                                                "private_dns_hostname_type_on_launch": {
                                                    "references": [
                                                        "var.redshift_subnet_private_dns_hostname_type_on_launch"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.redshift_subnet_names",
                                                        "count.index",
                                                        "var.name",
                                                        "var.redshift_subnet_suffix",
                                                        "var.azs",
                                                        "count.index",
                                                        "var.tags",
                                                        "var.redshift_subnet_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_redshift_subnets",
                                                    "local.len_redshift_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_vpc.this",
                                            "mode": "managed",
                                            "type": "aws_vpc",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "assign_generated_ipv6_cidr_block": {
                                                    "references": [
                                                        "var.enable_ipv6",
                                                        "var.use_ipam_pool"
                                                    ]
                                                },
                                                "cidr_block": {
                                                    "references": [
                                                        "var.use_ipam_pool",
                                                        "var.cidr"
                                                    ]
                                                },
                                                "enable_dns_hostnames": {
                                                    "references": [
                                                        "var.enable_dns_hostnames"
                                                    ]
                                                },
                                                "enable_dns_support": {
                                                    "references": [
                                                        "var.enable_dns_support"
                                                    ]
                                                },
                                                "enable_network_address_usage_metrics": {
                                                    "references": [
                                                        "var.enable_network_address_usage_metrics"
                                                    ]
                                                },
                                                "instance_tenancy": {
                                                    "references": [
                                                        "var.instance_tenancy"
                                                    ]
                                                },
                                                "ipv4_ipam_pool_id": {
                                                    "references": [
                                                        "var.ipv4_ipam_pool_id"
                                                    ]
                                                },
                                                "ipv4_netmask_length": {
                                                    "references": [
                                                        "var.ipv4_netmask_length"
                                                    ]
                                                },
                                                "ipv6_cidr_block": {
                                                    "references": [
                                                        "var.ipv6_cidr"
                                                    ]
                                                },
                                                "ipv6_cidr_block_network_border_group": {
                                                    "references": [
                                                        "var.ipv6_cidr_block_network_border_group"
                                                    ]
                                                },
                                                "ipv6_ipam_pool_id": {
                                                    "references": [
                                                        "var.ipv6_ipam_pool_id"
                                                    ]
                                                },
                                                "ipv6_netmask_length": {
                                                    "references": [
                                                        "var.ipv6_netmask_length"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.tags",
                                                        "var.vpc_tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 1,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_vpc_dhcp_options.this",
                                            "mode": "managed",
                                            "type": "aws_vpc_dhcp_options",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "domain_name": {
                                                    "references": [
                                                        "var.dhcp_options_domain_name"
                                                    ]
                                                },
                                                "domain_name_servers": {
                                                    "references": [
                                                        "var.dhcp_options_domain_name_servers"
                                                    ]
                                                },
                                                "netbios_name_servers": {
                                                    "references": [
                                                        "var.dhcp_options_netbios_name_servers"
                                                    ]
                                                },
                                                "netbios_node_type": {
                                                    "references": [
                                                        "var.dhcp_options_netbios_node_type"
                                                    ]
                                                },
                                                "ntp_servers": {
                                                    "references": [
                                                        "var.dhcp_options_ntp_servers"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.tags",
                                                        "var.dhcp_options_tags"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.enable_dhcp_options"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_vpc_dhcp_options_association.this",
                                            "mode": "managed",
                                            "type": "aws_vpc_dhcp_options_association",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "dhcp_options_id": {
                                                    "references": [
                                                        "aws_vpc_dhcp_options.this[0].id",
                                                        "aws_vpc_dhcp_options.this[0]",
                                                        "aws_vpc_dhcp_options.this"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.enable_dhcp_options"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_vpc_ipv4_cidr_block_association.this",
                                            "mode": "managed",
                                            "type": "aws_vpc_ipv4_cidr_block_association",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "cidr_block": {
                                                    "references": [
                                                        "var.secondary_cidr_blocks",
                                                        "count.index"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "aws_vpc.this[0].id",
                                                        "aws_vpc.this[0]",
                                                        "aws_vpc.this"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.secondary_cidr_blocks",
                                                    "var.secondary_cidr_blocks"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_vpn_gateway.this",
                                            "mode": "managed",
                                            "type": "aws_vpn_gateway",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "amazon_side_asn": {
                                                    "references": [
                                                        "var.amazon_side_asn"
                                                    ]
                                                },
                                                "availability_zone": {
                                                    "references": [
                                                        "var.vpn_gateway_az"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.name",
                                                        "var.tags",
                                                        "var.vpn_gateway_tags"
                                                    ]
                                                },
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.enable_vpn_gateway"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_vpn_gateway_attachment.this",
                                            "mode": "managed",
                                            "type": "aws_vpn_gateway_attachment",
                                            "name": "this",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "vpc_id": {
                                                    "references": [
                                                        "local.vpc_id"
                                                    ]
                                                },
                                                "vpn_gateway_id": {
                                                    "references": [
                                                        "var.vpn_gateway_id"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "var.vpn_gateway_id"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_vpn_gateway_route_propagation.intra",
                                            "mode": "managed",
                                            "type": "aws_vpn_gateway_route_propagation",
                                            "name": "intra",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.intra",
                                                        "count.index"
                                                    ]
                                                },
                                                "vpn_gateway_id": {
                                                    "references": [
                                                        "aws_vpn_gateway.this",
                                                        "aws_vpn_gateway_attachment.this",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.propagate_intra_route_tables_vgw",
                                                    "var.enable_vpn_gateway",
                                                    "var.vpn_gateway_id",
                                                    "local.len_intra_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_vpn_gateway_route_propagation.private",
                                            "mode": "managed",
                                            "type": "aws_vpn_gateway_route_propagation",
                                            "name": "private",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.private",
                                                        "count.index"
                                                    ]
                                                },
                                                "vpn_gateway_id": {
                                                    "references": [
                                                        "aws_vpn_gateway.this",
                                                        "aws_vpn_gateway_attachment.this",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.propagate_private_route_tables_vgw",
                                                    "var.enable_vpn_gateway",
                                                    "var.vpn_gateway_id",
                                                    "local.len_private_subnets"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "aws_vpn_gateway_route_propagation.public",
                                            "mode": "managed",
                                            "type": "aws_vpn_gateway_route_propagation",
                                            "name": "public",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "route_table_id": {
                                                    "references": [
                                                        "aws_route_table.public",
                                                        "count.index"
                                                    ]
                                                },
                                                "vpn_gateway_id": {
                                                    "references": [
                                                        "aws_vpn_gateway.this",
                                                        "aws_vpn_gateway_attachment.this",
                                                        "count.index"
                                                    ]
                                                }
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_vpc",
                                                    "var.propagate_public_route_tables_vgw",
                                                    "var.enable_vpn_gateway",
                                                    "var.vpn_gateway_id"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
                                            "mode": "data",
                                            "type": "aws_iam_policy_document",
                                            "name": "flow_log_cloudwatch_assume_role",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "statement": [
                                                    {
                                                        "actions": {
                                                            "constant_value": [
                                                                "sts:AssumeRole"
                                                            ]
                                                        },
                                                        "effect": {
                                                            "constant_value": "Allow"
                                                        },
                                                        "principals": [
                                                            {
                                                                "identifiers": {
                                                                    "constant_value": [
                                                                        "vpc-flow-logs.amazonaws.com"
                                                                    ]
                                                                },
                                                                "type": {
                                                                    "constant_value": "Service"
                                                                }
                                                            }
                                                        ],
                                                        "sid": {
                                                            "constant_value": "AWSVPCFlowLogsAssumeRole"
                                                        }
                                                    }
                                                ]
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_flow_log_cloudwatch_iam_role"
                                                ]
                                            }
                                        },
                                        {
                                            "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
                                            "mode": "data",
                                            "type": "aws_iam_policy_document",
                                            "name": "vpc_flow_log_cloudwatch",
                                            "provider_config_key": "aws",
                                            "expressions": {
                                                "statement": [
                                                    {
                                                        "actions": {
                                                            "constant_value": [
                                                                "logs:CreateLogStream",
                                                                "logs:PutLogEvents",
                                                                "logs:DescribeLogGroups",
                                                                "logs:DescribeLogStreams"
                                                            ]
                                                        },
                                                        "effect": {
                                                            "constant_value": "Allow"
                                                        },
                                                        "resources": {
                                                            "constant_value": [
                                                                "*"
                                                            ]
                                                        },
                                                        "sid": {
                                                            "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
                                                        }
                                                    }
                                                ]
                                            },
                                            "schema_version": 0,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_flow_log_cloudwatch_iam_role"
                                                ]
                                            }
                                        }
                                    ],
                                    "variables": {
                                        "amazon_side_asn": {
                                            "default": "64512",
                                            "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN"
                                        },
                                        "azs": {
                                            "default": [],
                                            "description": "A list of availability zones names or ids in the region"
                                        },
                                        "cidr": {
                                            "default": "10.0.0.0/16",
                                            "description": "(Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` \u0026 `ipv4_ipam_pool_id`"
                                        },
                                        "create_database_internet_gateway_route": {
                                            "default": false,
                                            "description": "Controls if an internet gateway route for public database access should be created"
                                        },
                                        "create_database_nat_gateway_route": {
                                            "default": false,
                                            "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
                                        },
                                        "create_database_subnet_group": {
                                            "default": true,
                                            "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
                                        },
                                        "create_database_subnet_route_table": {
                                            "default": false,
                                            "description": "Controls if separate route table for database should be created"
                                        },
                                        "create_egress_only_igw": {
                                            "default": true,
                                            "description": "Controls if an Egress Only Internet Gateway is created and its related routes"
                                        },
                                        "create_elasticache_subnet_group": {
                                            "default": true,
                                            "description": "Controls if elasticache subnet group should be created"
                                        },
                                        "create_elasticache_subnet_route_table": {
                                            "default": false,
                                            "description": "Controls if separate route table for elasticache should be created"
                                        },
                                        "create_flow_log_cloudwatch_iam_role": {
                                            "default": false,
                                            "description": "Whether to create IAM role for VPC Flow Logs"
                                        },
                                        "create_flow_log_cloudwatch_log_group": {
                                            "default": false,
                                            "description": "Whether to create CloudWatch log group for VPC Flow Logs"
                                        },
                                        "create_igw": {
                                            "default": true,
                                            "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them"
                                        },
                                        "create_multiple_intra_route_tables": {
                                            "default": false,
                                            "description": "Indicates whether to create a separate route table for each intra subnet. Default: `false`"
                                        },
                                        "create_multiple_public_route_tables": {
                                            "default": false,
                                            "description": "Indicates whether to create a separate route table for each public subnet. Default: `false`"
                                        },
                                        "create_redshift_subnet_group": {
                                            "default": true,
                                            "description": "Controls if redshift subnet group should be created"
                                        },
                                        "create_redshift_subnet_route_table": {
                                            "default": false,
                                            "description": "Controls if separate route table for redshift should be created"
                                        },
                                        "create_vpc": {
                                            "default": true,
                                            "description": "Controls if VPC should be created (it affects almost all resources)"
                                        },
                                        "customer_gateway_tags": {
                                            "default": {},
                                            "description": "Additional tags for the Customer Gateway"
                                        },
                                        "customer_gateways": {
                                            "default": {},
                                            "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
                                        },
                                        "customer_owned_ipv4_pool": {
                                            "default": null,
                                            "description": "The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured"
                                        },
                                        "database_acl_tags": {
                                            "default": {},
                                            "description": "Additional tags for the database subnets network ACL"
                                        },
                                        "database_dedicated_network_acl": {
                                            "default": false,
                                            "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
                                        },
                                        "database_inbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Database subnets inbound network ACL rules"
                                        },
                                        "database_outbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Database subnets outbound network ACL rules"
                                        },
                                        "database_route_table_tags": {
                                            "default": {},
                                            "description": "Additional tags for the database route tables"
                                        },
                                        "database_subnet_assign_ipv6_address_on_creation": {
                                            "default": false,
                                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                        },
                                        "database_subnet_enable_dns64": {
                                            "default": true,
                                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                        },
                                        "database_subnet_enable_resource_name_dns_a_record_on_launch": {
                                            "default": false,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                        },
                                        "database_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                            "default": true,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                        },
                                        "database_subnet_group_name": {
                                            "default": null,
                                            "description": "Name of database subnet group"
                                        },
                                        "database_subnet_group_tags": {
                                            "default": {},
                                            "description": "Additional tags for the database subnet group"
                                        },
                                        "database_subnet_ipv6_native": {
                                            "default": false,
                                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                        },
                                        "database_subnet_ipv6_prefixes": {
                                            "default": [],
                                            "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                        },
                                        "database_subnet_names": {
                                            "default": [],
                                            "description": "Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated"
                                        },
                                        "database_subnet_private_dns_hostname_type_on_launch": {
                                            "default": null,
                                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                        },
                                        "database_subnet_suffix": {
                                            "default": "db",
                                            "description": "Suffix to append to database subnets name"
                                        },
                                        "database_subnet_tags": {
                                            "default": {},
                                            "description": "Additional tags for the database subnets"
                                        },
                                        "database_subnets": {
                                            "default": [],
                                            "description": "A list of database subnets inside the VPC"
                                        },
                                        "default_network_acl_egress": {
                                            "default": [
                                                {
                                                    "action": "allow",
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_no": "100",
                                                    "to_port": "0"
                                                },
                                                {
                                                    "action": "allow",
                                                    "from_port": "0",
                                                    "ipv6_cidr_block": "::/0",
                                                    "protocol": "-1",
                                                    "rule_no": "101",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "List of maps of egress rules to set on the Default Network ACL"
                                        },
                                        "default_network_acl_ingress": {
                                            "default": [
                                                {
                                                    "action": "allow",
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_no": "100",
                                                    "to_port": "0"
                                                },
                                                {
                                                    "action": "allow",
                                                    "from_port": "0",
                                                    "ipv6_cidr_block": "::/0",
                                                    "protocol": "-1",
                                                    "rule_no": "101",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "List of maps of ingress rules to set on the Default Network ACL"
                                        },
                                        "default_network_acl_name": {
                                            "default": null,
                                            "description": "Name to be used on the Default Network ACL"
                                        },
                                        "default_network_acl_tags": {
                                            "default": {},
                                            "description": "Additional tags for the Default Network ACL"
                                        },
                                        "default_route_table_name": {
                                            "default": null,
                                            "description": "Name to be used on the default route table"
                                        },
                                        "default_route_table_propagating_vgws": {
                                            "default": [],
                                            "description": "List of virtual gateways for propagation"
                                        },
                                        "default_route_table_routes": {
                                            "default": [],
                                            "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
                                        },
                                        "default_route_table_tags": {
                                            "default": {},
                                            "description": "Additional tags for the default route table"
                                        },
                                        "default_security_group_egress": {
                                            "default": [],
                                            "description": "List of maps of egress rules to set on the default security group"
                                        },
                                        "default_security_group_ingress": {
                                            "default": [],
                                            "description": "List of maps of ingress rules to set on the default security group"
                                        },
                                        "default_security_group_name": {
                                            "default": null,
                                            "description": "Name to be used on the default security group"
                                        },
                                        "default_security_group_tags": {
                                            "default": {},
                                            "description": "Additional tags for the default security group"
                                        },
                                        "default_vpc_enable_dns_hostnames": {
                                            "default": true,
                                            "description": "Should be true to enable DNS hostnames in the Default VPC"
                                        },
                                        "default_vpc_enable_dns_support": {
                                            "default": true,
                                            "description": "Should be true to enable DNS support in the Default VPC"
                                        },
                                        "default_vpc_name": {
                                            "default": null,
                                            "description": "Name to be used on the Default VPC"
                                        },
                                        "default_vpc_tags": {
                                            "default": {},
                                            "description": "Additional tags for the Default VPC"
                                        },
                                        "dhcp_options_domain_name": {
                                            "default": "",
                                            "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
                                        },
                                        "dhcp_options_domain_name_servers": {
                                            "default": [
                                                "AmazonProvidedDNS"
                                            ],
                                            "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
                                        },
                                        "dhcp_options_netbios_name_servers": {
                                            "default": [],
                                            "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
                                        },
                                        "dhcp_options_netbios_node_type": {
                                            "default": "",
                                            "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
                                        },
                                        "dhcp_options_ntp_servers": {
                                            "default": [],
                                            "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
                                        },
                                        "dhcp_options_tags": {
                                            "default": {},
                                            "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
                                        },
                                        "elasticache_acl_tags": {
                                            "default": {},
                                            "description": "Additional tags for the elasticache subnets network ACL"
                                        },
                                        "elasticache_dedicated_network_acl": {
                                            "default": false,
                                            "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
                                        },
                                        "elasticache_inbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Elasticache subnets inbound network ACL rules"
                                        },
                                        "elasticache_outbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Elasticache subnets outbound network ACL rules"
                                        },
                                        "elasticache_route_table_tags": {
                                            "default": {},
                                            "description": "Additional tags for the elasticache route tables"
                                        },
                                        "elasticache_subnet_assign_ipv6_address_on_creation": {
                                            "default": false,
                                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                        },
                                        "elasticache_subnet_enable_dns64": {
                                            "default": true,
                                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                        },
                                        "elasticache_subnet_enable_resource_name_dns_a_record_on_launch": {
                                            "default": false,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                        },
                                        "elasticache_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                            "default": true,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                        },
                                        "elasticache_subnet_group_name": {
                                            "default": null,
                                            "description": "Name of elasticache subnet group"
                                        },
                                        "elasticache_subnet_group_tags": {
                                            "default": {},
                                            "description": "Additional tags for the elasticache subnet group"
                                        },
                                        "elasticache_subnet_ipv6_native": {
                                            "default": false,
                                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                        },
                                        "elasticache_subnet_ipv6_prefixes": {
                                            "default": [],
                                            "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                        },
                                        "elasticache_subnet_names": {
                                            "default": [],
                                            "description": "Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated"
                                        },
                                        "elasticache_subnet_private_dns_hostname_type_on_launch": {
                                            "default": null,
                                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                        },
                                        "elasticache_subnet_suffix": {
                                            "default": "elasticache",
                                            "description": "Suffix to append to elasticache subnets name"
                                        },
                                        "elasticache_subnet_tags": {
                                            "default": {},
                                            "description": "Additional tags for the elasticache subnets"
                                        },
                                        "elasticache_subnets": {
                                            "default": [],
                                            "description": "A list of elasticache subnets inside the VPC"
                                        },
                                        "enable_dhcp_options": {
                                            "default": false,
                                            "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
                                        },
                                        "enable_dns_hostnames": {
                                            "default": true,
                                            "description": "Should be true to enable DNS hostnames in the VPC"
                                        },
                                        "enable_dns_support": {
                                            "default": true,
                                            "description": "Should be true to enable DNS support in the VPC"
                                        },
                                        "enable_flow_log": {
                                            "default": false,
                                            "description": "Whether or not to enable VPC Flow Logs"
                                        },
                                        "enable_ipv6": {
                                            "default": false,
                                            "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block"
                                        },
                                        "enable_nat_gateway": {
                                            "default": false,
                                            "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
                                        },
                                        "enable_network_address_usage_metrics": {
                                            "default": null,
                                            "description": "Determines whether network address usage metrics are enabled for the VPC"
                                        },
                                        "enable_public_redshift": {
                                            "default": false,
                                            "description": "Controls if redshift should have public routing table"
                                        },
                                        "enable_vpn_gateway": {
                                            "default": false,
                                            "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
                                        },
                                        "external_nat_ip_ids": {
                                            "default": [],
                                            "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
                                        },
                                        "external_nat_ips": {
                                            "default": [],
                                            "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
                                        },
                                        "flow_log_cloudwatch_iam_role_arn": {
                                            "default": "",
                                            "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided"
                                        },
                                        "flow_log_cloudwatch_log_group_class": {
                                            "default": null,
                                            "description": "Specified the log class of the log group. Possible values are: STANDARD or INFREQUENT_ACCESS"
                                        },
                                        "flow_log_cloudwatch_log_group_kms_key_id": {
                                            "default": null,
                                            "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs"
                                        },
                                        "flow_log_cloudwatch_log_group_name_prefix": {
                                            "default": "/aws/vpc-flow-log/",
                                            "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs"
                                        },
                                        "flow_log_cloudwatch_log_group_name_suffix": {
                                            "default": "",
                                            "description": "Specifies the name suffix of CloudWatch Log Group for VPC flow logs"
                                        },
                                        "flow_log_cloudwatch_log_group_retention_in_days": {
                                            "default": null,
                                            "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs"
                                        },
                                        "flow_log_cloudwatch_log_group_skip_destroy": {
                                            "default": false,
                                            "description": " Set to true if you do not wish the log group (and any logs it may contain) to be deleted at destroy time, and instead just remove the log group from the Terraform state"
                                        },
                                        "flow_log_deliver_cross_account_role": {
                                            "default": null,
                                            "description": "(Optional) ARN of the IAM role that allows Amazon EC2 to publish flow logs across accounts."
                                        },
                                        "flow_log_destination_arn": {
                                            "default": "",
                                            "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided"
                                        },
                                        "flow_log_destination_type": {
                                            "default": "cloud-watch-logs",
                                            "description": "Type of flow log destination. Can be s3, kinesis-data-firehose or cloud-watch-logs"
                                        },
                                        "flow_log_file_format": {
                                            "default": null,
                                            "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`"
                                        },
                                        "flow_log_hive_compatible_partitions": {
                                            "default": false,
                                            "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3"
                                        },
                                        "flow_log_log_format": {
                                            "default": null,
                                            "description": "The fields to include in the flow log record, in the order in which they should appear"
                                        },
                                        "flow_log_max_aggregation_interval": {
                                            "default": 600,
                                            "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds"
                                        },
                                        "flow_log_per_hour_partition": {
                                            "default": false,
                                            "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries"
                                        },
                                        "flow_log_traffic_type": {
                                            "default": "ALL",
                                            "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL"
                                        },
                                        "igw_tags": {
                                            "default": {},
                                            "description": "Additional tags for the internet gateway"
                                        },
                                        "instance_tenancy": {
                                            "default": "default",
                                            "description": "A tenancy option for instances launched into the VPC"
                                        },
                                        "intra_acl_tags": {
                                            "default": {},
                                            "description": "Additional tags for the intra subnets network ACL"
                                        },
                                        "intra_dedicated_network_acl": {
                                            "default": false,
                                            "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
                                        },
                                        "intra_inbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Intra subnets inbound network ACLs"
                                        },
                                        "intra_outbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Intra subnets outbound network ACLs"
                                        },
                                        "intra_route_table_tags": {
                                            "default": {},
                                            "description": "Additional tags for the intra route tables"
                                        },
                                        "intra_subnet_assign_ipv6_address_on_creation": {
                                            "default": false,
                                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                        },
                                        "intra_subnet_enable_dns64": {
                                            "default": true,
                                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                        },
                                        "intra_subnet_enable_resource_name_dns_a_record_on_launch": {
                                            "default": false,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                        },
                                        "intra_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                            "default": true,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                        },
                                        "intra_subnet_ipv6_native": {
                                            "default": false,
                                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                        },
                                        "intra_subnet_ipv6_prefixes": {
                                            "default": [],
                                            "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                        },
                                        "intra_subnet_names": {
                                            "default": [],
                                            "description": "Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated"
                                        },
                                        "intra_subnet_private_dns_hostname_type_on_launch": {
                                            "default": null,
                                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                        },
                                        "intra_subnet_suffix": {
                                            "default": "intra",
                                            "description": "Suffix to append to intra subnets name"
                                        },
                                        "intra_subnet_tags": {
                                            "default": {},
                                            "description": "Additional tags for the intra subnets"
                                        },
                                        "intra_subnets": {
                                            "default": [],
                                            "description": "A list of intra subnets inside the VPC"
                                        },
                                        "ipv4_ipam_pool_id": {
                                            "default": null,
                                            "description": "(Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR"
                                        },
                                        "ipv4_netmask_length": {
                                            "default": null,
                                            "description": "(Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id"
                                        },
                                        "ipv6_cidr": {
                                            "default": null,
                                            "description": "(Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`"
                                        },
                                        "ipv6_cidr_block_network_border_group": {
                                            "default": null,
                                            "description": "By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group will be set to the region of the VPC. This can be changed to restrict advertisement of public addresses to specific Network Border Groups such as LocalZones"
                                        },
                                        "ipv6_ipam_pool_id": {
                                            "default": null,
                                            "description": "(Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`"
                                        },
                                        "ipv6_netmask_length": {
                                            "default": null,
                                            "description": "(Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`"
                                        },
                                        "manage_default_network_acl": {
                                            "default": true,
                                            "description": "Should be true to adopt and manage Default Network ACL"
                                        },
                                        "manage_default_route_table": {
                                            "default": true,
                                            "description": "Should be true to manage default route table"
                                        },
                                        "manage_default_security_group": {
                                            "default": true,
                                            "description": "Should be true to adopt and manage default security group"
                                        },
                                        "manage_default_vpc": {
                                            "default": false,
                                            "description": "Should be true to adopt and manage Default VPC"
                                        },
                                        "map_customer_owned_ip_on_launch": {
                                            "default": false,
                                            "description": "Specify true to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`"
                                        },
                                        "map_public_ip_on_launch": {
                                            "default": false,
                                            "description": "Specify true to indicate that instances launched into the subnet should be assigned a public IP address. Default is `false`"
                                        },
                                        "name": {
                                            "default": "",
                                            "description": "Name to be used on all the resources as identifier"
                                        },
                                        "nat_eip_tags": {
                                            "default": {},
                                            "description": "Additional tags for the NAT EIP"
                                        },
                                        "nat_gateway_destination_cidr_block": {
                                            "default": "0.0.0.0/0",
                                            "description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route"
                                        },
                                        "nat_gateway_tags": {
                                            "default": {},
                                            "description": "Additional tags for the NAT gateways"
                                        },
                                        "one_nat_gateway_per_az": {
                                            "default": false,
                                            "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`"
                                        },
                                        "outpost_acl_tags": {
                                            "default": {},
                                            "description": "Additional tags for the outpost subnets network ACL"
                                        },
                                        "outpost_arn": {
                                            "default": null,
                                            "description": "ARN of Outpost you want to create a subnet in"
                                        },
                                        "outpost_az": {
                                            "default": null,
                                            "description": "AZ where Outpost is anchored"
                                        },
                                        "outpost_dedicated_network_acl": {
                                            "default": false,
                                            "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
                                        },
                                        "outpost_inbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Outpost subnets inbound network ACLs"
                                        },
                                        "outpost_outbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Outpost subnets outbound network ACLs"
                                        },
                                        "outpost_subnet_assign_ipv6_address_on_creation": {
                                            "default": false,
                                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                        },
                                        "outpost_subnet_enable_dns64": {
                                            "default": true,
                                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                        },
                                        "outpost_subnet_enable_resource_name_dns_a_record_on_launch": {
                                            "default": false,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                        },
                                        "outpost_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                            "default": true,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                        },
                                        "outpost_subnet_ipv6_native": {
                                            "default": false,
                                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                        },
                                        "outpost_subnet_ipv6_prefixes": {
                                            "default": [],
                                            "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                        },
                                        "outpost_subnet_names": {
                                            "default": [],
                                            "description": "Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated"
                                        },
                                        "outpost_subnet_private_dns_hostname_type_on_launch": {
                                            "default": null,
                                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                        },
                                        "outpost_subnet_suffix": {
                                            "default": "outpost",
                                            "description": "Suffix to append to outpost subnets name"
                                        },
                                        "outpost_subnet_tags": {
                                            "default": {},
                                            "description": "Additional tags for the outpost subnets"
                                        },
                                        "outpost_subnets": {
                                            "default": [],
                                            "description": "A list of outpost subnets inside the VPC"
                                        },
                                        "private_acl_tags": {
                                            "default": {},
                                            "description": "Additional tags for the private subnets network ACL"
                                        },
                                        "private_dedicated_network_acl": {
                                            "default": false,
                                            "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
                                        },
                                        "private_inbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Private subnets inbound network ACLs"
                                        },
                                        "private_outbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Private subnets outbound network ACLs"
                                        },
                                        "private_route_table_tags": {
                                            "default": {},
                                            "description": "Additional tags for the private route tables"
                                        },
                                        "private_subnet_assign_ipv6_address_on_creation": {
                                            "default": false,
                                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                        },
                                        "private_subnet_enable_dns64": {
                                            "default": true,
                                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                        },
                                        "private_subnet_enable_resource_name_dns_a_record_on_launch": {
                                            "default": false,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                        },
                                        "private_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                            "default": true,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                        },
                                        "private_subnet_ipv6_native": {
                                            "default": false,
                                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                        },
                                        "private_subnet_ipv6_prefixes": {
                                            "default": [],
                                            "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                        },
                                        "private_subnet_names": {
                                            "default": [],
                                            "description": "Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated"
                                        },
                                        "private_subnet_private_dns_hostname_type_on_launch": {
                                            "default": null,
                                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                        },
                                        "private_subnet_suffix": {
                                            "default": "private",
                                            "description": "Suffix to append to private subnets name"
                                        },
                                        "private_subnet_tags": {
                                            "default": {},
                                            "description": "Additional tags for the private subnets"
                                        },
                                        "private_subnet_tags_per_az": {
                                            "default": {},
                                            "description": "Additional tags for the private subnets where the primary key is the AZ"
                                        },
                                        "private_subnets": {
                                            "default": [],
                                            "description": "A list of private subnets inside the VPC"
                                        },
                                        "propagate_intra_route_tables_vgw": {
                                            "default": false,
                                            "description": "Should be true if you want route table propagation"
                                        },
                                        "propagate_private_route_tables_vgw": {
                                            "default": false,
                                            "description": "Should be true if you want route table propagation"
                                        },
                                        "propagate_public_route_tables_vgw": {
                                            "default": false,
                                            "description": "Should be true if you want route table propagation"
                                        },
                                        "public_acl_tags": {
                                            "default": {},
                                            "description": "Additional tags for the public subnets network ACL"
                                        },
                                        "public_dedicated_network_acl": {
                                            "default": false,
                                            "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
                                        },
                                        "public_inbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Public subnets inbound network ACLs"
                                        },
                                        "public_outbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Public subnets outbound network ACLs"
                                        },
                                        "public_route_table_tags": {
                                            "default": {},
                                            "description": "Additional tags for the public route tables"
                                        },
                                        "public_subnet_assign_ipv6_address_on_creation": {
                                            "default": false,
                                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                        },
                                        "public_subnet_enable_dns64": {
                                            "default": true,
                                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                        },
                                        "public_subnet_enable_resource_name_dns_a_record_on_launch": {
                                            "default": false,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                        },
                                        "public_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                            "default": true,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                        },
                                        "public_subnet_ipv6_native": {
                                            "default": false,
                                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                        },
                                        "public_subnet_ipv6_prefixes": {
                                            "default": [],
                                            "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                        },
                                        "public_subnet_names": {
                                            "default": [],
                                            "description": "Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated"
                                        },
                                        "public_subnet_private_dns_hostname_type_on_launch": {
                                            "default": null,
                                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                        },
                                        "public_subnet_suffix": {
                                            "default": "public",
                                            "description": "Suffix to append to public subnets name"
                                        },
                                        "public_subnet_tags": {
                                            "default": {},
                                            "description": "Additional tags for the public subnets"
                                        },
                                        "public_subnet_tags_per_az": {
                                            "default": {},
                                            "description": "Additional tags for the public subnets where the primary key is the AZ"
                                        },
                                        "public_subnets": {
                                            "default": [],
                                            "description": "A list of public subnets inside the VPC"
                                        },
                                        "putin_khuylo": {
                                            "default": true,
                                            "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                                        },
                                        "redshift_acl_tags": {
                                            "default": {},
                                            "description": "Additional tags for the redshift subnets network ACL"
                                        },
                                        "redshift_dedicated_network_acl": {
                                            "default": false,
                                            "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
                                        },
                                        "redshift_inbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Redshift subnets inbound network ACL rules"
                                        },
                                        "redshift_outbound_acl_rules": {
                                            "default": [
                                                {
                                                    "cidr_block": "0.0.0.0/0",
                                                    "from_port": "0",
                                                    "protocol": "-1",
                                                    "rule_action": "allow",
                                                    "rule_number": "100",
                                                    "to_port": "0"
                                                }
                                            ],
                                            "description": "Redshift subnets outbound network ACL rules"
                                        },
                                        "redshift_route_table_tags": {
                                            "default": {},
                                            "description": "Additional tags for the redshift route tables"
                                        },
                                        "redshift_subnet_assign_ipv6_address_on_creation": {
                                            "default": false,
                                            "description": "Specify true to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. Default is `false`"
                                        },
                                        "redshift_subnet_enable_dns64": {
                                            "default": true,
                                            "description": "Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `true`"
                                        },
                                        "redshift_subnet_enable_resource_name_dns_a_record_on_launch": {
                                            "default": false,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`"
                                        },
                                        "redshift_subnet_enable_resource_name_dns_aaaa_record_on_launch": {
                                            "default": true,
                                            "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `true`"
                                        },
                                        "redshift_subnet_group_name": {
                                            "default": null,
                                            "description": "Name of redshift subnet group"
                                        },
                                        "redshift_subnet_group_tags": {
                                            "default": {},
                                            "description": "Additional tags for the redshift subnet group"
                                        },
                                        "redshift_subnet_ipv6_native": {
                                            "default": false,
                                            "description": "Indicates whether to create an IPv6-only subnet. Default: `false`"
                                        },
                                        "redshift_subnet_ipv6_prefixes": {
                                            "default": [],
                                            "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
                                        },
                                        "redshift_subnet_names": {
                                            "default": [],
                                            "description": "Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated"
                                        },
                                        "redshift_subnet_private_dns_hostname_type_on_launch": {
                                            "default": null,
                                            "description": "The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`"
                                        },
                                        "redshift_subnet_suffix": {
                                            "default": "redshift",
                                            "description": "Suffix to append to redshift subnets name"
                                        },
                                        "redshift_subnet_tags": {
                                            "default": {},
                                            "description": "Additional tags for the redshift subnets"
                                        },
                                        "redshift_subnets": {
                                            "default": [],
                                            "description": "A list of redshift subnets inside the VPC"
                                        },
                                        "reuse_nat_ips": {
                                            "default": false,
                                            "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
                                        },
                                        "secondary_cidr_blocks": {
                                            "default": [],
                                            "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
                                        },
                                        "single_nat_gateway": {
                                            "default": false,
                                            "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A map of tags to add to all resources"
                                        },
                                        "use_ipam_pool": {
                                            "default": false,
                                            "description": "Determines whether IPAM pool is used for CIDR allocation"
                                        },
                                        "vpc_flow_log_iam_policy_name": {
                                            "default": "vpc-flow-log-to-cloudwatch",
                                            "description": "Name of the IAM policy"
                                        },
                                        "vpc_flow_log_iam_policy_use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether the name of the IAM policy (`vpc_flow_log_iam_policy_name`) is used as a prefix"
                                        },
                                        "vpc_flow_log_iam_role_name": {
                                            "default": "vpc-flow-log-role",
                                            "description": "Name to use on the VPC Flow Log IAM role created"
                                        },
                                        "vpc_flow_log_iam_role_use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether the IAM role name (`vpc_flow_log_iam_role_name_name`) is used as a prefix"
                                        },
                                        "vpc_flow_log_permissions_boundary": {
                                            "default": null,
                                            "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
                                        },
                                        "vpc_flow_log_tags": {
                                            "default": {},
                                            "description": "Additional tags for the VPC Flow Logs"
                                        },
                                        "vpc_tags": {
                                            "default": {},
                                            "description": "Additional tags for the VPC"
                                        },
                                        "vpn_gateway_az": {
                                            "default": null,
                                            "description": "The Availability Zone for the VPN Gateway"
                                        },
                                        "vpn_gateway_id": {
                                            "default": "",
                                            "description": "ID of VPN Gateway to attach to the VPC"
                                        },
                                        "vpn_gateway_tags": {
                                            "default": {},
                                            "description": "Additional tags for the VPN gateway"
                                        }
                                    }
                                },
                                "version_constraint": "~\u003e 5.2"
                            }
                        },
                        "variables": {
                            "private_subnets": {
                                "default": [
                                    "10.0.1.0/24",
                                    "10.0.2.0/24",
                                    "10.0.3.0/24"
                                ],
                                "description": "List of CIDR blocks for private subnets"
                            },
                            "project_group": {
                                "description": "The project group of the VPC"
                            },
                            "public_subnets": {
                                "default": [
                                    "10.0.101.0/24",
                                    "10.0.102.0/24",
                                    "10.0.103.0/24"
                                ],
                                "description": "List of CIDR blocks for public subnets"
                            },
                            "region": {
                                "description": "The region of the VPC"
                            },
                            "suffix_count": {
                                "default": 3,
                                "description": "The number of suffixes to generate for AZs"
                            },
                            "suffixes": {
                                "default": [
                                    "a",
                                    "b",
                                    "c"
                                ],
                                "description": "List of availability zone suffixes"
                            },
                            "vpc_cidr": {
                                "default": "10.0.0.0/16",
                                "description": "The CIDR block for the VPC"
                            },
                            "vpc_name": {
                                "description": "The name of the VPC"
                            }
                        }
                    }
                },
                "rds": {
                    "source": "./rds",
                    "expressions": {
                        "database_subnet_group": {
                            "references": [
                                "module.network.database_subnet_group",
                                "module.network"
                            ]
                        },
                        "db_engine_version": {
                            "constant_value": "14"
                        },
                        "db_family": {
                            "constant_value": "postgres14"
                        },
                        "db_identifier": {
                            "references": [
                                "var.environment"
                            ]
                        },
                        "db_name": {
                            "references": [
                                "var.environment"
                            ]
                        },
                        "db_username": {
                            "references": [
                                "var.project_name"
                            ]
                        },
                        "load_balancer_security_group": {
                            "references": [
                                "module.load_balancer.load_balancer_security_group",
                                "module.load_balancer"
                            ]
                        },
                        "project_group": {
                            "references": [
                                "var.project_group"
                            ]
                        },
                        "subnet_ids": {
                            "references": [
                                "module.network.private_subnets",
                                "module.network"
                            ]
                        },
                        "vpc_id": {
                            "references": [
                                "module.network.vpc_id",
                                "module.network"
                            ]
                        },
                        "vpc_security_group_ids": {
                            "references": [
                                "module.security_groups.rds_security_group_id",
                                "module.security_groups"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "db_endpoint": {
                                "expression": {
                                    "references": [
                                        "module.db.db_instance_endpoint",
                                        "module.db"
                                    ]
                                },
                                "description": "db writer endpoint"
                            },
                            "db_password": {
                                "expression": {
                                    "references": [
                                        "module.db.db_instance_password",
                                        "module.db"
                                    ]
                                },
                                "description": "The generated password of the RDS instance"
                            },
                            "db_port": {
                                "expression": {
                                    "references": [
                                        "module.db.db_instance_port",
                                        "module.db"
                                    ]
                                },
                                "description": "The port of the RDS instance"
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_db_instance.db_reader",
                                "mode": "managed",
                                "type": "aws_db_instance",
                                "name": "db_reader",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "allocated_storage": {
                                        "references": [
                                            "var.db_allocated_storage"
                                        ]
                                    },
                                    "db_name": {
                                        "references": [
                                            "var.db_name"
                                        ]
                                    },
                                    "db_subnet_group_name": {
                                        "references": [
                                            "var.database_subnet_group"
                                        ]
                                    },
                                    "engine": {
                                        "references": [
                                            "var.db_engine"
                                        ]
                                    },
                                    "engine_version": {
                                        "references": [
                                            "var.db_engine_version"
                                        ]
                                    },
                                    "identifier": {
                                        "references": [
                                            "var.db_identifier"
                                        ]
                                    },
                                    "instance_class": {
                                        "references": [
                                            "var.db_reader_instance_class"
                                        ]
                                    },
                                    "password": {
                                        "references": [
                                            "random_password.db_password.result",
                                            "random_password.db_password"
                                        ]
                                    },
                                    "port": {
                                        "references": [
                                            "var.db_port"
                                        ]
                                    },
                                    "replicate_source_db": {
                                        "references": [
                                            "module.db.db_instance_id",
                                            "module.db"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.db_identifier",
                                            "var.project_group"
                                        ]
                                    },
                                    "username": {
                                        "references": [
                                            "var.db_username"
                                        ]
                                    },
                                    "vpc_security_group_ids": {
                                        "references": [
                                            "var.vpc_security_group_ids"
                                        ]
                                    }
                                },
                                "schema_version": 2
                            },
                            {
                                "address": "local_file.db_password_file",
                                "mode": "managed",
                                "type": "local_file",
                                "name": "db_password_file",
                                "provider_config_key": "module.rds:local",
                                "expressions": {
                                    "content": {
                                        "references": [
                                            "random_password.db_password.result",
                                            "random_password.db_password"
                                        ]
                                    },
                                    "filename": {
                                        "references": [
                                            "path.module"
                                        ]
                                    }
                                },
                                "schema_version": 0
                            },
                            {
                                "address": "random_password.db_password",
                                "mode": "managed",
                                "type": "random_password",
                                "name": "db_password",
                                "provider_config_key": "module.rds:random",
                                "expressions": {
                                    "length": {
                                        "constant_value": 16
                                    },
                                    "override_special": {
                                        "constant_value": "_%@"
                                    },
                                    "special": {
                                        "constant_value": true
                                    }
                                },
                                "schema_version": 3
                            }
                        ],
                        "module_calls": {
                            "db": {
                                "source": "terraform-aws-modules/rds/aws",
                                "expressions": {
                                    "allocated_storage": {
                                        "references": [
                                            "var.db_allocated_storage"
                                        ]
                                    },
                                    "db_name": {
                                        "references": [
                                            "var.db_name"
                                        ]
                                    },
                                    "db_subnet_group_name": {
                                        "references": [
                                            "var.database_subnet_group"
                                        ]
                                    },
                                    "engine": {
                                        "references": [
                                            "var.db_engine"
                                        ]
                                    },
                                    "engine_version": {
                                        "references": [
                                            "var.db_engine_version"
                                        ]
                                    },
                                    "family": {
                                        "references": [
                                            "var.db_family"
                                        ]
                                    },
                                    "identifier": {
                                        "references": [
                                            "var.db_identifier"
                                        ]
                                    },
                                    "instance_class": {
                                        "references": [
                                            "var.db_instance_class"
                                        ]
                                    },
                                    "major_engine_version": {
                                        "references": [
                                            "var.db_engine_version"
                                        ]
                                    },
                                    "max_allocated_storage": {
                                        "references": [
                                            "var.db_max_allocated_storage"
                                        ]
                                    },
                                    "password": {
                                        "references": [
                                            "random_password.db_password.result",
                                            "random_password.db_password"
                                        ]
                                    },
                                    "port": {
                                        "references": [
                                            "var.db_port"
                                        ]
                                    },
                                    "skip_final_snapshot": {
                                        "constant_value": true
                                    },
                                    "subnet_ids": {
                                        "references": [
                                            "var.subnet_ids"
                                        ]
                                    },
                                    "tags": {
                                        "references": [
                                            "var.db_identifier",
                                            "var.project_group"
                                        ]
                                    },
                                    "username": {
                                        "references": [
                                            "var.db_username"
                                        ]
                                    },
                                    "vpc_security_group_ids": {
                                        "references": [
                                            "var.vpc_security_group_ids"
                                        ]
                                    }
                                },
                                "module": {
                                    "outputs": {
                                        "db_instance_address": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_address",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The address of the RDS instance"
                                        },
                                        "db_instance_arn": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_arn",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The ARN of the RDS instance"
                                        },
                                        "db_instance_availability_zone": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_availability_zone",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The availability zone of the RDS instance"
                                        },
                                        "db_instance_ca_cert_identifier": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_ca_cert_identifier",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "Specifies the identifier of the CA certificate for the DB instance"
                                        },
                                        "db_instance_cloudwatch_log_groups": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_cloudwatch_log_groups",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "Map of CloudWatch log groups created and their attributes"
                                        },
                                        "db_instance_domain": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_domain",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The ID of the Directory Service Active Directory domain the instance is joined to"
                                        },
                                        "db_instance_domain_iam_role_name": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_domain_iam_role_name",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The name of the IAM role to be used when making API calls to the Directory Service. "
                                        },
                                        "db_instance_endpoint": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_endpoint",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The connection endpoint"
                                        },
                                        "db_instance_engine": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_engine",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The database engine"
                                        },
                                        "db_instance_engine_version_actual": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_engine_version_actual",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The running version of the database"
                                        },
                                        "db_instance_hosted_zone_id": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_hosted_zone_id",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The canonical hosted zone ID of the DB instance (to be used in a Route 53 Alias record)"
                                        },
                                        "db_instance_id": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_id",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The RDS instance ID"
                                        },
                                        "db_instance_name": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_name",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The database name"
                                        },
                                        "db_instance_password": {
                                            "sensitive": true,
                                            "expression": {
                                                "references": [
                                                    "local.password"
                                                ]
                                            },
                                            "description": "The database password (this password may be old, because Terraform doesn't track it after initial creation)"
                                        },
                                        "db_instance_port": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_port",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The database port"
                                        },
                                        "db_instance_resource_id": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_resource_id",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The RDS Resource ID of this instance"
                                        },
                                        "db_instance_status": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_status",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The RDS instance status"
                                        },
                                        "db_instance_username": {
                                            "sensitive": true,
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_instance_username",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The master username for the database"
                                        },
                                        "db_listener_endpoint": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.db_listener_endpoint",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "Specifies the listener connection endpoint for SQL Server Always On"
                                        },
                                        "db_option_group_arn": {
                                            "expression": {
                                                "references": [
                                                    "module.db_option_group.db_option_group_arn",
                                                    "module.db_option_group"
                                                ]
                                            },
                                            "description": "The ARN of the db option group"
                                        },
                                        "db_option_group_id": {
                                            "expression": {
                                                "references": [
                                                    "module.db_option_group.db_option_group_id",
                                                    "module.db_option_group"
                                                ]
                                            },
                                            "description": "The db option group id"
                                        },
                                        "db_parameter_group_arn": {
                                            "expression": {
                                                "references": [
                                                    "module.db_parameter_group.db_parameter_group_arn",
                                                    "module.db_parameter_group"
                                                ]
                                            },
                                            "description": "The ARN of the db parameter group"
                                        },
                                        "db_parameter_group_id": {
                                            "expression": {
                                                "references": [
                                                    "module.db_parameter_group.db_parameter_group_id",
                                                    "module.db_parameter_group"
                                                ]
                                            },
                                            "description": "The db parameter group id"
                                        },
                                        "db_subnet_group_arn": {
                                            "expression": {
                                                "references": [
                                                    "module.db_subnet_group.db_subnet_group_arn",
                                                    "module.db_subnet_group"
                                                ]
                                            },
                                            "description": "The ARN of the db subnet group"
                                        },
                                        "db_subnet_group_id": {
                                            "expression": {
                                                "references": [
                                                    "module.db_subnet_group.db_subnet_group_id",
                                                    "module.db_subnet_group"
                                                ]
                                            },
                                            "description": "The db subnet group name"
                                        },
                                        "enhanced_monitoring_iam_role_arn": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.enhanced_monitoring_iam_role_arn",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The Amazon Resource Name (ARN) specifying the monitoring role"
                                        },
                                        "enhanced_monitoring_iam_role_name": {
                                            "expression": {
                                                "references": [
                                                    "module.db_instance.enhanced_monitoring_iam_role_name",
                                                    "module.db_instance"
                                                ]
                                            },
                                            "description": "The name of the monitoring role"
                                        }
                                    },
                                    "resources": [
                                        {
                                            "address": "random_password.master_password",
                                            "mode": "managed",
                                            "type": "random_password",
                                            "name": "master_password",
                                            "provider_config_key": "module.rds:random",
                                            "expressions": {
                                                "length": {
                                                    "references": [
                                                        "var.random_password_length"
                                                    ]
                                                },
                                                "special": {
                                                    "constant_value": false
                                                }
                                            },
                                            "schema_version": 3,
                                            "count_expression": {
                                                "references": [
                                                    "local.create_random_password"
                                                ]
                                            }
                                        }
                                    ],
                                    "module_calls": {
                                        "db_instance": {
                                            "source": "./modules/db_instance",
                                            "expressions": {
                                                "allocated_storage": {
                                                    "references": [
                                                        "var.allocated_storage"
                                                    ]
                                                },
                                                "allow_major_version_upgrade": {
                                                    "references": [
                                                        "var.allow_major_version_upgrade"
                                                    ]
                                                },
                                                "apply_immediately": {
                                                    "references": [
                                                        "var.apply_immediately"
                                                    ]
                                                },
                                                "auto_minor_version_upgrade": {
                                                    "references": [
                                                        "var.auto_minor_version_upgrade"
                                                    ]
                                                },
                                                "availability_zone": {
                                                    "references": [
                                                        "var.availability_zone"
                                                    ]
                                                },
                                                "backup_retention_period": {
                                                    "references": [
                                                        "var.backup_retention_period"
                                                    ]
                                                },
                                                "backup_window": {
                                                    "references": [
                                                        "var.backup_window"
                                                    ]
                                                },
                                                "blue_green_update": {
                                                    "references": [
                                                        "var.blue_green_update"
                                                    ]
                                                },
                                                "ca_cert_identifier": {
                                                    "references": [
                                                        "var.ca_cert_identifier"
                                                    ]
                                                },
                                                "character_set_name": {
                                                    "references": [
                                                        "var.character_set_name"
                                                    ]
                                                },
                                                "cloudwatch_log_group_kms_key_id": {
                                                    "references": [
                                                        "var.cloudwatch_log_group_kms_key_id"
                                                    ]
                                                },
                                                "cloudwatch_log_group_retention_in_days": {
                                                    "references": [
                                                        "var.cloudwatch_log_group_retention_in_days"
                                                    ]
                                                },
                                                "copy_tags_to_snapshot": {
                                                    "references": [
                                                        "var.copy_tags_to_snapshot"
                                                    ]
                                                },
                                                "create": {
                                                    "references": [
                                                        "local.create_db_instance"
                                                    ]
                                                },
                                                "create_cloudwatch_log_group": {
                                                    "references": [
                                                        "var.create_cloudwatch_log_group"
                                                    ]
                                                },
                                                "create_monitoring_role": {
                                                    "references": [
                                                        "var.create_monitoring_role"
                                                    ]
                                                },
                                                "custom_iam_instance_profile": {
                                                    "references": [
                                                        "var.custom_iam_instance_profile"
                                                    ]
                                                },
                                                "db_name": {
                                                    "references": [
                                                        "var.db_name"
                                                    ]
                                                },
                                                "db_subnet_group_name": {
                                                    "references": [
                                                        "local.db_subnet_group_name"
                                                    ]
                                                },
                                                "delete_automated_backups": {
                                                    "references": [
                                                        "var.delete_automated_backups"
                                                    ]
                                                },
                                                "deletion_protection": {
                                                    "references": [
                                                        "var.deletion_protection"
                                                    ]
                                                },
                                                "domain": {
                                                    "references": [
                                                        "var.domain"
                                                    ]
                                                },
                                                "domain_iam_role_name": {
                                                    "references": [
                                                        "var.domain_iam_role_name"
                                                    ]
                                                },
                                                "enabled_cloudwatch_logs_exports": {
                                                    "references": [
                                                        "var.enabled_cloudwatch_logs_exports"
                                                    ]
                                                },
                                                "engine": {
                                                    "references": [
                                                        "var.engine"
                                                    ]
                                                },
                                                "engine_version": {
                                                    "references": [
                                                        "var.engine_version"
                                                    ]
                                                },
                                                "final_snapshot_identifier_prefix": {
                                                    "references": [
                                                        "var.final_snapshot_identifier_prefix"
                                                    ]
                                                },
                                                "iam_database_authentication_enabled": {
                                                    "references": [
                                                        "var.iam_database_authentication_enabled"
                                                    ]
                                                },
                                                "identifier": {
                                                    "references": [
                                                        "var.identifier"
                                                    ]
                                                },
                                                "instance_class": {
                                                    "references": [
                                                        "var.instance_class"
                                                    ]
                                                },
                                                "iops": {
                                                    "references": [
                                                        "var.iops"
                                                    ]
                                                },
                                                "kms_key_id": {
                                                    "references": [
                                                        "var.kms_key_id"
                                                    ]
                                                },
                                                "license_model": {
                                                    "references": [
                                                        "var.license_model"
                                                    ]
                                                },
                                                "maintenance_window": {
                                                    "references": [
                                                        "var.maintenance_window"
                                                    ]
                                                },
                                                "max_allocated_storage": {
                                                    "references": [
                                                        "var.max_allocated_storage"
                                                    ]
                                                },
                                                "monitoring_interval": {
                                                    "references": [
                                                        "var.monitoring_interval"
                                                    ]
                                                },
                                                "monitoring_role_arn": {
                                                    "references": [
                                                        "var.monitoring_role_arn"
                                                    ]
                                                },
                                                "monitoring_role_description": {
                                                    "references": [
                                                        "var.monitoring_role_description"
                                                    ]
                                                },
                                                "monitoring_role_name": {
                                                    "references": [
                                                        "var.monitoring_role_name"
                                                    ]
                                                },
                                                "monitoring_role_permissions_boundary": {
                                                    "references": [
                                                        "var.monitoring_role_permissions_boundary"
                                                    ]
                                                },
                                                "monitoring_role_use_name_prefix": {
                                                    "references": [
                                                        "var.monitoring_role_use_name_prefix"
                                                    ]
                                                },
                                                "multi_az": {
                                                    "references": [
                                                        "var.multi_az"
                                                    ]
                                                },
                                                "nchar_character_set_name": {
                                                    "references": [
                                                        "var.nchar_character_set_name"
                                                    ]
                                                },
                                                "network_type": {
                                                    "references": [
                                                        "var.network_type"
                                                    ]
                                                },
                                                "option_group_name": {
                                                    "references": [
                                                        "var.engine",
                                                        "local.option_group"
                                                    ]
                                                },
                                                "parameter_group_name": {
                                                    "references": [
                                                        "local.parameter_group_name_id"
                                                    ]
                                                },
                                                "password": {
                                                    "references": [
                                                        "local.password"
                                                    ]
                                                },
                                                "performance_insights_enabled": {
                                                    "references": [
                                                        "var.performance_insights_enabled"
                                                    ]
                                                },
                                                "performance_insights_kms_key_id": {
                                                    "references": [
                                                        "var.performance_insights_enabled",
                                                        "var.performance_insights_kms_key_id"
                                                    ]
                                                },
                                                "performance_insights_retention_period": {
                                                    "references": [
                                                        "var.performance_insights_retention_period"
                                                    ]
                                                },
                                                "port": {
                                                    "references": [
                                                        "var.port"
                                                    ]
                                                },
                                                "publicly_accessible": {
                                                    "references": [
                                                        "var.publicly_accessible"
                                                    ]
                                                },
                                                "replica_mode": {
                                                    "references": [
                                                        "var.replica_mode"
                                                    ]
                                                },
                                                "replicate_source_db": {
                                                    "references": [
                                                        "var.replicate_source_db"
                                                    ]
                                                },
                                                "restore_to_point_in_time": {
                                                    "references": [
                                                        "var.restore_to_point_in_time"
                                                    ]
                                                },
                                                "s3_import": {
                                                    "references": [
                                                        "var.s3_import"
                                                    ]
                                                },
                                                "skip_final_snapshot": {
                                                    "references": [
                                                        "var.skip_final_snapshot"
                                                    ]
                                                },
                                                "snapshot_identifier": {
                                                    "references": [
                                                        "var.snapshot_identifier"
                                                    ]
                                                },
                                                "storage_encrypted": {
                                                    "references": [
                                                        "var.storage_encrypted"
                                                    ]
                                                },
                                                "storage_throughput": {
                                                    "references": [
                                                        "var.storage_throughput"
                                                    ]
                                                },
                                                "storage_type": {
                                                    "references": [
                                                        "var.storage_type"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.db_instance_tags"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "references": [
                                                        "var.timeouts"
                                                    ]
                                                },
                                                "timezone": {
                                                    "references": [
                                                        "var.timezone"
                                                    ]
                                                },
                                                "use_identifier_prefix": {
                                                    "references": [
                                                        "var.instance_use_identifier_prefix"
                                                    ]
                                                },
                                                "username": {
                                                    "references": [
                                                        "var.username"
                                                    ]
                                                },
                                                "vpc_security_group_ids": {
                                                    "references": [
                                                        "var.vpc_security_group_ids"
                                                    ]
                                                }
                                            },
                                            "module": {
                                                "outputs": {
                                                    "db_instance_address": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].address",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The address of the RDS instance"
                                                    },
                                                    "db_instance_arn": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].arn",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The ARN of the RDS instance"
                                                    },
                                                    "db_instance_availability_zone": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].availability_zone",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The availability zone of the RDS instance"
                                                    },
                                                    "db_instance_ca_cert_identifier": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].ca_cert_identifier",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "Specifies the identifier of the CA certificate for the DB instance"
                                                    },
                                                    "db_instance_cloudwatch_log_groups": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_cloudwatch_log_group.this"
                                                            ]
                                                        },
                                                        "description": "Map of CloudWatch log groups created and their attributes"
                                                    },
                                                    "db_instance_domain": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].domain",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The ID of the Directory Service Active Directory domain the instance is joined to"
                                                    },
                                                    "db_instance_domain_iam_role_name": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].domain_iam_role_name",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The name of the IAM role to be used when making API calls to the Directory Service. "
                                                    },
                                                    "db_instance_endpoint": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].endpoint",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The connection endpoint"
                                                    },
                                                    "db_instance_engine": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].engine",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The database engine"
                                                    },
                                                    "db_instance_engine_version_actual": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].engine_version_actual",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The running version of the database"
                                                    },
                                                    "db_instance_hosted_zone_id": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].hosted_zone_id",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The canonical hosted zone ID of the DB instance (to be used in a Route 53 Alias record)"
                                                    },
                                                    "db_instance_id": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].id",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The RDS instance ID"
                                                    },
                                                    "db_instance_name": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].db_name",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The database name"
                                                    },
                                                    "db_instance_password": {
                                                        "sensitive": true,
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].password",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The master password"
                                                    },
                                                    "db_instance_port": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].port",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The database port"
                                                    },
                                                    "db_instance_resource_id": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].resource_id",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The RDS Resource ID of this instance"
                                                    },
                                                    "db_instance_status": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].status",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The RDS instance status"
                                                    },
                                                    "db_instance_username": {
                                                        "sensitive": true,
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].username",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "The master username for the database"
                                                    },
                                                    "db_listener_endpoint": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_instance.this[0].listener_endpoint",
                                                                "aws_db_instance.this[0]",
                                                                "aws_db_instance.this"
                                                            ]
                                                        },
                                                        "description": "Specifies the listener connection endpoint for SQL Server Always On"
                                                    },
                                                    "enhanced_monitoring_iam_role_arn": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_iam_role.enhanced_monitoring[0].arn",
                                                                "aws_iam_role.enhanced_monitoring[0]",
                                                                "aws_iam_role.enhanced_monitoring"
                                                            ]
                                                        },
                                                        "description": "The Amazon Resource Name (ARN) specifying the monitoring role"
                                                    },
                                                    "enhanced_monitoring_iam_role_name": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_iam_role.enhanced_monitoring[0].name",
                                                                "aws_iam_role.enhanced_monitoring[0]",
                                                                "aws_iam_role.enhanced_monitoring"
                                                            ]
                                                        },
                                                        "description": "The name of the monitoring role"
                                                    }
                                                },
                                                "resources": [
                                                    {
                                                        "address": "aws_cloudwatch_log_group.this",
                                                        "mode": "managed",
                                                        "type": "aws_cloudwatch_log_group",
                                                        "name": "this",
                                                        "provider_config_key": "aws",
                                                        "expressions": {
                                                            "kms_key_id": {
                                                                "references": [
                                                                    "var.cloudwatch_log_group_kms_key_id"
                                                                ]
                                                            },
                                                            "name": {
                                                                "references": [
                                                                    "var.identifier",
                                                                    "each.value"
                                                                ]
                                                            },
                                                            "retention_in_days": {
                                                                "references": [
                                                                    "var.cloudwatch_log_group_retention_in_days"
                                                                ]
                                                            },
                                                            "tags": {
                                                                "references": [
                                                                    "var.tags"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "for_each_expression": {
                                                            "references": [
                                                                "var.enabled_cloudwatch_logs_exports",
                                                                "var.create",
                                                                "var.create_cloudwatch_log_group",
                                                                "var.use_identifier_prefix"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "aws_db_instance.this",
                                                        "mode": "managed",
                                                        "type": "aws_db_instance",
                                                        "name": "this",
                                                        "provider_config_key": "aws",
                                                        "expressions": {
                                                            "allocated_storage": {
                                                                "references": [
                                                                    "var.allocated_storage"
                                                                ]
                                                            },
                                                            "allow_major_version_upgrade": {
                                                                "references": [
                                                                    "var.allow_major_version_upgrade"
                                                                ]
                                                            },
                                                            "apply_immediately": {
                                                                "references": [
                                                                    "var.apply_immediately"
                                                                ]
                                                            },
                                                            "auto_minor_version_upgrade": {
                                                                "references": [
                                                                    "var.auto_minor_version_upgrade"
                                                                ]
                                                            },
                                                            "availability_zone": {
                                                                "references": [
                                                                    "var.availability_zone"
                                                                ]
                                                            },
                                                            "backup_retention_period": {
                                                                "references": [
                                                                    "var.blue_green_update",
                                                                    "var.backup_retention_period",
                                                                    "var.backup_retention_period"
                                                                ]
                                                            },
                                                            "backup_window": {
                                                                "references": [
                                                                    "var.backup_window"
                                                                ]
                                                            },
                                                            "ca_cert_identifier": {
                                                                "references": [
                                                                    "var.ca_cert_identifier"
                                                                ]
                                                            },
                                                            "character_set_name": {
                                                                "references": [
                                                                    "var.character_set_name"
                                                                ]
                                                            },
                                                            "copy_tags_to_snapshot": {
                                                                "references": [
                                                                    "var.copy_tags_to_snapshot"
                                                                ]
                                                            },
                                                            "custom_iam_instance_profile": {
                                                                "references": [
                                                                    "var.custom_iam_instance_profile"
                                                                ]
                                                            },
                                                            "db_name": {
                                                                "references": [
                                                                    "var.db_name"
                                                                ]
                                                            },
                                                            "db_subnet_group_name": {
                                                                "references": [
                                                                    "var.db_subnet_group_name"
                                                                ]
                                                            },
                                                            "delete_automated_backups": {
                                                                "references": [
                                                                    "var.delete_automated_backups"
                                                                ]
                                                            },
                                                            "deletion_protection": {
                                                                "references": [
                                                                    "var.deletion_protection"
                                                                ]
                                                            },
                                                            "domain": {
                                                                "references": [
                                                                    "var.domain"
                                                                ]
                                                            },
                                                            "domain_iam_role_name": {
                                                                "references": [
                                                                    "var.domain_iam_role_name"
                                                                ]
                                                            },
                                                            "enabled_cloudwatch_logs_exports": {
                                                                "references": [
                                                                    "var.enabled_cloudwatch_logs_exports"
                                                                ]
                                                            },
                                                            "engine": {
                                                                "references": [
                                                                    "local.engine"
                                                                ]
                                                            },
                                                            "engine_version": {
                                                                "references": [
                                                                    "var.engine_version"
                                                                ]
                                                            },
                                                            "final_snapshot_identifier": {
                                                                "references": [
                                                                    "local.final_snapshot_identifier"
                                                                ]
                                                            },
                                                            "iam_database_authentication_enabled": {
                                                                "references": [
                                                                    "var.iam_database_authentication_enabled"
                                                                ]
                                                            },
                                                            "identifier": {
                                                                "references": [
                                                                    "local.identifier"
                                                                ]
                                                            },
                                                            "identifier_prefix": {
                                                                "references": [
                                                                    "local.identifier_prefix"
                                                                ]
                                                            },
                                                            "instance_class": {
                                                                "references": [
                                                                    "var.instance_class"
                                                                ]
                                                            },
                                                            "iops": {
                                                                "references": [
                                                                    "var.iops"
                                                                ]
                                                            },
                                                            "kms_key_id": {
                                                                "references": [
                                                                    "var.kms_key_id"
                                                                ]
                                                            },
                                                            "license_model": {
                                                                "references": [
                                                                    "var.license_model"
                                                                ]
                                                            },
                                                            "maintenance_window": {
                                                                "references": [
                                                                    "var.maintenance_window"
                                                                ]
                                                            },
                                                            "max_allocated_storage": {
                                                                "references": [
                                                                    "var.max_allocated_storage"
                                                                ]
                                                            },
                                                            "monitoring_interval": {
                                                                "references": [
                                                                    "var.monitoring_interval"
                                                                ]
                                                            },
                                                            "monitoring_role_arn": {
                                                                "references": [
                                                                    "var.monitoring_interval",
                                                                    "local.monitoring_role_arn"
                                                                ]
                                                            },
                                                            "multi_az": {
                                                                "references": [
                                                                    "var.multi_az"
                                                                ]
                                                            },
                                                            "nchar_character_set_name": {
                                                                "references": [
                                                                    "var.nchar_character_set_name"
                                                                ]
                                                            },
                                                            "network_type": {
                                                                "references": [
                                                                    "var.network_type"
                                                                ]
                                                            },
                                                            "option_group_name": {
                                                                "references": [
                                                                    "var.option_group_name"
                                                                ]
                                                            },
                                                            "parameter_group_name": {
                                                                "references": [
                                                                    "var.parameter_group_name"
                                                                ]
                                                            },
                                                            "password": {
                                                                "references": [
                                                                    "local.password"
                                                                ]
                                                            },
                                                            "performance_insights_enabled": {
                                                                "references": [
                                                                    "var.performance_insights_enabled"
                                                                ]
                                                            },
                                                            "performance_insights_kms_key_id": {
                                                                "references": [
                                                                    "var.performance_insights_enabled",
                                                                    "var.performance_insights_kms_key_id"
                                                                ]
                                                            },
                                                            "performance_insights_retention_period": {
                                                                "references": [
                                                                    "var.performance_insights_enabled",
                                                                    "var.performance_insights_retention_period"
                                                                ]
                                                            },
                                                            "port": {
                                                                "references": [
                                                                    "var.port"
                                                                ]
                                                            },
                                                            "publicly_accessible": {
                                                                "references": [
                                                                    "var.publicly_accessible"
                                                                ]
                                                            },
                                                            "replica_mode": {
                                                                "references": [
                                                                    "var.replica_mode"
                                                                ]
                                                            },
                                                            "replicate_source_db": {
                                                                "references": [
                                                                    "var.replicate_source_db"
                                                                ]
                                                            },
                                                            "skip_final_snapshot": {
                                                                "references": [
                                                                    "var.skip_final_snapshot"
                                                                ]
                                                            },
                                                            "snapshot_identifier": {
                                                                "references": [
                                                                    "var.snapshot_identifier"
                                                                ]
                                                            },
                                                            "storage_encrypted": {
                                                                "references": [
                                                                    "var.storage_encrypted"
                                                                ]
                                                            },
                                                            "storage_throughput": {
                                                                "references": [
                                                                    "var.storage_throughput"
                                                                ]
                                                            },
                                                            "storage_type": {
                                                                "references": [
                                                                    "var.storage_type"
                                                                ]
                                                            },
                                                            "tags": {
                                                                "references": [
                                                                    "var.tags"
                                                                ]
                                                            },
                                                            "timeouts": {
                                                                "create": {
                                                                    "references": [
                                                                        "var.timeouts"
                                                                    ]
                                                                },
                                                                "delete": {
                                                                    "references": [
                                                                        "var.timeouts"
                                                                    ]
                                                                },
                                                                "update": {
                                                                    "references": [
                                                                        "var.timeouts"
                                                                    ]
                                                                }
                                                            },
                                                            "timezone": {
                                                                "references": [
                                                                    "var.timezone"
                                                                ]
                                                            },
                                                            "username": {
                                                                "references": [
                                                                    "local.username"
                                                                ]
                                                            },
                                                            "vpc_security_group_ids": {
                                                                "references": [
                                                                    "var.vpc_security_group_ids"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 2,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.create"
                                                            ]
                                                        },
                                                        "depends_on": [
                                                            "aws_cloudwatch_log_group.this"
                                                        ]
                                                    },
                                                    {
                                                        "address": "aws_iam_role.enhanced_monitoring",
                                                        "mode": "managed",
                                                        "type": "aws_iam_role",
                                                        "name": "enhanced_monitoring",
                                                        "provider_config_key": "aws",
                                                        "expressions": {
                                                            "assume_role_policy": {
                                                                "references": [
                                                                    "data.aws_iam_policy_document.enhanced_monitoring.json",
                                                                    "data.aws_iam_policy_document.enhanced_monitoring"
                                                                ]
                                                            },
                                                            "description": {
                                                                "references": [
                                                                    "var.monitoring_role_description"
                                                                ]
                                                            },
                                                            "name": {
                                                                "references": [
                                                                    "local.monitoring_role_name"
                                                                ]
                                                            },
                                                            "name_prefix": {
                                                                "references": [
                                                                    "local.monitoring_role_name_prefix"
                                                                ]
                                                            },
                                                            "permissions_boundary": {
                                                                "references": [
                                                                    "var.monitoring_role_permissions_boundary"
                                                                ]
                                                            },
                                                            "tags": {
                                                                "references": [
                                                                    "var.monitoring_role_name",
                                                                    "var.tags"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.create_monitoring_role"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "aws_iam_role_policy_attachment.enhanced_monitoring",
                                                        "mode": "managed",
                                                        "type": "aws_iam_role_policy_attachment",
                                                        "name": "enhanced_monitoring",
                                                        "provider_config_key": "aws",
                                                        "expressions": {
                                                            "policy_arn": {
                                                                "references": [
                                                                    "data.aws_partition.current.partition",
                                                                    "data.aws_partition.current"
                                                                ]
                                                            },
                                                            "role": {
                                                                "references": [
                                                                    "aws_iam_role.enhanced_monitoring[0].name",
                                                                    "aws_iam_role.enhanced_monitoring[0]",
                                                                    "aws_iam_role.enhanced_monitoring"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.create_monitoring_role"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "random_id.snapshot_identifier",
                                                        "mode": "managed",
                                                        "type": "random_id",
                                                        "name": "snapshot_identifier",
                                                        "provider_config_key": "module.rds:random",
                                                        "expressions": {
                                                            "byte_length": {
                                                                "constant_value": 4
                                                            },
                                                            "keepers": {
                                                                "references": [
                                                                    "var.identifier"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.create",
                                                                "var.skip_final_snapshot"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "address": "data.aws_iam_policy_document.enhanced_monitoring",
                                                        "mode": "data",
                                                        "type": "aws_iam_policy_document",
                                                        "name": "enhanced_monitoring",
                                                        "provider_config_key": "aws",
                                                        "expressions": {
                                                            "statement": [
                                                                {
                                                                    "actions": {
                                                                        "constant_value": [
                                                                            "sts:AssumeRole"
                                                                        ]
                                                                    },
                                                                    "principals": [
                                                                        {
                                                                            "identifiers": {
                                                                                "constant_value": [
                                                                                    "monitoring.rds.amazonaws.com"
                                                                                ]
                                                                            },
                                                                            "type": {
                                                                                "constant_value": "Service"
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "schema_version": 0
                                                    },
                                                    {
                                                        "address": "data.aws_partition.current",
                                                        "mode": "data",
                                                        "type": "aws_partition",
                                                        "name": "current",
                                                        "provider_config_key": "aws",
                                                        "schema_version": 0
                                                    }
                                                ],
                                                "variables": {
                                                    "allocated_storage": {
                                                        "default": null,
                                                        "description": "The allocated storage in gigabytes"
                                                    },
                                                    "allow_major_version_upgrade": {
                                                        "default": false,
                                                        "description": "Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible"
                                                    },
                                                    "apply_immediately": {
                                                        "default": false,
                                                        "description": "Specifies whether any database modifications are applied immediately, or during the next maintenance window"
                                                    },
                                                    "auto_minor_version_upgrade": {
                                                        "default": true,
                                                        "description": "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window"
                                                    },
                                                    "availability_zone": {
                                                        "default": null,
                                                        "description": "The Availability Zone of the RDS instance"
                                                    },
                                                    "backup_retention_period": {
                                                        "default": null,
                                                        "description": "The days to retain backups for"
                                                    },
                                                    "backup_window": {
                                                        "default": null,
                                                        "description": "The daily time range (in UTC) during which automated backups are created if they are enabled. Example: '09:46-10:16'. Must not overlap with maintenance_window"
                                                    },
                                                    "blue_green_update": {
                                                        "default": {},
                                                        "description": "Enables low-downtime updates using RDS Blue/Green deployments."
                                                    },
                                                    "ca_cert_identifier": {
                                                        "default": null,
                                                        "description": "Specifies the identifier of the CA certificate for the DB instance"
                                                    },
                                                    "character_set_name": {
                                                        "default": null,
                                                        "description": "The character set name to use for DB encoding in Oracle instances. This can't be changed. See Oracle Character Sets Supported in Amazon RDS and Collations and Character Sets for Microsoft SQL Server for more information. This can only be set on creation."
                                                    },
                                                    "cloudwatch_log_group_kms_key_id": {
                                                        "default": null,
                                                        "description": "The ARN of the KMS Key to use when encrypting log data"
                                                    },
                                                    "cloudwatch_log_group_retention_in_days": {
                                                        "default": 7,
                                                        "description": "The number of days to retain CloudWatch logs for the DB instance"
                                                    },
                                                    "copy_tags_to_snapshot": {
                                                        "default": false,
                                                        "description": "On delete, copy all Instance tags to the final snapshot"
                                                    },
                                                    "create": {
                                                        "default": true,
                                                        "description": "Whether to create this resource or not?"
                                                    },
                                                    "create_cloudwatch_log_group": {
                                                        "default": false,
                                                        "description": "Determines whether a CloudWatch log group is created for each `enabled_cloudwatch_logs_exports`"
                                                    },
                                                    "create_monitoring_role": {
                                                        "default": false,
                                                        "description": "Create IAM role with a defined name that permits RDS to send enhanced monitoring metrics to CloudWatch Logs."
                                                    },
                                                    "custom_iam_instance_profile": {
                                                        "default": null,
                                                        "description": "RDS custom iam instance profile"
                                                    },
                                                    "db_name": {
                                                        "default": null,
                                                        "description": "The DB name to create. If omitted, no database is created initially"
                                                    },
                                                    "db_subnet_group_name": {
                                                        "default": null,
                                                        "description": "Name of DB subnet group. DB instance will be created in the VPC associated with the DB subnet group. If unspecified, will be created in the default VPC"
                                                    },
                                                    "delete_automated_backups": {
                                                        "default": true,
                                                        "description": "Specifies whether to remove automated backups immediately after the DB instance is deleted"
                                                    },
                                                    "deletion_protection": {
                                                        "default": false,
                                                        "description": "The database can't be deleted when this value is set to true."
                                                    },
                                                    "domain": {
                                                        "default": null,
                                                        "description": "The ID of the Directory Service Active Directory domain to create the instance in"
                                                    },
                                                    "domain_iam_role_name": {
                                                        "default": null,
                                                        "description": "(Required if domain is provided) The name of the IAM role to be used when making API calls to the Directory Service"
                                                    },
                                                    "enabled_cloudwatch_logs_exports": {
                                                        "default": [],
                                                        "description": "List of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on engine): alert, audit, error, general, listener, slowquery, trace, postgresql (PostgreSQL), upgrade (PostgreSQL)."
                                                    },
                                                    "engine": {
                                                        "default": null,
                                                        "description": "The database engine to use"
                                                    },
                                                    "engine_version": {
                                                        "default": null,
                                                        "description": "The engine version to use"
                                                    },
                                                    "final_snapshot_identifier_prefix": {
                                                        "default": "final",
                                                        "description": "The name which is prefixed to the final snapshot on cluster destroy"
                                                    },
                                                    "iam_database_authentication_enabled": {
                                                        "default": false,
                                                        "description": "Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled"
                                                    },
                                                    "identifier": {
                                                        "description": "The name of the RDS instance"
                                                    },
                                                    "instance_class": {
                                                        "default": null,
                                                        "description": "The instance type of the RDS instance"
                                                    },
                                                    "iops": {
                                                        "default": null,
                                                        "description": "The amount of provisioned IOPS. Setting this implies a storage_type of 'io1' or `gp3`. See `notes` for limitations regarding this variable for `gp3`"
                                                    },
                                                    "kms_key_id": {
                                                        "default": null,
                                                        "description": "The ARN for the KMS encryption key. If creating an encrypted replica, set this to the destination KMS ARN. If storage_encrypted is set to true and kms_key_id is not specified the default KMS key created in your account will be used"
                                                    },
                                                    "license_model": {
                                                        "default": null,
                                                        "description": "License model information for this DB instance. Optional, but required for some DB engines, i.e. Oracle SE1"
                                                    },
                                                    "maintenance_window": {
                                                        "default": null,
                                                        "description": "The window to perform maintenance in. Syntax: 'ddd:hh24:mi-ddd:hh24:mi'. Eg: 'Mon:00:00-Mon:03:00'"
                                                    },
                                                    "max_allocated_storage": {
                                                        "default": 0,
                                                        "description": "Specifies the value for Storage Autoscaling"
                                                    },
                                                    "monitoring_interval": {
                                                        "default": 0,
                                                        "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60."
                                                    },
                                                    "monitoring_role_arn": {
                                                        "default": null,
                                                        "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. Must be specified if monitoring_interval is non-zero."
                                                    },
                                                    "monitoring_role_description": {
                                                        "default": null,
                                                        "description": "Description of the monitoring IAM role"
                                                    },
                                                    "monitoring_role_name": {
                                                        "default": "rds-monitoring-role",
                                                        "description": "Name of the IAM role which will be created when create_monitoring_role is enabled."
                                                    },
                                                    "monitoring_role_permissions_boundary": {
                                                        "default": null,
                                                        "description": "ARN of the policy that is used to set the permissions boundary for the monitoring IAM role"
                                                    },
                                                    "monitoring_role_use_name_prefix": {
                                                        "default": false,
                                                        "description": "Determines whether to use `monitoring_role_name` as is or create a unique identifier beginning with `monitoring_role_name` as the specified prefix"
                                                    },
                                                    "multi_az": {
                                                        "default": false,
                                                        "description": "Specifies if the RDS instance is multi-AZ"
                                                    },
                                                    "nchar_character_set_name": {
                                                        "default": null,
                                                        "description": "The national character set is used in the NCHAR, NVARCHAR2, and NCLOB data types for Oracle instances. This can't be changed."
                                                    },
                                                    "network_type": {
                                                        "default": null,
                                                        "description": "The type of network stack"
                                                    },
                                                    "option_group_name": {
                                                        "default": null,
                                                        "description": "Name of the DB option group to associate."
                                                    },
                                                    "parameter_group_name": {
                                                        "default": null,
                                                        "description": "Name of the DB parameter group to associate"
                                                    },
                                                    "password": {
                                                        "default": null,
                                                        "description": "Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file"
                                                    },
                                                    "performance_insights_enabled": {
                                                        "default": false,
                                                        "description": "Specifies whether Performance Insights are enabled"
                                                    },
                                                    "performance_insights_kms_key_id": {
                                                        "default": null,
                                                        "description": "The ARN for the KMS key to encrypt Performance Insights data."
                                                    },
                                                    "performance_insights_retention_period": {
                                                        "default": 7,
                                                        "description": "The amount of time in days to retain Performance Insights data. Either 7 (7 days) or 731 (2 years)."
                                                    },
                                                    "port": {
                                                        "default": null,
                                                        "description": "The port on which the DB accepts connections"
                                                    },
                                                    "publicly_accessible": {
                                                        "default": false,
                                                        "description": "Bool to control if instance is publicly accessible"
                                                    },
                                                    "replica_mode": {
                                                        "default": null,
                                                        "description": "Specifies whether the replica is in either mounted or open-read-only mode. This attribute is only supported by Oracle instances. Oracle replicas operate in open-read-only mode unless otherwise specified"
                                                    },
                                                    "replicate_source_db": {
                                                        "default": null,
                                                        "description": "Specifies that this resource is a Replicate database, and to use this value as the source database. This correlates to the identifier of another Amazon RDS Database to replicate."
                                                    },
                                                    "restore_to_point_in_time": {
                                                        "default": null,
                                                        "description": "Restore to a point in time (MySQL is NOT supported)"
                                                    },
                                                    "s3_import": {
                                                        "default": null,
                                                        "description": "Restore from a Percona Xtrabackup in S3 (only MySQL is supported)"
                                                    },
                                                    "skip_final_snapshot": {
                                                        "default": false,
                                                        "description": "Determines whether a final DB snapshot is created before the DB instance is deleted. If true is specified, no DBSnapshot is created. If false is specified, a DB snapshot is created before the DB instance is deleted"
                                                    },
                                                    "snapshot_identifier": {
                                                        "default": null,
                                                        "description": "Specifies whether or not to create this database from a snapshot. This correlates to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05."
                                                    },
                                                    "storage_encrypted": {
                                                        "default": true,
                                                        "description": "Specifies whether the DB instance is encrypted"
                                                    },
                                                    "storage_throughput": {
                                                        "default": null,
                                                        "description": "Storage throughput value for the DB instance. This setting applies only to the `gp3` storage type. See `notes` for limitations regarding this variable for `gp3`"
                                                    },
                                                    "storage_type": {
                                                        "default": null,
                                                        "description": "One of 'standard' (magnetic), 'gp2' (general purpose SSD), 'gp3' (new generation of general purpose SSD), or 'io1' (provisioned IOPS SSD). The default is 'io1' if iops is specified, 'gp2' if not. If you specify 'io1' or 'gp3' , you must also include a value for the 'iops' parameter"
                                                    },
                                                    "tags": {
                                                        "default": {},
                                                        "description": "A mapping of tags to assign to all resources"
                                                    },
                                                    "timeouts": {
                                                        "default": {},
                                                        "description": "Updated Terraform resource management timeouts. Applies to `aws_db_instance` in particular to permit resource management times"
                                                    },
                                                    "timezone": {
                                                        "default": null,
                                                        "description": "Time zone of the DB instance. timezone is currently only supported by Microsoft SQL Server. The timezone can only be set on creation. See MSSQL User Guide for more information."
                                                    },
                                                    "use_identifier_prefix": {
                                                        "default": false,
                                                        "description": "Determines whether to use `identifier` as is or create a unique identifier beginning with `identifier` as the specified prefix"
                                                    },
                                                    "username": {
                                                        "default": null,
                                                        "description": "Username for the master DB user"
                                                    },
                                                    "vpc_security_group_ids": {
                                                        "default": [],
                                                        "description": "List of VPC security groups to associate"
                                                    }
                                                }
                                            }
                                        },
                                        "db_option_group": {
                                            "source": "./modules/db_option_group",
                                            "expressions": {
                                                "create": {
                                                    "references": [
                                                        "local.create_db_option_group"
                                                    ]
                                                },
                                                "engine_name": {
                                                    "references": [
                                                        "var.engine"
                                                    ]
                                                },
                                                "major_engine_version": {
                                                    "references": [
                                                        "var.major_engine_version"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.option_group_name",
                                                        "var.identifier"
                                                    ]
                                                },
                                                "option_group_description": {
                                                    "references": [
                                                        "var.option_group_description"
                                                    ]
                                                },
                                                "options": {
                                                    "references": [
                                                        "var.options"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.db_option_group_tags"
                                                    ]
                                                },
                                                "timeouts": {
                                                    "references": [
                                                        "var.option_group_timeouts"
                                                    ]
                                                },
                                                "use_name_prefix": {
                                                    "references": [
                                                        "var.option_group_use_name_prefix"
                                                    ]
                                                }
                                            },
                                            "module": {
                                                "outputs": {
                                                    "db_option_group_arn": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_option_group.this[0].arn",
                                                                "aws_db_option_group.this[0]",
                                                                "aws_db_option_group.this"
                                                            ]
                                                        },
                                                        "description": "The ARN of the db option group"
                                                    },
                                                    "db_option_group_id": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_option_group.this[0].id",
                                                                "aws_db_option_group.this[0]",
                                                                "aws_db_option_group.this"
                                                            ]
                                                        },
                                                        "description": "The db option group id"
                                                    }
                                                },
                                                "resources": [
                                                    {
                                                        "address": "aws_db_option_group.this",
                                                        "mode": "managed",
                                                        "type": "aws_db_option_group",
                                                        "name": "this",
                                                        "provider_config_key": "aws",
                                                        "expressions": {
                                                            "engine_name": {
                                                                "references": [
                                                                    "var.engine_name"
                                                                ]
                                                            },
                                                            "major_engine_version": {
                                                                "references": [
                                                                    "var.major_engine_version"
                                                                ]
                                                            },
                                                            "name": {
                                                                "references": [
                                                                    "local.name"
                                                                ]
                                                            },
                                                            "name_prefix": {
                                                                "references": [
                                                                    "local.name_prefix"
                                                                ]
                                                            },
                                                            "option_group_description": {
                                                                "references": [
                                                                    "local.description"
                                                                ]
                                                            },
                                                            "tags": {
                                                                "references": [
                                                                    "var.tags",
                                                                    "var.name"
                                                                ]
                                                            },
                                                            "timeouts": {
                                                                "delete": {
                                                                    "references": [
                                                                        "var.timeouts"
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.create"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "variables": {
                                                    "create": {
                                                        "default": true,
                                                        "description": "Whether to create this resource or not?"
                                                    },
                                                    "engine_name": {
                                                        "default": null,
                                                        "description": "Specifies the name of the engine that this option group should be associated with"
                                                    },
                                                    "major_engine_version": {
                                                        "default": null,
                                                        "description": "Specifies the major version of the engine that this option group should be associated with"
                                                    },
                                                    "name": {
                                                        "default": "",
                                                        "description": "The name of the option group"
                                                    },
                                                    "option_group_description": {
                                                        "default": null,
                                                        "description": "The description of the option group"
                                                    },
                                                    "options": {
                                                        "default": [],
                                                        "description": "A list of Options to apply"
                                                    },
                                                    "tags": {
                                                        "default": {},
                                                        "description": "A mapping of tags to assign to the resource"
                                                    },
                                                    "timeouts": {
                                                        "default": {},
                                                        "description": "Define maximum timeout for deletion of `aws_db_option_group` resource"
                                                    },
                                                    "use_name_prefix": {
                                                        "default": true,
                                                        "description": "Determines whether to use `name` as is or create a unique name beginning with `name` as the specified prefix"
                                                    }
                                                }
                                            }
                                        },
                                        "db_parameter_group": {
                                            "source": "./modules/db_parameter_group",
                                            "expressions": {
                                                "create": {
                                                    "references": [
                                                        "local.create_db_parameter_group"
                                                    ]
                                                },
                                                "description": {
                                                    "references": [
                                                        "var.parameter_group_description"
                                                    ]
                                                },
                                                "family": {
                                                    "references": [
                                                        "var.family"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.parameter_group_name",
                                                        "var.identifier"
                                                    ]
                                                },
                                                "parameters": {
                                                    "references": [
                                                        "var.parameters"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.db_parameter_group_tags"
                                                    ]
                                                },
                                                "use_name_prefix": {
                                                    "references": [
                                                        "var.parameter_group_use_name_prefix"
                                                    ]
                                                }
                                            },
                                            "module": {
                                                "outputs": {
                                                    "db_parameter_group_arn": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_parameter_group.this[0].arn",
                                                                "aws_db_parameter_group.this[0]",
                                                                "aws_db_parameter_group.this"
                                                            ]
                                                        },
                                                        "description": "The ARN of the db parameter group"
                                                    },
                                                    "db_parameter_group_id": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_parameter_group.this[0].id",
                                                                "aws_db_parameter_group.this[0]",
                                                                "aws_db_parameter_group.this"
                                                            ]
                                                        },
                                                        "description": "The db parameter group id"
                                                    }
                                                },
                                                "resources": [
                                                    {
                                                        "address": "aws_db_parameter_group.this",
                                                        "mode": "managed",
                                                        "type": "aws_db_parameter_group",
                                                        "name": "this",
                                                        "provider_config_key": "aws",
                                                        "expressions": {
                                                            "description": {
                                                                "references": [
                                                                    "local.description"
                                                                ]
                                                            },
                                                            "family": {
                                                                "references": [
                                                                    "var.family"
                                                                ]
                                                            },
                                                            "name": {
                                                                "references": [
                                                                    "local.name"
                                                                ]
                                                            },
                                                            "name_prefix": {
                                                                "references": [
                                                                    "local.name_prefix"
                                                                ]
                                                            },
                                                            "tags": {
                                                                "references": [
                                                                    "var.tags",
                                                                    "var.name"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.create"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "variables": {
                                                    "create": {
                                                        "default": true,
                                                        "description": "Whether to create this resource or not?"
                                                    },
                                                    "description": {
                                                        "default": null,
                                                        "description": "The description of the DB parameter group"
                                                    },
                                                    "family": {
                                                        "default": null,
                                                        "description": "The family of the DB parameter group"
                                                    },
                                                    "name": {
                                                        "default": "",
                                                        "description": "The name of the DB parameter group"
                                                    },
                                                    "parameters": {
                                                        "default": [],
                                                        "description": "A list of DB parameter maps to apply"
                                                    },
                                                    "tags": {
                                                        "default": {},
                                                        "description": "A mapping of tags to assign to the resource"
                                                    },
                                                    "use_name_prefix": {
                                                        "default": true,
                                                        "description": "Determines whether to use `name` as is or create a unique name beginning with `name` as the specified prefix"
                                                    }
                                                }
                                            }
                                        },
                                        "db_subnet_group": {
                                            "source": "./modules/db_subnet_group",
                                            "expressions": {
                                                "create": {
                                                    "references": [
                                                        "local.create_db_subnet_group"
                                                    ]
                                                },
                                                "description": {
                                                    "references": [
                                                        "var.db_subnet_group_description"
                                                    ]
                                                },
                                                "name": {
                                                    "references": [
                                                        "var.db_subnet_group_name",
                                                        "var.identifier"
                                                    ]
                                                },
                                                "subnet_ids": {
                                                    "references": [
                                                        "var.subnet_ids"
                                                    ]
                                                },
                                                "tags": {
                                                    "references": [
                                                        "var.tags",
                                                        "var.db_subnet_group_tags"
                                                    ]
                                                },
                                                "use_name_prefix": {
                                                    "references": [
                                                        "var.db_subnet_group_use_name_prefix"
                                                    ]
                                                }
                                            },
                                            "module": {
                                                "outputs": {
                                                    "db_subnet_group_arn": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_subnet_group.this[0].arn",
                                                                "aws_db_subnet_group.this[0]",
                                                                "aws_db_subnet_group.this"
                                                            ]
                                                        },
                                                        "description": "The ARN of the db subnet group"
                                                    },
                                                    "db_subnet_group_id": {
                                                        "expression": {
                                                            "references": [
                                                                "aws_db_subnet_group.this[0].id",
                                                                "aws_db_subnet_group.this[0]",
                                                                "aws_db_subnet_group.this"
                                                            ]
                                                        },
                                                        "description": "The db subnet group name"
                                                    }
                                                },
                                                "resources": [
                                                    {
                                                        "address": "aws_db_subnet_group.this",
                                                        "mode": "managed",
                                                        "type": "aws_db_subnet_group",
                                                        "name": "this",
                                                        "provider_config_key": "aws",
                                                        "expressions": {
                                                            "description": {
                                                                "references": [
                                                                    "local.description"
                                                                ]
                                                            },
                                                            "name": {
                                                                "references": [
                                                                    "local.name"
                                                                ]
                                                            },
                                                            "name_prefix": {
                                                                "references": [
                                                                    "local.name_prefix"
                                                                ]
                                                            },
                                                            "subnet_ids": {
                                                                "references": [
                                                                    "var.subnet_ids"
                                                                ]
                                                            },
                                                            "tags": {
                                                                "references": [
                                                                    "var.tags",
                                                                    "var.name"
                                                                ]
                                                            }
                                                        },
                                                        "schema_version": 0,
                                                        "count_expression": {
                                                            "references": [
                                                                "var.create"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "variables": {
                                                    "create": {
                                                        "default": true,
                                                        "description": "Whether to create this resource or not?"
                                                    },
                                                    "description": {
                                                        "default": null,
                                                        "description": "The description of the DB subnet group"
                                                    },
                                                    "name": {
                                                        "default": "",
                                                        "description": "The name of the DB subnet group"
                                                    },
                                                    "subnet_ids": {
                                                        "default": [],
                                                        "description": "A list of VPC subnet IDs"
                                                    },
                                                    "tags": {
                                                        "default": {},
                                                        "description": "A mapping of tags to assign to the resource"
                                                    },
                                                    "use_name_prefix": {
                                                        "default": true,
                                                        "description": "Determines whether to use `name` as is or create a unique name beginning with `name` as the specified prefix"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "variables": {
                                        "allocated_storage": {
                                            "default": null,
                                            "description": "The allocated storage in gigabytes"
                                        },
                                        "allow_major_version_upgrade": {
                                            "default": false,
                                            "description": "Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible"
                                        },
                                        "apply_immediately": {
                                            "default": false,
                                            "description": "Specifies whether any database modifications are applied immediately, or during the next maintenance window"
                                        },
                                        "auto_minor_version_upgrade": {
                                            "default": true,
                                            "description": "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window"
                                        },
                                        "availability_zone": {
                                            "default": null,
                                            "description": "The Availability Zone of the RDS instance"
                                        },
                                        "backup_retention_period": {
                                            "default": null,
                                            "description": "The days to retain backups for"
                                        },
                                        "backup_window": {
                                            "default": null,
                                            "description": "The daily time range (in UTC) during which automated backups are created if they are enabled. Example: '09:46-10:16'. Must not overlap with maintenance_window"
                                        },
                                        "blue_green_update": {
                                            "default": {},
                                            "description": "Enables low-downtime updates using RDS Blue/Green deployments."
                                        },
                                        "ca_cert_identifier": {
                                            "default": null,
                                            "description": "Specifies the identifier of the CA certificate for the DB instance"
                                        },
                                        "character_set_name": {
                                            "default": null,
                                            "description": "The character set name to use for DB encoding in Oracle instances. This can't be changed. See Oracle Character Sets Supported in Amazon RDS and Collations and Character Sets for Microsoft SQL Server for more information. This can only be set on creation"
                                        },
                                        "cloudwatch_log_group_kms_key_id": {
                                            "default": null,
                                            "description": "The ARN of the KMS Key to use when encrypting log data"
                                        },
                                        "cloudwatch_log_group_retention_in_days": {
                                            "default": 7,
                                            "description": "The number of days to retain CloudWatch logs for the DB instance"
                                        },
                                        "copy_tags_to_snapshot": {
                                            "default": false,
                                            "description": "On delete, copy all Instance tags to the final snapshot"
                                        },
                                        "create_cloudwatch_log_group": {
                                            "default": false,
                                            "description": "Determines whether a CloudWatch log group is created for each `enabled_cloudwatch_logs_exports`"
                                        },
                                        "create_db_instance": {
                                            "default": true,
                                            "description": "Whether to create a database instance"
                                        },
                                        "create_db_option_group": {
                                            "default": true,
                                            "description": "Create a database option group"
                                        },
                                        "create_db_parameter_group": {
                                            "default": true,
                                            "description": "Whether to create a database parameter group"
                                        },
                                        "create_db_subnet_group": {
                                            "default": false,
                                            "description": "Whether to create a database subnet group"
                                        },
                                        "create_monitoring_role": {
                                            "default": false,
                                            "description": "Create IAM role with a defined name that permits RDS to send enhanced monitoring metrics to CloudWatch Logs"
                                        },
                                        "create_random_password": {
                                            "default": true,
                                            "description": "Whether to create random password for RDS primary cluster"
                                        },
                                        "custom_iam_instance_profile": {
                                            "default": null,
                                            "description": "RDS custom iam instance profile"
                                        },
                                        "db_instance_tags": {
                                            "default": {},
                                            "description": "Additional tags for the DB instance"
                                        },
                                        "db_name": {
                                            "default": null,
                                            "description": "The DB name to create. If omitted, no database is created initially"
                                        },
                                        "db_option_group_tags": {
                                            "default": {},
                                            "description": "Additional tags for the DB option group"
                                        },
                                        "db_parameter_group_tags": {
                                            "default": {},
                                            "description": "Additional tags for the  DB parameter group"
                                        },
                                        "db_subnet_group_description": {
                                            "default": null,
                                            "description": "Description of the DB subnet group to create"
                                        },
                                        "db_subnet_group_name": {
                                            "default": null,
                                            "description": "Name of DB subnet group. DB instance will be created in the VPC associated with the DB subnet group. If unspecified, will be created in the default VPC"
                                        },
                                        "db_subnet_group_tags": {
                                            "default": {},
                                            "description": "Additional tags for the DB subnet group"
                                        },
                                        "db_subnet_group_use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether to use `subnet_group_name` as is or create a unique name beginning with the `subnet_group_name` as the prefix"
                                        },
                                        "delete_automated_backups": {
                                            "default": true,
                                            "description": "Specifies whether to remove automated backups immediately after the DB instance is deleted"
                                        },
                                        "deletion_protection": {
                                            "default": false,
                                            "description": "The database can't be deleted when this value is set to true"
                                        },
                                        "domain": {
                                            "default": null,
                                            "description": "The ID of the Directory Service Active Directory domain to create the instance in"
                                        },
                                        "domain_iam_role_name": {
                                            "default": null,
                                            "description": "(Required if domain is provided) The name of the IAM role to be used when making API calls to the Directory Service"
                                        },
                                        "enabled_cloudwatch_logs_exports": {
                                            "default": [],
                                            "description": "List of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on engine): alert, audit, error, general, listener, slowquery, trace, postgresql (PostgreSQL), upgrade (PostgreSQL)"
                                        },
                                        "engine": {
                                            "default": null,
                                            "description": "The database engine to use"
                                        },
                                        "engine_version": {
                                            "default": null,
                                            "description": "The engine version to use"
                                        },
                                        "family": {
                                            "default": null,
                                            "description": "The family of the DB parameter group"
                                        },
                                        "final_snapshot_identifier_prefix": {
                                            "default": "final",
                                            "description": "The name which is prefixed to the final snapshot on cluster destroy"
                                        },
                                        "iam_database_authentication_enabled": {
                                            "default": false,
                                            "description": "Specifies whether or not the mappings of AWS Identity and Access Management (IAM) accounts to database accounts are enabled"
                                        },
                                        "identifier": {
                                            "description": "The name of the RDS instance"
                                        },
                                        "instance_class": {
                                            "default": null,
                                            "description": "The instance type of the RDS instance"
                                        },
                                        "instance_use_identifier_prefix": {
                                            "default": false,
                                            "description": "Determines whether to use `identifier` as is or create a unique identifier beginning with `identifier` as the specified prefix"
                                        },
                                        "iops": {
                                            "default": null,
                                            "description": "The amount of provisioned IOPS. Setting this implies a storage_type of 'io1' or `gp3`. See `notes` for limitations regarding this variable for `gp3`"
                                        },
                                        "kms_key_id": {
                                            "default": null,
                                            "description": "The ARN for the KMS encryption key. If creating an encrypted replica, set this to the destination KMS ARN. If storage_encrypted is set to true and kms_key_id is not specified the default KMS key created in your account will be used. Be sure to use the full ARN, not a key alias."
                                        },
                                        "license_model": {
                                            "default": null,
                                            "description": "License model information for this DB instance. Optional, but required for some DB engines, i.e. Oracle SE1"
                                        },
                                        "maintenance_window": {
                                            "default": null,
                                            "description": "The window to perform maintenance in. Syntax: 'ddd:hh24:mi-ddd:hh24:mi'. Eg: 'Mon:00:00-Mon:03:00'"
                                        },
                                        "major_engine_version": {
                                            "default": null,
                                            "description": "Specifies the major version of the engine that this option group should be associated with"
                                        },
                                        "max_allocated_storage": {
                                            "default": 0,
                                            "description": "Specifies the value for Storage Autoscaling"
                                        },
                                        "monitoring_interval": {
                                            "default": 0,
                                            "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60"
                                        },
                                        "monitoring_role_arn": {
                                            "default": null,
                                            "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. Must be specified if monitoring_interval is non-zero"
                                        },
                                        "monitoring_role_description": {
                                            "default": null,
                                            "description": "Description of the monitoring IAM role"
                                        },
                                        "monitoring_role_name": {
                                            "default": "rds-monitoring-role",
                                            "description": "Name of the IAM role which will be created when create_monitoring_role is enabled"
                                        },
                                        "monitoring_role_permissions_boundary": {
                                            "default": null,
                                            "description": "ARN of the policy that is used to set the permissions boundary for the monitoring IAM role"
                                        },
                                        "monitoring_role_use_name_prefix": {
                                            "default": false,
                                            "description": "Determines whether to use `monitoring_role_name` as is or create a unique identifier beginning with `monitoring_role_name` as the specified prefix"
                                        },
                                        "multi_az": {
                                            "default": false,
                                            "description": "Specifies if the RDS instance is multi-AZ"
                                        },
                                        "nchar_character_set_name": {
                                            "default": null,
                                            "description": "The national character set is used in the NCHAR, NVARCHAR2, and NCLOB data types for Oracle instances. This can't be changed."
                                        },
                                        "network_type": {
                                            "default": null,
                                            "description": "The type of network stack to use"
                                        },
                                        "option_group_description": {
                                            "default": null,
                                            "description": "The description of the option group"
                                        },
                                        "option_group_name": {
                                            "default": null,
                                            "description": "Name of the option group"
                                        },
                                        "option_group_timeouts": {
                                            "default": {},
                                            "description": "Define maximum timeout for deletion of `aws_db_option_group` resource"
                                        },
                                        "option_group_use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether to use `option_group_name` as is or create a unique name beginning with the `option_group_name` as the prefix"
                                        },
                                        "options": {
                                            "default": [],
                                            "description": "A list of Options to apply"
                                        },
                                        "parameter_group_description": {
                                            "default": null,
                                            "description": "Description of the DB parameter group to create"
                                        },
                                        "parameter_group_name": {
                                            "default": null,
                                            "description": "Name of the DB parameter group to associate or create"
                                        },
                                        "parameter_group_use_name_prefix": {
                                            "default": true,
                                            "description": "Determines whether to use `parameter_group_name` as is or create a unique name beginning with the `parameter_group_name` as the prefix"
                                        },
                                        "parameters": {
                                            "default": [],
                                            "description": "A list of DB parameters (map) to apply"
                                        },
                                        "password": {
                                            "default": null,
                                            "description": "  Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file.\n  The password provided will not be used if the variable create_random_password is set to true.\n",
                                            "sensitive": true
                                        },
                                        "performance_insights_enabled": {
                                            "default": false,
                                            "description": "Specifies whether Performance Insights are enabled"
                                        },
                                        "performance_insights_kms_key_id": {
                                            "default": null,
                                            "description": "The ARN for the KMS key to encrypt Performance Insights data"
                                        },
                                        "performance_insights_retention_period": {
                                            "default": 7,
                                            "description": "The amount of time in days to retain Performance Insights data. Valid values are `7`, `731` (2 years) or a multiple of `31`"
                                        },
                                        "port": {
                                            "default": null,
                                            "description": "The port on which the DB accepts connections"
                                        },
                                        "publicly_accessible": {
                                            "default": false,
                                            "description": "Bool to control if instance is publicly accessible"
                                        },
                                        "putin_khuylo": {
                                            "default": true,
                                            "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
                                        },
                                        "random_password_length": {
                                            "default": 16,
                                            "description": "Length of random password to create"
                                        },
                                        "replica_mode": {
                                            "default": null,
                                            "description": "Specifies whether the replica is in either mounted or open-read-only mode. This attribute is only supported by Oracle instances. Oracle replicas operate in open-read-only mode unless otherwise specified"
                                        },
                                        "replicate_source_db": {
                                            "default": null,
                                            "description": "Specifies that this resource is a Replicate database, and to use this value as the source database. This correlates to the identifier of another Amazon RDS Database to replicate"
                                        },
                                        "restore_to_point_in_time": {
                                            "default": null,
                                            "description": "Restore to a point in time (MySQL is NOT supported)"
                                        },
                                        "s3_import": {
                                            "default": null,
                                            "description": "Restore from a Percona Xtrabackup in S3 (only MySQL is supported)"
                                        },
                                        "skip_final_snapshot": {
                                            "default": false,
                                            "description": "Determines whether a final DB snapshot is created before the DB instance is deleted. If true is specified, no DBSnapshot is created. If false is specified, a DB snapshot is created before the DB instance is deleted"
                                        },
                                        "snapshot_identifier": {
                                            "default": null,
                                            "description": "Specifies whether or not to create this database from a snapshot. This correlates to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05"
                                        },
                                        "storage_encrypted": {
                                            "default": true,
                                            "description": "Specifies whether the DB instance is encrypted"
                                        },
                                        "storage_throughput": {
                                            "default": null,
                                            "description": "Storage throughput value for the DB instance. See `notes` for limitations regarding this variable for `gp3`"
                                        },
                                        "storage_type": {
                                            "default": null,
                                            "description": "One of 'standard' (magnetic), 'gp2' (general purpose SSD), 'gp3' (new generation of general purpose SSD), or 'io1' (provisioned IOPS SSD). The default is 'io1' if iops is specified, 'gp2' if not. If you specify 'io1' or 'gp3' , you must also include a value for the 'iops' parameter"
                                        },
                                        "subnet_ids": {
                                            "default": [],
                                            "description": "A list of VPC subnet IDs"
                                        },
                                        "tags": {
                                            "default": {},
                                            "description": "A mapping of tags to assign to all resources"
                                        },
                                        "timeouts": {
                                            "default": {},
                                            "description": "Updated Terraform resource management timeouts. Applies to `aws_db_instance` in particular to permit resource management times"
                                        },
                                        "timezone": {
                                            "default": null,
                                            "description": "Time zone of the DB instance. timezone is currently only supported by Microsoft SQL Server. The timezone can only be set on creation. See MSSQL User Guide for more information"
                                        },
                                        "username": {
                                            "default": null,
                                            "description": "Username for the master DB user"
                                        },
                                        "vpc_security_group_ids": {
                                            "default": [],
                                            "description": "List of VPC security groups to associate"
                                        }
                                    }
                                },
                                "version_constraint": "~\u003e 5.0"
                            }
                        },
                        "variables": {
                            "database_subnet_group": {
                                "description": "database_subnet_group"
                            },
                            "db_allocated_storage": {
                                "default": 20,
                                "description": "The allocated storage for the database"
                            },
                            "db_engine": {
                                "default": "postgres",
                                "description": "The engine for the database"
                            },
                            "db_engine_version": {
                                "default": "12",
                                "description": "The engine version for the database"
                            },
                            "db_family": {
                                "default": "postgres12",
                                "description": "The engine for the database"
                            },
                            "db_identifier": {
                                "description": "The identifier for the RDS instance"
                            },
                            "db_instance_class": {
                                "default": "db.t3.medium",
                                "description": "The instance type for the database"
                            },
                            "db_max_allocated_storage": {
                                "default": 100,
                                "description": "The allocated storage for the database"
                            },
                            "db_name": {
                                "description": "The name of the database"
                            },
                            "db_port": {
                                "default": 5432,
                                "description": "The name of the database"
                            },
                            "db_reader_instance_class": {
                                "default": "db.t3.small",
                                "description": "The instance type for the database"
                            },
                            "db_username": {
                                "description": "The master username for the database"
                            },
                            "load_balancer_security_group": {
                                "description": "load_balancer_security_group"
                            },
                            "project_group": {
                                "description": "The project group name"
                            },
                            "subnet_ids": {
                                "description": "A list of subnet IDs for the ECS service"
                            },
                            "vpc_id": {
                                "description": "vpc_id"
                            },
                            "vpc_security_group_ids": {
                                "description": "A list of Security Group IDs for the ECS service"
                            }
                        }
                    }
                },
                "route53": {
                    "source": "./r53",
                    "expressions": {
                        "dns_zone": {
                            "references": [
                                "aws_route53_zone.primary.zone_id",
                                "aws_route53_zone.primary"
                            ]
                        },
                        "environment": {
                            "references": [
                                "var.environment"
                            ]
                        },
                        "lb_dns_name": {
                            "references": [
                                "module.load_balancer.load_balancer_dns_name",
                                "module.load_balancer"
                            ]
                        },
                        "lb_zone_id": {
                            "references": [
                                "module.load_balancer.load_balancer_zone_id",
                                "module.load_balancer"
                            ]
                        },
                        "region": {
                            "references": [
                                "var.region"
                            ]
                        }
                    },
                    "module": {
                        "resources": [
                            {
                                "address": "aws_route53_record.api",
                                "mode": "managed",
                                "type": "aws_route53_record",
                                "name": "api",
                                "provider_config_key": "module.route53:aws",
                                "expressions": {
                                    "alias": [
                                        {
                                            "evaluate_target_health": {
                                                "constant_value": true
                                            },
                                            "name": {
                                                "references": [
                                                    "var.lb_dns_name"
                                                ]
                                            },
                                            "zone_id": {
                                                "references": [
                                                    "var.lb_zone_id"
                                                ]
                                            }
                                        }
                                    ],
                                    "name": {
                                        "constant_value": "*.api"
                                    },
                                    "type": {
                                        "constant_value": "A"
                                    },
                                    "zone_id": {
                                        "references": [
                                            "var.dns_zone"
                                        ]
                                    }
                                },
                                "schema_version": 2
                            },
                            {
                                "address": "aws_route53_record.app",
                                "mode": "managed",
                                "type": "aws_route53_record",
                                "name": "app",
                                "provider_config_key": "module.route53:aws",
                                "expressions": {
                                    "alias": [
                                        {
                                            "evaluate_target_health": {
                                                "constant_value": true
                                            },
                                            "name": {
                                                "references": [
                                                    "var.lb_dns_name"
                                                ]
                                            },
                                            "zone_id": {
                                                "references": [
                                                    "var.lb_zone_id"
                                                ]
                                            }
                                        }
                                    ],
                                    "name": {
                                        "constant_value": "*.app"
                                    },
                                    "type": {
                                        "constant_value": "A"
                                    },
                                    "zone_id": {
                                        "references": [
                                            "var.dns_zone"
                                        ]
                                    }
                                },
                                "schema_version": 2
                            },
                            {
                                "address": "aws_route53_record.other_all",
                                "mode": "managed",
                                "type": "aws_route53_record",
                                "name": "other_all",
                                "provider_config_key": "module.route53:aws",
                                "expressions": {
                                    "alias": [
                                        {
                                            "evaluate_target_health": {
                                                "constant_value": true
                                            },
                                            "name": {
                                                "references": [
                                                    "var.lb_dns_name"
                                                ]
                                            },
                                            "zone_id": {
                                                "references": [
                                                    "var.lb_zone_id"
                                                ]
                                            }
                                        }
                                    ],
                                    "name": {
                                        "constant_value": "*"
                                    },
                                    "type": {
                                        "constant_value": "A"
                                    },
                                    "zone_id": {
                                        "references": [
                                            "var.dns_zone"
                                        ]
                                    }
                                },
                                "schema_version": 2
                            },
                            {
                                "address": "aws_route53_record.www",
                                "mode": "managed",
                                "type": "aws_route53_record",
                                "name": "www",
                                "provider_config_key": "module.route53:aws",
                                "expressions": {
                                    "alias": [
                                        {
                                            "evaluate_target_health": {
                                                "constant_value": true
                                            },
                                            "name": {
                                                "references": [
                                                    "var.lb_dns_name"
                                                ]
                                            },
                                            "zone_id": {
                                                "references": [
                                                    "var.lb_zone_id"
                                                ]
                                            }
                                        }
                                    ],
                                    "name": {
                                        "constant_value": "www"
                                    },
                                    "type": {
                                        "constant_value": "A"
                                    },
                                    "zone_id": {
                                        "references": [
                                            "var.dns_zone"
                                        ]
                                    }
                                },
                                "schema_version": 2
                            }
                        ],
                        "variables": {
                            "dns_zone": {
                                "description": "The ID of the Route 53 hosted zone"
                            },
                            "environment": {
                                "description": "The environment of Project"
                            },
                            "lb_dns_name": {
                                "description": "The DNS name of the load balancer"
                            },
                            "lb_zone_id": {
                                "description": "The zone ID of the load balancer"
                            },
                            "region": {
                                "description": "The AWS region to deploy the resources"
                            }
                        }
                    }
                },
                "security_groups": {
                    "source": "./sg",
                    "expressions": {
                        "project_group": {
                            "references": [
                                "var.project_group"
                            ]
                        },
                        "vpc_id": {
                            "references": [
                                "module.network.vpc_id",
                                "module.network"
                            ]
                        }
                    },
                    "module": {
                        "outputs": {
                            "ecs_security_group_id": {
                                "expression": {
                                    "references": [
                                        "aws_security_group.ecs.id",
                                        "aws_security_group.ecs"
                                    ]
                                }
                            },
                            "rds_security_group_id": {
                                "expression": {
                                    "references": [
                                        "aws_security_group.rds.id",
                                        "aws_security_group.rds"
                                    ]
                                }
                            }
                        },
                        "resources": [
                            {
                                "address": "aws_security_group.ecs",
                                "mode": "managed",
                                "type": "aws_security_group",
                                "name": "ecs",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "constant_value": "Security group for ECS"
                                    },
                                    "egress": {
                                        "constant_value": [
                                            {
                                                "cidr_blocks": [
                                                    "0.0.0.0/0"
                                                ],
                                                "description": null,
                                                "from_port": 0,
                                                "ipv6_cidr_blocks": null,
                                                "prefix_list_ids": null,
                                                "protocol": "-1",
                                                "security_groups": null,
                                                "self": null,
                                                "to_port": 0
                                            }
                                        ]
                                    },
                                    "ingress": {
                                        "constant_value": [
                                            {
                                                "cidr_blocks": [
                                                    "0.0.0.0/0"
                                                ],
                                                "description": null,
                                                "from_port": 443,
                                                "ipv6_cidr_blocks": null,
                                                "prefix_list_ids": null,
                                                "protocol": "tcp",
                                                "security_groups": null,
                                                "self": null,
                                                "to_port": 443
                                            },
                                            {
                                                "cidr_blocks": [
                                                    "0.0.0.0/0"
                                                ],
                                                "description": null,
                                                "from_port": 80,
                                                "ipv6_cidr_blocks": null,
                                                "prefix_list_ids": null,
                                                "protocol": "tcp",
                                                "security_groups": null,
                                                "self": null,
                                                "to_port": 80
                                            }
                                        ]
                                    },
                                    "name": {
                                        "constant_value": "ecs-security-group"
                                    },
                                    "tags": {
                                        "references": [
                                            "var.project_group"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "var.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1
                            },
                            {
                                "address": "aws_security_group.rds",
                                "mode": "managed",
                                "type": "aws_security_group",
                                "name": "rds",
                                "provider_config_key": "aws",
                                "expressions": {
                                    "description": {
                                        "constant_value": "Security group for RDS"
                                    },
                                    "egress": {
                                        "constant_value": [
                                            {
                                                "cidr_blocks": [
                                                    "0.0.0.0/0"
                                                ],
                                                "description": null,
                                                "from_port": 0,
                                                "ipv6_cidr_blocks": null,
                                                "prefix_list_ids": null,
                                                "protocol": "-1",
                                                "security_groups": null,
                                                "self": null,
                                                "to_port": 0
                                            }
                                        ]
                                    },
                                    "ingress": {
                                        "constant_value": [
                                            {
                                                "cidr_blocks": [
                                                    "0.0.0.0/0"
                                                ],
                                                "description": null,
                                                "from_port": 5432,
                                                "ipv6_cidr_blocks": null,
                                                "prefix_list_ids": null,
                                                "protocol": "tcp",
                                                "security_groups": null,
                                                "self": null,
                                                "to_port": 5432
                                            }
                                        ]
                                    },
                                    "name": {
                                        "constant_value": "rds-security-group"
                                    },
                                    "tags": {
                                        "references": [
                                            "var.project_group"
                                        ]
                                    },
                                    "vpc_id": {
                                        "references": [
                                            "var.vpc_id"
                                        ]
                                    }
                                },
                                "schema_version": 1
                            }
                        ],
                        "variables": {
                            "project_group": {
                                "description": "The project group name"
                            },
                            "vpc_id": {
                                "description": "The ID of the VPC"
                            }
                        }
                    }
                }
            },
            "variables": {
                "domain_name": {
                    "default": "flipeon.com",
                    "description": "The domain name of project"
                },
                "environment": {
                    "default": "dev",
                    "description": "The environment of Project"
                },
                "project_group": {
                    "default": "grp-flipeon-dev",
                    "description": "The name of Project Group for add management tags"
                },
                "project_name": {
                    "default": "flipeon",
                    "description": "The name of project"
                },
                "region": {
                    "default": "us-east-1",
                    "description": "The AWS region to deploy in"
                },
                "use_eks": {
                    "default": false,
                    "description": "Set to true to use EKS and false to use ECS"
                }
            }
        }
    },
    "relevant_attributes": [
        {
            "resource": "module.load_balancer.aws_lb_target_group.application",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_subnet.elasticache",
            "attribute": []
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "db_name"
            ]
        },
        {
            "resource": "module.logs_bucket.aws_s3_bucket.bucket",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_internet_gateway.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.load_balancer.aws_lb.application",
            "attribute": [
                "zone_id"
            ]
        },
        {
            "resource": "module.ecs_api.aws_ecs_task_definition.main",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.security_groups.aws_security_group.ecs",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_subnet.redshift",
            "attribute": []
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "engine_version_actual"
            ]
        },
        {
            "resource": "aws_route53_zone.primary",
            "attribute": [
                "zone_id"
            ]
        },
        {
            "resource": "module.rds.random_password.db_password",
            "attribute": [
                "result"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "attribute": []
        },
        {
            "resource": "module.rds.module.db.module.db_instance.random_id.snapshot_identifier[0]",
            "attribute": [
                "hex"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_subnet.outpost",
            "attribute": []
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_iam_role.enhanced_monitoring[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "hosted_zone_id"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "engine"
            ]
        },
        {
            "resource": "module.logs_bucket.aws_s3_bucket.bucket",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_route_table.public[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_vpc.this[0]",
            "attribute": [
                "ipv6_association_id"
            ]
        },
        {
            "resource": "module.logs_bucket.aws_s3_bucket.bucket",
            "attribute": [
                "bucket_domain_name"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_iam_role.enhanced_monitoring[0]",
            "attribute": [
                "name"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_subnet.database",
            "attribute": []
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "username"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_subnet.public",
            "attribute": []
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_cloudwatch_log_group.this",
            "attribute": []
        },
        {
            "resource": "module.rds.module.db.module.db_subnet_group.aws_db_subnet_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_db_subnet_group.database[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_parameter_group.aws_db_parameter_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_vpc.this[0]",
            "attribute": [
                "owner_id"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_vpc.this[0]",
            "attribute": [
                "default_security_group_id"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_subnet_group.aws_db_subnet_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "port"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "address"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_route_table.public",
            "attribute": []
        },
        {
            "resource": "module.rds.module.db.module.db_option_group.aws_db_option_group.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.load_balancer.aws_lb.application",
            "attribute": [
                "security_groups"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_cloudwatch_log_group.flow_log[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.load_balancer.aws_lb.application",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_vpc.this[0]",
            "attribute": [
                "enable_dns_support"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_vpc.this[0]",
            "attribute": [
                "cidr_block"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_vpc.this[0]",
            "attribute": [
                "main_route_table_id"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.ecs_api.aws_iam_role.ecs_task_execution",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_customer_gateway.this",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_route_table_association.elasticache",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_internet_gateway.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "endpoint"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.ecs_app.aws_ecs_task_definition.main",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_vpc.this[0]",
            "attribute": [
                "instance_tenancy"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_route_table_association.redshift",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_route.database_nat_gateway",
            "attribute": []
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "listener_endpoint"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_route_table.redshift",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_nat_gateway.this",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_route_table_association.database",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_route_table.elasticache",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_route_table_association.public",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_route.public_internet_gateway[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "availability_zone"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "password"
            ]
        },
        {
            "resource": "module.rds.module.db.random_password.master_password[0]",
            "attribute": [
                "result"
            ]
        },
        {
            "resource": "module.ecs_app.aws_ecs_cluster.main",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_vpc.this[0]",
            "attribute": [
                "arn"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_option_group.aws_db_option_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_subnet.intra",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_route_table_association.intra",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_route.private_ipv6_egress",
            "attribute": []
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "resource_id"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_route.private_nat_gateway",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_vpc.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_vpc.this[0]",
            "attribute": [
                "ipv6_cidr_block"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_egress_only_internet_gateway.this",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this[0]",
            "attribute": [
                "vpc_id"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_subnet.private",
            "attribute": []
        },
        {
            "resource": "module.rds.module.db.module.db_parameter_group.aws_db_parameter_group.this[0]",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_vpc.this[0]",
            "attribute": [
                "enable_dns_hostnames"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_route_table.intra",
            "attribute": []
        },
        {
            "resource": "module.security_groups.aws_security_group.rds",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_route_table_association.redshift_public",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_vpc.this[0]",
            "attribute": [
                "default_network_acl_id"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_route_table.private",
            "attribute": []
        },
        {
            "resource": "module.load_balancer.aws_lb.application",
            "attribute": [
                "dns_name"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_route_table.database",
            "attribute": []
        },
        {
            "resource": "module.network.module.vpc.aws_route_table_association.private",
            "attribute": []
        },
        {
            "resource": "module.ecs_api.aws_ecs_cluster.main",
            "attribute": [
                "id"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_eip.nat",
            "attribute": []
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "status"
            ]
        },
        {
            "resource": "module.rds.module.db.module.db_instance.aws_db_instance.this[0]",
            "attribute": [
                "ca_cert_identifier"
            ]
        },
        {
            "resource": "module.network.module.vpc.aws_vpc.this[0]",
            "attribute": [
                "default_route_table_id"
            ]
        },
        {
            "resource": "module.ecs_app.aws_iam_role.ecs_task_execution",
            "attribute": [
                "arn"
            ]
        }
    ],
    "timestamp": "2024-07-12T12:46:36Z",
    "applyable": true,
    "complete": true,
    "errored": false
}